<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.aayu.today</id>
    <title>学无止境</title>
    <subtitle>阿宇的可爱博客</subtitle>
    <icon>https://blog.aayu.today/images/favicon.ico</icon>
    <link href="https://blog.aayu.today" />
    <author>
      <name>宇凌喵</name>
    </author>
    <updated>2022-06-18T16:00:00.000Z</updated>
    <category term="HoloLens" />
    <category term=" NAS" />
    <entry>
        <id>https://blog.aayu.today/english/reading/20220619/</id>
        <title>Daily Reading: The Capitol-riot hearings: High time for prime time</title>
        <link rel="alternate" href="https://blog.aayu.today/english/reading/20220619/"/>
        <content type="html">&lt;h2 id=&#34;文章来源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文章来源&#34;&gt;#&lt;/a&gt; 文章来源&lt;/h2&gt;
&lt;p&gt;The Economist: June 11th - 17th 2022&lt;/p&gt;
&lt;h2 id=&#34;标题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标题&#34;&gt;#&lt;/a&gt; 标题&lt;/h2&gt;
&lt;p&gt;The Capitol-riot hearings: High time for prime time 国会暴动听证会：黄金时间的到来&lt;/p&gt;
&lt;p&gt;Why America’s probe into the attempted coup last year is needed, before it’s too late 为什么美国需要对去年的未遂政变进行调查，否则就太晚了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/06/19/1f9cc6772ee8f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;全文速览&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#全文速览&#34;&gt;#&lt;/a&gt; 全文速览&lt;/h2&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;英文全文&#34;&gt;
&lt;p&gt;The essence of what happened on January 6th 2021 is well-known, if still shocking to recall. A mob stormed the Capitol in Washington, dc, in an effort to prevent Congress from certifying Joe Biden’s election victory. Four people in the crowd died that day, and five police officers in its aftermath. Members of Congress had to be rushed to a secure location in a basement. Rioters erected a mock gallows and chanted “Hang Mike Pence”. And the man who inspired all this was the president himself, who had urged his followers to help overturn his election defeat. As the Republicans’ leader in the Senate, Mitch McConnell, told the Senate a few weeks later, Donald Trump was “practically and morally responsible” for these events: “The people who stormed this building believed they were acting on the wishes and instructions of their president.”&lt;/p&gt;
&lt;p&gt;So what is the point of the public hearings of the House committee probing the insurrection due to start on June 9th? From Thursday’s prime-time political theatre to half a dozen sessions that will follow before a final report in September, the coverage will be viewed very differently on either side of a polarised country. Commentators on the right will belittle it all as a witch hunt. And after November’s mid-term elections, in which the Republicans look likely to win control of the House, they can be counted on to bury the matter.&lt;/p&gt;
&lt;p&gt;Yet that ticking clock gives an urgency to the proceedings, which matter profoundly, for three reasons. One flows from the basic workings of democracy: institutions must do their job. It is the task of Congress to probe how an assault on the Capitol happened and conclude what lessons can be learned. Its nine-member committee—seven Democrats and two principled Republicans, Liz Cheney and Adam Kinzinger—has gone about it in a commendably thorough, bipartisan way, despite much resistance. On June 3rd the Department of Justice charged Peter Navarro, a former economic adviser to Mr Trump, for refusing to co-operate with the committee (though it strangely decided not to act against Mark Meadows, the White House chief of staff at the time of the riot, despite similar obstructionism).&lt;/p&gt;
&lt;p&gt;Second, though the core of the story is known, many vital details are not—especially concerning the extent of the coup’s planning and how directly the president was involved. Some revealing details, such as text messages from Mr Trump’s family to Mr Meadows urging him to persuade his boss to stop the riot, have dribbled out in the course of the committee’s work so far. More can be expected in the public hearings, given that they will draw on information gleaned from more than 1,000 depositions and interviews and over 140,000 documents.&lt;/p&gt;
&lt;p&gt;A flow of fresh facts about the depth of plotting would reinforce the third reason why these hearings are important: the threat is not over. True, America’s democracy prevailed despite the attack. Members of Congress were eventually able to go back into the chamber and they duly certified the election (albeit that, despite the violence that had occurred that day, 138 Republican House members still voted to reject the results in Pennsylvania). Mr Biden became president. But even now 60% of Republicans believe Mr Trump’s lie that the election was stolen. And the party has decided that the insurrection was not serious enough to break with Mr Trump, leaving him the front-runner for the Republican nomination in 2024. If Republicans select him, Mr McConnell says he will back him.&lt;/p&gt;
&lt;p&gt;Astonishing as it may seem, given what is already known about his efforts to thwart the will of the electorate, let alone what may be discovered, Mr Trump could well win back the presidency legitimately. In case he does not, his supporters are striving to put in place officials who may make a future challenge to the voters’ verdict succeed. The committee’s work, including the public hearings, is a vital part of the eternal vigilance that, more than ever, is needed to defend American democracy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;tab&#34; data-id=&#34;id1&#34; data-title=&#34;中文翻译&#34;&gt;
&lt;p&gt;2021 年 1 月 6 日发生的事情的本质是众所周知的，如果回忆起来仍然令人震惊。一群暴徒冲进华盛顿特区的国会大厦，试图阻止国会认证乔 - 拜登的选举胜利。当天，人群中有 4 人死亡，5 名警察在事后死亡。国会议员不得不被紧急送往地下室的一个安全地点。骚乱者搭建了一个模拟绞架，并高呼 &amp;quot;绞死迈克 - 彭斯&amp;quot;。而激发这一切的人就是总统本人，他曾敦促他的追随者帮助推翻他的选举失败。正如共和党在参议院的领导人米奇 - 麦康奈尔几周后告诉参议院的那样，唐纳德 - 特朗普对这些事件 &amp;quot;实际上和道德上都有责任&amp;quot;。&amp;quot;冲进这座大楼的人认为他们是按照他们的总统的意愿和指示行事。&amp;quot;&lt;/p&gt;
&lt;p&gt;那么，将于 6 月 9 日开始的众议院委员会调查叛乱的公开听证会的意义何在？从周四的黄金时段的政治戏剧到随后的半打会议，再到 9 月的最终报告，在这个两极分化的国家里，人们对这些报道的看法会非常不同。右派的评论员会把这一切贬低为猎奇。而在 11 月的中期选举之后，共和党看起来有可能赢得对众议院的控制权，可以指望他们将此事埋葬。&lt;/p&gt;
&lt;p&gt;然而，这个滴答作响的钟声给这个程序带来了紧迫感，它关系重大，原因有三。一个原因来自于民主的基本运作：机构必须做好自己的工作。国会的任务是调查对国会大厦的攻击是如何发生的，并总结出可以吸取的教训。其九名成员组成的委员会 -- 七名民主党人和两名有原则的共和党人利兹 - 切尼和亚当 - 金辛格 -- 以值得称道的彻底、两党合作的方式进行调查，尽管有很多阻力。6 月 3 日，司法部指控特朗普先生的前经济顾问彼得 - 纳瓦罗 (Peter Navarro) 拒绝与委员会合作（但奇怪的是，尽管有类似的阻挠行为，司法部还是决定不对骚乱发生时的白宫幕僚长马克 - 梅多斯 (Mark Meadows) 采取行动）。&lt;/p&gt;
&lt;p&gt;第二，虽然故事的核心内容已经知道，但许多重要的细节并不清楚，特别是关于政变的计划程度以及总统如何直接参与。在委员会迄今为止的工作过程中，一些具有启发性的细节，如特朗普先生的家人给梅多斯先生的短信，敦促他劝说他的老板停止暴乱，已经流传出来。鉴于公开听证会将利用从 1000 多份证词和访谈以及 14 万多份文件中收集到的信息，可以预期会有更多的细节。&lt;/p&gt;
&lt;p&gt;关于阴谋深度的新事实的流动将加强这些听证会重要的第三个原因：威胁并没有结束。诚然，尽管发生了袭击，美国的民主还是取得了胜利。国会议员最终能够回到会议厅，他们正式认证了选举（尽管当天发生了暴力事件，但仍有 138 名共和党众议员投票反对宾夕法尼亚州的选举结果）。拜登先生成为总统。但即使是现在，也有 60% 的共和党人相信特朗普先生的谎言，即选举被盗。而该党已经决定，叛乱还没有严重到与特朗普先生决裂的地步，让他成为 2024 年共和党提名的领跑者。如果共和党人选择他，麦康奈尔先生说他会支持他。&lt;/p&gt;
&lt;p&gt;尽管看起来令人吃惊，但考虑到他阻挠选民意愿的努力已经为人所知，更不用说可能发现的情况，特朗普先生很可能合法地赢回总统职位。如果他不这样做，他的支持者正在努力安排一些官员，他们可能会使未来对选民裁决的挑战取得成功。委员会的工作，包括公开听证会，是捍卫美国民主比以往任何时候都更需要的永恒的警惕的重要组成部分。&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;长难句分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#长难句分析&#34;&gt;#&lt;/a&gt; 长难句分析&lt;/h2&gt;
&lt;p&gt;待更&lt;/p&gt;
</content>
        <category term="英语学习之路" scheme="https://blog.aayu.today/categories/english/" />
        <category term="每日精读" scheme="https://blog.aayu.today/categories/english/reading/" />
        <category term="每日精读" scheme="https://blog.aayu.today/tags/%E6%AF%8F%E6%97%A5%E7%B2%BE%E8%AF%BB/" />
        <updated>2022-06-18T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/leisure/mood/20220519/</id>
        <title>DIY的一个超好看的小夜灯</title>
        <link rel="alternate" href="https://blog.aayu.today/leisure/mood/20220519/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;最近在 B 站上看到一个 DIY 小夜灯的教程，实物真的要比照片好看～～&lt;/p&gt;
&lt;p&gt;520 要到啦，自己 DIY 一个送给对象，是个很不错的礼物～～&lt;/p&gt;
&lt;h2 id=&#34;小夜灯&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#小夜灯&#34;&gt;#&lt;/a&gt; 小夜灯&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/19/7a917a89b6e39.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;教程链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#教程链接&#34;&gt;#&lt;/a&gt; 教程链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXNVNHkxYzdOeQ==&#34;&gt;成本 20 手把手教：3D 打印有趣的小夜灯，超级好看！大鱼 DIY 原创，含资料图纸！&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="清风明月" scheme="https://blog.aayu.today/categories/leisure/" />
        <category term="心情" scheme="https://blog.aayu.today/categories/leisure/mood/" />
        <category term="心情" scheme="https://blog.aayu.today/tags/%E5%BF%83%E6%83%85/" />
        <updated>2022-05-18T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/hardware/raspberry-pi/20220516/</id>
        <title>树莓派4B安装向日葵踩坑笔记</title>
        <link rel="alternate" href="https://blog.aayu.today/hardware/raspberry-pi/20220516/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;近期在捣鼓树莓派，已经在树莓派上成功用 VNC 进行了远程桌面连接，那么便想尝试能否用向日葵连接树莓派，这一尝试便踩了不少坑，而且国内关于这方面的资料也挺少，于是便把自己的踩坑经历记录下来～&lt;/p&gt;
&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;p&gt;我用的是完整版的 Raspberry Pi OS 64 位系统，注意是 64 位系统哦，可以用上海交通大学 SJTUG 镜像站下载，下载速度很快，链接如下～&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9taXJyb3JzLnNqdHVnLnNqdHUuZWR1LmNuL3Jhc3BiZXJyeS1waS1vcy1pbWFnZXMvcmFzcGlvc19mdWxsX2FybTY0L2ltYWdlcy8=&#34;&gt;Raspberry Pi OS 64&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;更多镜像的下载链接和介绍可以看这篇博文：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2E0OTYyOTg2ODUvYXJ0aWNsZS9kZXRhaWxzLzEwODkwOTkyNw==&#34;&gt;使用国内镜像站下载树莓派 Raspberry Pi OS 操作系统&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最终烧录好的系统如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Linux raspberrypi 5.15.32-v8+ #1538 SMP PREEMPT Thu Mar 31 19:40:39 BST 2022 aarch64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;下载安装包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载安装包&#34;&gt;#&lt;/a&gt; 下载安装包&lt;/h2&gt;
&lt;p&gt;去向日葵的官网下载 Linux 的安装包&lt;/p&gt;
&lt;p&gt;因为我们的系统是 arm64 位的，而向日葵的「UOS」和「麒麟」这两个应用平台提供 arm64 版本的架构，这里我选择「麒麟」应用平台的 arm64 版本安装包&lt;/p&gt;
&lt;p&gt;下载完安装包后就可以在树莓派里用如下命令安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dpkg -i SunloginClient_11.0.1.44968_kylin_arm.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但会发现报错，报错如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/16/b3fa5e9133894.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;从报错信息中可以，缺少  &lt;code&gt;libappindicator3-1&lt;/code&gt;  这个依赖包&lt;/p&gt;
&lt;h2 id=&#34;解决缺少依赖问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决缺少依赖问题&#34;&gt;#&lt;/a&gt; 解决缺少依赖问题&lt;/h2&gt;
&lt;p&gt;首先尝试用  &lt;code&gt;sudo apt-get install libappindicator3-1&lt;/code&gt;  去安装依赖，发现源里没有这个依赖包&lt;/p&gt;
&lt;p&gt;没办法，那就直接下载好这个依赖包然后手动安装吧，经过查阅资料，从 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ0NzQ3Ny9hcnRpY2xlL2RldGFpbHMvMTE1MTg4OTM4&#34;&gt;这篇博客中&lt;/span&gt; 找到了相关的下载链接&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMudXN0Yy5lZHUuY24vZGViaWFuL3Bvb2wvbWFpbi9saWJhL2xpYmFwcGluZGljYXRvci8=&#34;&gt;libappindicator3-1 官方下载链接&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们找到 arm64 架构的进行下载，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/16/0ac959820f764.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下载完成后先用  &lt;code&gt;sudo apt --fix-broken install&lt;/code&gt;  命令进行依赖包错误的修复，然后再用  &lt;code&gt;sudo dpkg -i libappindicator3-1_0.4.92-7_arm64.deb&lt;/code&gt;  安装刚刚下载好的依赖包&lt;/p&gt;
&lt;p&gt;结果事与愿违，依然报错啦，报错截图如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/16/fb0a62fe6909f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到还缺少了  &lt;code&gt;libdbusmenu-glib4&lt;/code&gt; ， &lt;code&gt;libdbusmenu-gtk3-4&lt;/code&gt; ， &lt;code&gt;libindicator3-7&lt;/code&gt;  这三个依赖包&lt;/p&gt;
&lt;p&gt;好吧，那再次尝试把这三个依赖包看能不能安装上吧，还是先用  &lt;code&gt;sudo apt --fix-broken install&lt;/code&gt;  命令进行依赖包错误的修复，然后尝试看本地源里有无依赖包，终于来好运了，本地源里有  &lt;code&gt;libdbusmenu-glib4&lt;/code&gt; ， &lt;code&gt;libdbusmenu-gtk3-4&lt;/code&gt;  这两个依赖包，用如下命令安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install libdbusmenu-glib4
sudo apt-get install libdbusmenu-gtk3-4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在尝试用本地源安装  &lt;code&gt;libindicator3-7&lt;/code&gt;  时发现没有，那就还是自己下载依赖包手动安装吧，下载链接如下&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pcnJvcnMudXN0Yy5lZHUuY24vZGViaWFuL3Bvb2wvbWFpbi9saWJpL2xpYmluZGljYXRvci8=&#34;&gt;libindicator3-7 官方下载链接&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;我们依然选择 arm64 架构的进行下载，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/16/c8f687dd6d8f7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下载好后就可以用  &lt;code&gt;sudo dpkg -i libindicator3-7_0.5.0-4_arm64.deb&lt;/code&gt;  命令进行安装啦&lt;/p&gt;
&lt;p&gt;终于把这三个依赖包都安装好了，然后再次用  &lt;code&gt;sudo dpkg -i libappindicator3-1_0.4.92-7_arm64.deb&lt;/code&gt;  安装最开始报错的依赖包，结果终于不报错啦，接下来终于可以尝试再次安装向日葵的安装包啦，安装命令如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dpkg -i SunloginClient_11.0.1.44968_kylin_arm.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;终于，安装成功！结果如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/16/c92d4247ba514.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;启动向日葵&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动向日葵&#34;&gt;#&lt;/a&gt; 启动向日葵&lt;/h2&gt;
&lt;p&gt;在树莓派上终于安好向日葵了，那向日葵怎么启动呢，可以在菜单栏里找到向日葵，如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/16/907d31ab2f6c1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;成功运行向日葵，如下～～&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/16/b2742e182bbd4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;相关链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#相关链接&#34;&gt;#&lt;/a&gt; 相关链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2E0OTYyOTg2ODUvYXJ0aWNsZS9kZXRhaWxzLzEwODkwOTkyNw==&#34;&gt;使用国内镜像站下载树莓派 Raspberry Pi OS 操作系统&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ0NzQ3Ny9hcnRpY2xlL2RldGFpbHMvMTE1MTg4OTM4&#34;&gt;无法定位软件包：libappindicator3-1_libappindicator3-1 软件包安装失败&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="硬件修炼手册" scheme="https://blog.aayu.today/categories/hardware/" />
        <category term="树莓派" scheme="https://blog.aayu.today/categories/hardware/raspberry-pi/" />
        <category term="RaspberryPi" scheme="https://blog.aayu.today/tags/RaspberryPi/" />
        <updated>2022-05-15T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/skill/tools/20220510/</id>
        <title>NoteExpress七个隐藏的实用技巧</title>
        <link rel="alternate" href="https://blog.aayu.today/skill/tools/20220510/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;NoteExpress 可以说是国内最专业的文献检索与管理系统了，对比 Endnote 来说，它最大的优点是对中文文献管理非常友好！对于需要发中文核心的科研人员来说，特别推荐！&lt;/p&gt;
&lt;h2 id=&#34;笔记添加&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#笔记添加&#34;&gt;#&lt;/a&gt; 笔记添加&lt;/h2&gt;
&lt;p&gt;在预览区的倒数第 2 个位置就是「笔记」选项卡，在这里可以做笔记。各栏位置可以用鼠标拖动进行调整。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/883b8b000400e.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;笔记不仅可以插入文字，还可以插入图片和表格。&lt;/p&gt;
&lt;p&gt;文字插入大家应该都会，不需要多讲；&lt;/p&gt;
&lt;p&gt;关于图片、表格以及一些超链接的插入，只需要点击相应的图标，然后在文件夹里选中需要插入的内容就可以了！最后，点击「保存」这个图标就可以了。&lt;/p&gt;
&lt;p&gt;一旦有笔记加入，会出现粉红色方框，这就代表笔记已经存在了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/209f42b041519.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这对我们之后查找文件帮助很大，打开文件看到特定的小红点就知道是自己想要的内容，不需要费时寻找。&lt;/p&gt;
&lt;h2 id=&#34;文献去重&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文献去重&#34;&gt;#&lt;/a&gt; 文献去重&lt;/h2&gt;
&lt;p&gt;我们在众多数据库中进行检索添加参考文献记录，不可避免的会有重复的文献。这种情况下，可以直接用 NoteExpress 进行查找去重。&lt;/p&gt;
&lt;p&gt;操作步骤也非常简单：&lt;/p&gt;
&lt;p&gt;选中左上角菜单栏的「查重」按钮，根据需要选择想要查重的文件夹和筛选条件，点击「查找」。此时，NoteExpress 会显示我们上一步筛选出来的重复文献，且左侧检索记录会记录下每一次查重的结果。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/bd99341b3a272.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/cf8a519300b5b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这时，重复的文献就会被选中，呈现深蓝色的背景颜色啦&lt;/p&gt;
&lt;p&gt;我们可以单击单篇文献，点击预览区的「位置」按钮，便可查看文献所处数据库或者文件夹的位置。&lt;/p&gt;
&lt;p&gt;根据需要，将重复文献从不必要的数据库当中删除即可。&lt;/p&gt;
&lt;p&gt;操作方式是：右键文献，选择「从所有文件夹中删除」或者「从指定文件夹中删除」。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/bd8e81799c1d8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;标签标记&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标签标记&#34;&gt;#&lt;/a&gt; 标签标记&lt;/h2&gt;
&lt;p&gt;该功能主要支持给文献添加标签，一篇文献可添加多个标签。添加之后方便文献的管理。&lt;/p&gt;
&lt;p&gt;操作方式是：选中文献，点击左上角的「标签标记」，添加合适的标签、星标或优先级，点击「确定」即可。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/aecc19871b5f9.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此时的标签云是一个超链接，点击词组标签可以跳到相应的文件（或者显示多个文件），也可点击向下的小三角对标签进行排序或隐藏。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/685ba7141df5d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;文献阅读&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文献阅读&#34;&gt;#&lt;/a&gt; 文献阅读&lt;/h2&gt;
&lt;p&gt;这是对前面一些小技巧汇了一个总，这里我把题录分成了 9 个部分。&lt;/p&gt;
&lt;p&gt;① 表示是否阅读了文献；&lt;/p&gt;
&lt;p&gt;② 表示文献类型，比如说有学位论文或者是期刊文章；&lt;/p&gt;
&lt;p&gt;③ 已经加星标，将其收藏；&lt;/p&gt;
&lt;p&gt;④ 代表优先级，这个优先级有 5 个档次；&lt;/p&gt;
&lt;p&gt;⑤ 有无附件、红色方块显示有附件，没有方块则代表没有附件；&lt;/p&gt;
&lt;p&gt;⑥ 到 ⑨ 就是年份作者标题和来源，这个暂时不多讲。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/4bdd582ed5a45.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;值得注意的是，这些选项就可以作为筛选条件来对其进行排序，我们只需要选择想要筛选的条件那里，点一下，就可以排序了。&lt;/p&gt;
&lt;p&gt;当然，还可以自定义列表头。有以下两种方法，都很简单实用。&lt;/p&gt;
&lt;p&gt;第一种：「文件夹」上右键 -「自定义列表头」-「自定义」；&lt;/p&gt;
&lt;p&gt;或者第二种方法：列表头上面右键，选择「自定义」即可。&lt;/p&gt;
&lt;h2 id=&#34;文献统计分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文献统计分析&#34;&gt;#&lt;/a&gt; 文献统计分析&lt;/h2&gt;
&lt;p&gt;没想到吧，NoteExpress 还提供了对文献记录的基本统计功能。&lt;/p&gt;
&lt;p&gt;操作方式是：&lt;/p&gt;
&lt;p&gt;选中需要统计的数据库，再选择「文件夹信息统计」-「统计题录类型」（例如对当前数据库文献记录题录类型、 第一作者、第二作者、卷、 期、引用次数以及关键词等），最后点击「统计」即可。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/10/01f7cede6c33b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;如，对当前数据库文献记录来源的年份进行分析，可以了解当前文献的来源近况，这样，点击「年份」后就会出现分析结果，可以将统计结果另存为文本格式。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/11/1741884409216.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;压缩数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#压缩数据库&#34;&gt;#&lt;/a&gt; 压缩数据库&lt;/h2&gt;
&lt;p&gt;如果文献太多，已经没有多余的空间了，这个时候建议使用「压缩当前数据库」的功能。&lt;/p&gt;
&lt;p&gt;且该功能可以多次使用，如果经过一段时间使用，数据库又没有冗余空间可继续使用该功能。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/11/2d5605f31976e.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;工具选项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工具选项&#34;&gt;#&lt;/a&gt; 工具选项&lt;/h2&gt;
&lt;p&gt;「工具选项」可以对常规、显示、数据库备份、笔记、扩展、样式、网络代理、自定义、用户以及其他等进行设置。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/11/8f7cb5587acfc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里我们着重讲一下「扩展」的设置，这里面描述了如何设置 Word 与 WPS 的插件，也即是说将 Noteexpress 选项卡存放在 Word 或者 WPS 的菜单栏。&lt;/p&gt;
&lt;p&gt;一般情况下，安装完 Noteexpress ，会自动在 Word 中加载该扩展，WPS 中也能加载该扩展，两个软件都并未出现不兼容的情况，使用感受也都差不多，可以按照个人习惯选择。&lt;/p&gt;
&lt;p&gt;假如未能显示，或者其他未知的错误，可以点击这里的按钮重装一次 。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/11/042a23eb537ec.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;还有自定义选项。我们可以在这个地方，对题录的字段自定义，也可以对列表头自定义。这样就可以更加方便、自如地管理我们的文献了！&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yODA3MDczNTI=&#34;&gt;中文文献管理神器的 7 个隐藏的实用技巧…&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="不看会后悔的实用技巧分享" scheme="https://blog.aayu.today/categories/skill/" />
        <category term="工具篇" scheme="https://blog.aayu.today/categories/skill/tools/" />
        <category term="NoteExpress" scheme="https://blog.aayu.today/tags/NoteExpress/" />
        <updated>2022-05-10T11:50:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/skill/miscellaneous/20220508/</id>
        <title>常见文档打开乱码原因总结</title>
        <link rel="alternate" href="https://blog.aayu.today/skill/miscellaneous/20220508/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;本文总结了一些常见的因为编码设置错误而打开文档乱码的情况&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/05/08/196501abc3a9f.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</content>
        <category term="不看会后悔的实用技巧分享" scheme="https://blog.aayu.today/categories/skill/" />
        <category term="杂七杂八" scheme="https://blog.aayu.today/categories/skill/miscellaneous/" />
        <category term="乱码" scheme="https://blog.aayu.today/tags/%E4%B9%B1%E7%A0%81/" />
        <updated>2022-05-08T09:07:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/gis/cesium/learning-notes/20220421/</id>
        <title>Vue3.2配置Cesium踩坑笔记</title>
        <link rel="alternate" href="https://blog.aayu.today/gis/cesium/learning-notes/20220421/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;很早之前，我写过一篇 &lt;a href=&#34;https://blog.aayu.today/gis/cesium/learning-notes/20210701/&#34;&gt;Cesium-Vue3 整合 Cesium 最简教程&lt;/a&gt; 教程，而最近我在学习最新版的 Vue3.2 和 TypeScript，并使用了 Vue Admin Plus 后台框架，发现在这个框架的基础上配置 Cesium 会有一些坑，便在此记录下来，希望能帮助到后面的小伙伴呀～～&lt;/p&gt;
&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NodeJS：16.14.2&lt;/li&gt;
&lt;li&gt;Vue：3.2.31&lt;/li&gt;
&lt;li&gt;Cesium：1.92.0&lt;/li&gt;
&lt;li&gt;@types/cesium：1.70.0&lt;/li&gt;
&lt;li&gt;copy-webpack-plugin：10.2.4&lt;/li&gt;
&lt;li&gt;@types/copy-webpack-plugin：10.1.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;配置步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置步骤&#34;&gt;#&lt;/a&gt; 配置步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装相关依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为我是在现有 Vue Admin Plus 后台框架的基础上配置 Cesium 的，所以就省略了新建项目的步骤，直接安装依赖，如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cnpm install Cesium
cnpm install @types/cesium
cnpm install copy-webpack-plugin -D
cnpm install @types/copy-webpack-plugin -D
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里我用 cnpm 安装，是因为 Vue Admin Plus 这个框架依赖就是用 cnpm 安装的，用 npm 安装可能会报  &lt;code&gt;Error: command failed: npm install --loglevel error&lt;/code&gt;  的错误～～&lt;/p&gt;
&lt;p&gt;安装 cnpm 可以用如下命令安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# powershell 管理员模式安装
npm install cnpm -g --registry=https://registry.npmmirror.com

# powershell 获取管理员权限，选择A
set-ExecutionPolicy RemoteSigned
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;配置 vue.config.js 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为我用的  &lt;code&gt;copy-webpack-plugin&lt;/code&gt;  是最新版的，而最新版的导入语法有点变化，所以参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI3NjAxNy9hcnRpY2xlL2RldGFpbHMvMTE5Mzc5OTY3&#34;&gt;这篇博文&lt;/span&gt; 的配置要有点变化，更改后如下&lt;/p&gt;
&lt;figure class=&#34;highlight ts&#34;&gt;&lt;figcaption data-lang=&#34;TypeScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CopyWebpackPlugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    patterns&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            from&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cesiumSource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Workers&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            to&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Workers&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            from&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cesiumSource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Assets&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            to&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Assets&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            from&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cesiumSource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Widgets&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            to&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Widgets&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            from&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cesiumSource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ThirdParty/Workers&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            to&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;ThirdParty/Workers&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;webpack&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;DefinePlugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token constant&#34;&gt;CESIUM_BASE_URL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;stringify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;./&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;配置 main.ts 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果按照下面这样导入&lt;/p&gt;
&lt;figure class=&#34;highlight ts&#34;&gt;&lt;figcaption data-lang=&#34;TypeScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * @description 导入 Cesium&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;cesium/Source/Widgets/widgets.css&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; Cesium &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;cesium/Source/Cesium&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;会报错找不到模块的，如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; error  in ./src/main.ts

Module not found: Error: Package path ./Source/Widgets/widgets.css is not exported from package E:\code\javascript\city-analysis-platform\node_modules\cesium (see exports field in E:\code\javascript\city-analysis-platform\node_modules\cesium\package.json)

 error  in ./src/main.ts

Module not found: Error: Package path ./Source/Cesium is not exported from package E:\code\javascript\city-analysis-platform\node_modules\cesium (see exports field in E:\code\javascript\city-analysis-platform\node_modules\cesium\package.json)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在查阅了一番资料后，终于参考了这篇：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wcm9ncmFtbWVyLmluay90aGluay93aHktZGlkLWl0LWZhaWwtdG8taW1wb3J0LWNzcy1vZi1jZXNpdW0taW4tdGhlLXBhY2thZ2luZy10b29sLmh0bWw=&#34;&gt;Why did it fail to import css of Cesium in the packaging tool&lt;/span&gt; 找到了解决办法～～&lt;/p&gt;
&lt;p&gt;解决办法就是首先在  &lt;code&gt;node_modules/cesium&lt;/code&gt;  目录下找到它的  &lt;code&gt;package.json&lt;/code&gt;  文件，然后修改 exports 字段如下&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;exports&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;./package.json&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./package.json&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;.&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;&#34;require&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./index.cjs&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;&#34;import&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./Source/Cesium.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;./Source/Widgets/widgets.css&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;./Source/Widgets/widgets.css&#34;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;主要就是添加了  &lt;code&gt;&amp;quot;./Source/Widgets/widgets.css&amp;quot;: &amp;quot;./Source/Widgets/widgets.css&amp;quot; &lt;/code&gt;  才能让我们在项目中找到 Cesium 的 css 文件&lt;/p&gt;
&lt;p&gt;修改完这个之后，再次在  &lt;code&gt;main.ts&lt;/code&gt;  文件中导入 Cesium，如下&lt;/p&gt;
&lt;figure class=&#34;highlight ts&#34;&gt;&lt;figcaption data-lang=&#34;TypeScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * @description 导入 Cesium&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;cesium/Source/Widgets/widgets.css&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; Cesium &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;cesium&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// const Cesium = require(&#39;cesium/Source/Cesium&#39;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后启动项目，应该就不会报错啦～～&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;编写测试页面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在  &lt;code&gt;src/views&lt;/code&gt;  目录下新建个  &lt;code&gt;map.vue&lt;/code&gt;  文件，编写如下&lt;/p&gt;
&lt;figure class=&#34;highlight ts&#34;&gt;&lt;figcaption data-lang=&#34;TypeScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;template&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;div id&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;cesiumContainer&#34;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;map-container&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;div&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;template&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; defineComponent&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; reactive&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; toRefs &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;defineComponent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Map&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; state &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;reactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; Cesium &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;inject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;$Cesium&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token function&#34;&gt;onMounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; viewer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cesium&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Viewer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;cesiumContainer&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          imageryProvider&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Cesium&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ArcGisMapServerImageryProvider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;viewer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toRefs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;state&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  #cesiumContainer &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    width&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    height&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    padding&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    margin&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;style&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;配置好路由之后，启动项目，跳转到指定路由，就能看到一个蓝色的小破球啦，bingo&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/04/21/62fe3f2f3a751.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI3NjAxNy9hcnRpY2xlL2RldGFpbHMvMTE5Mzc5OTY3&#34;&gt;vue3+cesium+ts 全过程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wcm9ncmFtbWVyLmluay90aGluay93aHktZGlkLWl0LWZhaWwtdG8taW1wb3J0LWNzcy1vZi1jZXNpdW0taW4tdGhlLXBhY2thZ2luZy10b29sLmh0bWw=&#34;&gt;Why did it fail to import css of Cesium in the packaging tool&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0Nlc2l1bUdTL2Nlc2l1bS9pc3N1ZXMvOTIxMg==&#34;&gt;Can not import widgets.css file not exported from package.json #9212&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="GIS开发笔记" scheme="https://blog.aayu.today/categories/gis/" />
        <category term="Cesium" scheme="https://blog.aayu.today/categories/gis/cesium/" />
        <category term="学习笔记" scheme="https://blog.aayu.today/categories/gis/cesium/learning-notes/" />
        <category term="Cesium" scheme="https://blog.aayu.today/tags/Cesium/" />
        <updated>2022-04-21T04:05:21.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/artificial-intelligence/machine-learning/time-series/20220413/</id>
        <title>时间序列的线性回归</title>
        <link rel="alternate" href="https://blog.aayu.today/artificial-intelligence/machine-learning/time-series/20220413/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;预测可能是机器学习在现实世界中最常见的应用。企业预测产品需求，政府预测经济和人口增长，气象学家预测天气。对未来事物的理解是整个科学、政府和行业 (更不用说我们的个人生活了！) 的迫切需求，这些领域的从业者正越来越多地应用机器学习来满足这一需求。&lt;/p&gt;
&lt;p&gt;时间序列预测是一个有着悠久历史的广泛领域。本课程的重点是现代机器学习方法在时间序列数据上的应用，以产生最准确的预测。本课程的课程灵感来自于过去 Kaggle 预测比赛中获胜的解决方案，但将适用于准确预测是优先考虑的任何时候。&lt;/p&gt;
&lt;p&gt;后续待更...&lt;/p&gt;
</content>
        <category term="人工智能" scheme="https://blog.aayu.today/categories/artificial-intelligence/" />
        <category term="机器学习" scheme="https://blog.aayu.today/categories/artificial-intelligence/machine-learning/" />
        <category term="时间序列分析" scheme="https://blog.aayu.today/categories/artificial-intelligence/machine-learning/time-series/" />
        <category term="时间序列分析" scheme="https://blog.aayu.today/tags/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E5%88%86%E6%9E%90/" />
        <updated>2022-04-13T01:15:13.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/linux/ubuntu/20220312-3/</id>
        <title>Ubuntu挂载WebDAV</title>
        <link rel="alternate" href="https://blog.aayu.today/linux/ubuntu/20220312-3/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;WebDAV 是个好东西，尤其是配个自己的 NAS 使用，熟悉以后就再也离不开它啦，这篇博客教小伙伴们如何在 Ubuntu 18.04 下挂载 WebDAV~&lt;/p&gt;
&lt;h2 id=&#34;本机环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#本机环境&#34;&gt;#&lt;/a&gt; 本机环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 18.04&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;操作步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作步骤&#34;&gt;#&lt;/a&gt; 操作步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装 davfs2&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;apt-get -y install davfs2
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;安装完 davfs2 之后执行&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sed&lt;/span&gt; -i &lt;span class=&#34;token string&#34;&gt;&#39;s/# use_locks       1/use_locks       0/g&#39;&lt;/span&gt; /etc/davfs2/davfs2.conf&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;你的WebDAV地址 用户名 密码&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /etc/davfs2/secrets &lt;span class=&#34;token comment&#34;&gt;#保存用户名密码，以后可以直接免密码挂载&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;mount.davfs 你的WebDAV地址 你想要挂载到的目录&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;即可成功挂载&lt;/p&gt;
&lt;p&gt;注意 1：挂载目录必须提前创建好！&lt;br /&gt;
注意 2：如果你不执行第二句保存用户名密码，那么你以后挂载的时候都会要求输入用户名密码！&lt;/p&gt;
&lt;h2 id=&#34;开机自动挂载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开机自动挂载&#34;&gt;#&lt;/a&gt; 开机自动挂载&lt;/h2&gt;
&lt;p&gt;如果想要开机自动挂载，则再执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;mount.davfs 你的WebDAV地址 你想要挂载到的目录&amp;quot; &amp;gt;&amp;gt; /etc/rc.local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行完此句之后检查一下  &lt;code&gt;/etc/rc.local&lt;/code&gt;  文件，看看是否有  &lt;code&gt;exit 0&lt;/code&gt;  这句。如果有的话，要手动把上面命令添加进去的语句放到  &lt;code&gt;exit 0&lt;/code&gt;  之前。&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb2UuYmVzdC9saW51eC1tZW1vL21vdW50LXdlYmRhdi5odG1s&#34;&gt;[WebDAV] 如何在各个平台下挂载 WebDAV&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Linux进阶之路" scheme="https://blog.aayu.today/categories/linux/" />
        <category term="Ubuntu" scheme="https://blog.aayu.today/categories/linux/ubuntu/" />
        <category term="Ubuntu" scheme="https://blog.aayu.today/tags/Ubuntu/" />
        <updated>2022-03-12T11:15:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/linux/ubuntu/20220312-2/</id>
        <title>Ubuntu18.04更换国内源</title>
        <link rel="alternate" href="https://blog.aayu.today/linux/ubuntu/20220312-2/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;Ubuntu 本身的源使用的是国外的源，下载速度比较慢，不像 CentOS 一样 yum 安装的时候对镜像站点进项选择，所以选择了更换成国内的源。&lt;/p&gt;
&lt;p&gt;以下内容整合自网络&lt;/p&gt;
&lt;h2 id=&#34;操作步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作步骤&#34;&gt;#&lt;/a&gt; 操作步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;备份 /etc/apt/sources.list 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;mv /etc/apt/sources.list /etc/apt/sourses.list.backup
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;新建 /etc/apt/sources.list 文件并添加以下内容&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;#163源
deb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse
deb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse
deb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;更改完成之后执行以下命令&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# apt update
# apt upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;其他的一些apt命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他的一些apt命令&#34;&gt;#&lt;/a&gt; 其他的一些 apt 命令&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update  更新源
sudo apt-get install package 安装包
sudo apt-get remove package 删除包
sudo apt-cache search package 搜索软件包
sudo apt-cache show package  获取包的相关信息，如说明、大小、版本等
sudo apt-get install package --reinstall  重新安装包
sudo apt-get -f install  修复安装
sudo apt-get remove package --purge 删除包，包括配置文件等
sudo apt-get build-dep package 安装相关的编译环境
sudo apt-get upgrade 更新已安装的包
sudo apt-get dist-upgrade 升级系统
sudo apt-cache depends package 了解使用该包依赖那些包
sudo apt-cache rdepends package 查看该包被哪些包依赖
sudo apt-get source package  下载该包的源代码
sudo apt-get clean &amp;amp;&amp;amp; sudo apt-get autoclean 清理无用的包
sudo apt-get check 检查是否有损坏的依赖
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;其他几个国内的源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他几个国内的源&#34;&gt;#&lt;/a&gt; 其他几个国内的源&lt;/h2&gt;
&lt;h3 id=&#34;中科大源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#中科大源&#34;&gt;#&lt;/a&gt; 中科大源&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#中科大源
deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse
deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse
deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;阿里云源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#阿里云源&#34;&gt;#&lt;/a&gt; 阿里云源&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;清华源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#清华源&#34;&gt;#&lt;/a&gt; 清华源&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse
deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse
deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse
deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse
deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse
deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse
deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="Linux进阶之路" scheme="https://blog.aayu.today/categories/linux/" />
        <category term="Ubuntu" scheme="https://blog.aayu.today/categories/linux/ubuntu/" />
        <category term="Ubuntu" scheme="https://blog.aayu.today/tags/Ubuntu/" />
        <updated>2022-03-12T11:10:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/linux/ubuntu/20220312/</id>
        <title>Ubuntu-解决2.5G网卡驱动问题</title>
        <link rel="alternate" href="https://blog.aayu.today/linux/ubuntu/20220312/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;由于 2.5G 网卡较新，各 linux 发行版的通用驱动已不适用，新装的系统会出现无法上网问题，由于国内网络环境去 Realtek 官网很难下载到驱动文件，故本文提供 github 上的 2.5G Ethernet LINUX driver r8125 for kernel up to 5.6 的版本驱动文件 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1ZpdG8tVHUvcjgxMjU=&#34;&gt;r8125-9.003.05.tar.bz2&lt;/span&gt; 各位可以自行下载，并结合此教程安装。&lt;/p&gt;
&lt;h2 id=&#34;本机环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#本机环境&#34;&gt;#&lt;/a&gt; 本机环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 18.04&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装步骤&#34;&gt;#&lt;/a&gt; 安装步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;准备编译环境&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install --reinstall linux-headers-$(uname -r) linux-headers-generic build-essential dkms
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;解压源码到目录 /usr/src&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo tar xvf r8125-9.003.05.tar.bz2 -C /usr/src
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;添加一个 dkms.conf 到 /usr/src/r8125-9.003.05/ 目录&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# 先进入目录，方便后续操作
cd /usr/src/r8125-9.003.05/
# 创建dkms配置文件
touch dkms.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;编辑 dkms.conf 文件添加如下内容&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;PACKAGE_NAME=Realtek_r8125
PACKAGE_VERSION=9.003.05
 
DEST_MODULE_LOCATION=/updates/dkms
BUILT_MODULE_NAME=r8125
BUILT_MODULE_LOCATION=src/
 
MAKE=&amp;quot;&#39;make&#39; -C src/ all&amp;quot;
CLEAN=&amp;quot;&#39;make&#39; -C src/ clean&amp;quot;
AUTOINSTALL=&amp;quot;yes&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;编译安装&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sudo dkms add -m r8125 -v 9.003.05
sudo dkms build -m r8125 -v 9.003.05
sudo dkms install -m r8125 -v 9.003.05
sudo depmod -a
sudo modprobe r8125
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;验证安装结果，运行如下命令即可看到 enxxx 的有线网接口&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ifconfig -a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;后记：这种方法安装完后，后续如果有内核版本升级，仍需重新编译安装，否则驱动无法运行。执行下方代码重新安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dkms remove r8125/9.003.05 --all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但每次出问题都去执行代码太过繁琐，建议在安装目录下（本文是 /usr/src/r8125-9.003.05/）将命令打包成可执行文件 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2ZpeE5ldHdvcmtDYXJkLnNo&#34;&gt;fixNetworkCard.sh&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建文件，赋予可执行权限，并切链接到用户目录～方便使用&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# 确保在安装目录
cd /usr/src/r8125-9.003.05/
# 创建文件名授权
touch fixNetWorkCard.sh
chmod 777 fixNetWorkCard.sh
# 回到用户目录创建软连接
cd ~
ln -s /usr/src/r8125-9.003.05/fixNetWorkCard.sh ./
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;编辑 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2ZpeE5ldHdvcmtDYXJkLnNo&#34;&gt;fixNetworkCard.sh&lt;/span&gt; 文件粘贴以下内容&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;dkms remove r8125/9.003.05 --all
dkms install -m r8125 -v 9.003.05
depmod -a
modprobe r8125
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;下次网卡驱动失效时，进行快速修复&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;cd ~
sudo ./fixNetworkCard.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;可能出现的问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#可能出现的问题&#34;&gt;#&lt;/a&gt; 可能出现的问题&lt;/h2&gt;
&lt;h3 id=&#34;modprobe-加载模块时-出现权限不允许提醒operation-not-permitted&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#modprobe-加载模块时-出现权限不允许提醒operation-not-permitted&#34;&gt;#&lt;/a&gt; modprobe 加载模块时 出现权限不允许提醒；Operation not permitted&lt;/h3&gt;
&lt;p&gt;这是由于 secure boot 的原因。如果 secure boot 是开启状态，内核不能安装自己定制的模块。&lt;/p&gt;
&lt;p&gt;解决方法：我们进入 BIOS 把 secure boot 选项关掉；secure boot 大概的作用时为了保护内核的启动安全。&lt;/p&gt;
&lt;p&gt;linux secure boot 状态查询：mokutil --sb-state&lt;br /&gt;
&lt;img data-src=&#34;http://image.aayu.today/2022/03/12/3501b5b09bf75.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RodW5kZXJfay9hcnRpY2xlL2RldGFpbHMvMTA2NDk0NTEx&#34;&gt;Ubuntu 安装 Realtek R8125 驱动&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Bvb3JndXlfYW9zL2FydGljbGUvZGV0YWlscy8xMDgyNTA4Mzg=&#34;&gt;解决 linux 2.5G 网卡驱动问题&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veHV5YW93ZW4vcC9saW51eC1zZWN1cmUtYm9vdC1kaXNhYmxlLmh0bWw=&#34;&gt;modprobe 加载模块时 出现权限不允许提醒；Operation not permitted&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Linux进阶之路" scheme="https://blog.aayu.today/categories/linux/" />
        <category term="Ubuntu" scheme="https://blog.aayu.today/categories/linux/ubuntu/" />
        <category term="Ubuntu" scheme="https://blog.aayu.today/tags/Ubuntu/" />
        <updated>2022-03-12T11:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/basic-subjects/mathematics/advanced-mathematics/20220312/</id>
        <title>高等数学-常用公式</title>
        <link rel="alternate" href="https://blog.aayu.today/basic-subjects/mathematics/advanced-mathematics/20220312/"/>
        <content type="html">&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/03/05/e8f45bd5ba680.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/03/12/f4c3e2d6045a0.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/03/12/186c8c62e410f.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/03/12/60421e57c4f60.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/03/12/aa7d9101fe782.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/03/12/52bbf53b0c6ea.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</content>
        <category term="基础学科" scheme="https://blog.aayu.today/categories/basic-subjects/" />
        <category term="数学" scheme="https://blog.aayu.today/categories/basic-subjects/mathematics/" />
        <category term="高等数学" scheme="https://blog.aayu.today/categories/basic-subjects/mathematics/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/" />
        <category term="高等数学" scheme="https://blog.aayu.today/tags/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/" />
        <updated>2022-03-11T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/leisure/mood/20220311/</id>
        <title>心情-放风筝</title>
        <link rel="alternate" href="https://blog.aayu.today/leisure/mood/20220311/"/>
        <content type="html">&lt;h1 id=&#34;心情-放风筝&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#心情-放风筝&#34;&gt;#&lt;/a&gt; 心情 - 放风筝&lt;/h1&gt;
&lt;p&gt;依稀记得小时候放风筝时的开心模样，没想到时隔今日还能再放起来，好开心哈哈Ｏ(≧▽≦)Ｏ&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/03/12/dfeeff448ff49.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/03/12/a5e6b7de7ea05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</content>
        <category term="清风明月" scheme="https://blog.aayu.today/categories/leisure/" />
        <category term="心情" scheme="https://blog.aayu.today/categories/leisure/mood/" />
        <category term="心情" scheme="https://blog.aayu.today/tags/%E5%BF%83%E6%83%85/" />
        <updated>2022-03-10T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/nas/synology/20220114/</id>
        <title>兰空图床（Lsky）搭配PicGo客户端进行图片快速上传</title>
        <link rel="alternate" href="https://blog.aayu.today/nas/synology/20220114/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;前几天成功的实现了通过黑群晖 NAS 搭建自己的图床，在体验了几天后，发现兰空图床是真的好好用呀～界面美观、操作简单，也没有那些让人困惑的操作或功能～～&lt;/p&gt;
&lt;p&gt;而我之前的博客所用的图床最开始是白嫖的 GitHub，后面又用了腾讯云 COS 图床，哎总的来说，体验都不是很好，GitHub 图床就算是配置了 CDN 也会有访问缓慢甚至访问不了的情况，而腾讯云 COS 图床又是收费的，虽然费用也不贵，但总是不那么舒服。终于，在接触了 NAS 后，这个问题就完美的解决了，而且数据存储在自己的手上，也是那么的让人安心～～&lt;/p&gt;
&lt;p&gt;图床已经配置好啦，那么就要配置另一款上传图片的利器了，那就是  &lt;code&gt;PicGo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PicGo 是一个可以将图片方便且快速的上传至图床的一个小工具。而我平常在写博客的过程中，会时不时的截取一些图片，截取图片我们可以通过 QQ 自带的  &lt;code&gt;Ctrl + Alt + A&lt;/code&gt;  来截图，截完以后图片就被保存到剪切板了，接下来，只需要配置好 PicGo，通过 PicGo 上传图片的快捷键，就可以直接将剪切板里的图片上传到自己的图床，并且返回一个 Markdown 格式的图片链接到粘贴板，直接粘贴到博客里，实现图片的在线浏览真的是不要太方便～～&lt;/p&gt;
&lt;p&gt;接下来的这个教程就是教小伙伴们如何配置 PicGo，来实现快速上传图片到我们的兰空图床，教程也是很简单的啦～～&lt;/p&gt;
&lt;h2 id=&#34;教程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#教程&#34;&gt;#&lt;/a&gt; 教程&lt;/h2&gt;
&lt;h3 id=&#34;安装-picgo-的-lskypro-扩展插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装-picgo-的-lskypro-扩展插件&#34;&gt;#&lt;/a&gt; 安装 PicGo 的 lskypro 扩展插件&lt;/h3&gt;
&lt;p&gt;PicGo 可以直接在网上找安装包安装，安装好以后，打开 PciGo 客户端，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/15/24be88fb5965e.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;点击插件设置，然后在里面搜索 lskypro，搜索到插件后点击安装即可安装 lskypro 扩展插件，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/15/3fad8291ee96f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置-lskypro&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置-lskypro&#34;&gt;#&lt;/a&gt; 配置 lskypro&lt;/h3&gt;
&lt;p&gt;首先打开兰空图床的后台管理界面，在  &lt;code&gt;系统管理 -&amp;gt; 系统设置 -&amp;gt; 其他配置&lt;/code&gt;  里面，打开  &lt;code&gt;开启 API&lt;/code&gt;  的开关，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/15/a3da4ad7162b4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后可以在左侧菜单栏中找到  &lt;code&gt;接口&lt;/code&gt;  设置，可以在里面详细查看接口的相关说明，主要需要关注的是图片上传的  &lt;code&gt;URL&lt;/code&gt;  参数，如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/15/f228494efa5ba.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后点击左侧  &lt;code&gt;设置&lt;/code&gt; ，在里面找到自己的上传 Token，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/15/fc5ab2a3d2734.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;接下来就可以在 PciGo 里面配置 lskypro 插件了，如下图，将刚刚找到的图片上传 URL 和 Token 设置进去&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/15/8154e0af5e9a1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;点击确定，点击设置为默认图床，设置完成～～&lt;/p&gt;
&lt;h3 id=&#34;其他设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他设置&#34;&gt;#&lt;/a&gt; 其他设置&lt;/h3&gt;
&lt;p&gt;以上设置好以后，就可以在 PciGo 的上传区上传一张图片测试一下啦，下面在推荐一下其他的设置，首先 PicGo 的默认上传快捷键是  &lt;code&gt;Ctrl + Shift + P&lt;/code&gt; ，个人感觉不是很方便，所以我将上传快捷键改成了  &lt;code&gt;Ctrl + Shift + Z&lt;/code&gt; ，这样我可以首先用 QQ 自带的截图工具  &lt;code&gt;Ctrl + Alt + A&lt;/code&gt; ，截图自己想要的图片后，再直接单手按  &lt;code&gt;Ctrl + Shift + Z&lt;/code&gt;  就可以直接把刚刚截的图片上传到自己的图床了，简直不要太方便～&lt;/p&gt;
&lt;p&gt;修改快捷键可以在 PicGo 的设置中设置，同时我还会开启  &lt;code&gt;开机自启&lt;/code&gt;  和  &lt;code&gt;时间戳重命名&lt;/code&gt;  这两个设置，时间戳重命名可以直接将刚刚用 QQ 截取的乱七八糟文件名改成当前的时间，看起来就舒服很多啦，设置如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/15/2a7bd851eef7f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;至此，我们的兰空图床（Lsky）搭配 PicGo 客户端进行图片快速上传就设置好啦，接下来愉快的玩耍吧～～&lt;/p&gt;
</content>
        <category term="我的NAS捣鼓笔记" scheme="https://blog.aayu.today/categories/nas/" />
        <category term="群晖" scheme="https://blog.aayu.today/categories/nas/synology/" />
        <category term="NAS" scheme="https://blog.aayu.today/tags/NAS/" />
        <category term="Synology" scheme="https://blog.aayu.today/tags/Synology/" />
        <category term="Lsky" scheme="https://blog.aayu.today/tags/Lsky/" />
        <category term="PicGo" scheme="https://blog.aayu.today/tags/PicGo/" />
        <updated>2022-01-13T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/nas/synology/20220111/</id>
        <title>黑群晖NAS搭建兰空图床（Lsky）</title>
        <link rel="alternate" href="https://blog.aayu.today/nas/synology/20220111/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;真的是空了好长一段时间才来更新自己的博客了 hh。前段时间自己入了 NAS 的坑，看了好多关于 NAS 的博客文章和教程，自己也花了不到 800 搭建了自己的第一台 NAS 哈哈，又在多多上花了 800 多买了两块 4T 紫盘，终于开启了自己的 NAS 捣鼓之旅～～&lt;/p&gt;
&lt;p&gt;补充一下哈哈，NAS 可以当作自己的私有存储空间，类似于百度网盘一样，但区别是百度网盘是第三方服务，存储空间都是人家的，而我们的 NAS 也就是一台小型电脑，但存储空间可以自己掌握，比如说我买了两块 4T 的机械硬盘，就相当于我有 8T 的存储空间，同时，又因为 NAS 类似于一个小型电脑，我们可以在上面部署自己的服务，如把自己的个人博客搭建在上面，把自己的图床放在上面等等～～&lt;/p&gt;
&lt;p&gt;NAS 最吸引我的一点就是自己的数据自己掌握，自己的数据都放在自己的机械硬盘里，并且将硬盘组成一个 RAID 阵列，这个阵列可以把它当成一个数据保护措施，比如两块硬盘可以组一个 RAID1 阵列，当有一块硬盘由于未知原因损坏的时候，只要把坏的硬盘取下来，换上一个好的硬盘，数据就会自动进行恢复，最大程度上避免了数据丢失。与 RAID1 阵列类似的还有 RAID5 和 RAID10 阵列，它们的区别就是硬盘的可用空间不同&lt;sub&gt;感兴趣的可以自己去查阅相关资料呀&lt;/sub&gt;～&lt;/p&gt;
&lt;p&gt;哈哈，现在自己在 NAS 的收获上真的很多，目前已经在 NAS 上完成了个人导航页、个人网盘、以及相册的部署～～&lt;/p&gt;
&lt;p&gt;后续等这篇博客的图床在 NAS 搭建好以后，就可以把自己的个人博客也迁移到 NAS 上了～～&lt;/p&gt;
&lt;p&gt;哦哦还有一个忘了说，NAS 还有一个很棒的功能就是自动备份手机的照片，当配置好以后，我们换手机就再也不用担心照片的问题了，也不用第三方的手机照片备份服务了，真的是又贵空间又小～&lt;/p&gt;
&lt;p&gt;欢迎大家访问我的个人导航页～～&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hYXl1LnRvZGF5&#34;&gt;阿宇的导航页&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;处理器：J3455-itx&lt;/li&gt;
&lt;li&gt;群晖系统：DSM 6.2.3-25426 Upload 3&lt;/li&gt;
&lt;li&gt;产品型号：DS3617xs&lt;/li&gt;
&lt;li&gt;存储空间：两块 4T 紫盘组 RAID1 阵列&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装教程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装教程&#34;&gt;#&lt;/a&gt; 安装教程&lt;/h2&gt;
&lt;h3 id=&#34;搭建宝塔面板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搭建宝塔面板&#34;&gt;#&lt;/a&gt; 搭建宝塔面板&lt;/h3&gt;
&lt;p&gt;首先在群晖的 docker 应用里面搜索 baota，选择  &lt;code&gt;pch18/baota&lt;/code&gt;  这个镜像，双击下载最新的 latest 版本的镜像&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/e7789a2be6329.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下载好以后可以在镜像列表中看到，如下图，可以看到该容器的大小是真不小啊，占了 5GB 大小的空间&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/3d21f3bf28d50.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;选中该镜像，点击上方的启动，点击高级配置，设置存储空间映射如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/6920258f5c87b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;端口设置如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/2715710220830.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置完成后，点击确定，等待稍微一段时间后，弹出命令创建失败，这时候别慌。我们可以用 ssh 连接到 NAS 里面，输入  &lt;code&gt;docker ps&lt;/code&gt; ，发现宝塔容器确实没有起来，再次敲击  &lt;code&gt;docker ps -a&lt;/code&gt;  可以查看所以运行过的容器，发现宝塔容器的状态是  &lt;code&gt;Created&lt;/code&gt; ，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/85c42971f05d3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;所以只需要用  &lt;code&gt;docker start 宝塔容器ID&lt;/code&gt; ，启动容器即可。容器启动以后，再次用  &lt;code&gt;docker ps&lt;/code&gt;  命令，就可以看到已经成功启动的宝塔容器了～～&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/3e1abcce3b028.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;启动完成以后，在浏览器中输入  &lt;code&gt;ip:18888&lt;/code&gt; ，可以看到成功进入宝塔的登陆界面啦，但用户名和密码我们需要通过重置才能获取到&lt;/p&gt;
&lt;p&gt;在 NAS 后台管理界面，打开 docker 应用，可以看到我们的宝塔容器也确实启动成功了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/2f0547340adf7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们还是用 ssh 连接 NAS 系统，然后用  &lt;code&gt;docker exec -it 宝塔容器ID /bin/bash&lt;/code&gt;  进入容器内部系统，然后输入  &lt;code&gt;bt&lt;/code&gt;  即可对用户名和密码进行重置，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/5c0a8442abf54.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;重置完用户名和密码后，在容器内部按  &lt;code&gt;Ctrl + P + Q&lt;/code&gt;  即可在容器继续运行的情况下安全退出容器～&lt;/p&gt;
&lt;p&gt;用新用户名和密码，即可成功登录宝塔面板啦～&lt;/p&gt;
&lt;h3 id=&#34;安装兰空图床&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装兰空图床&#34;&gt;#&lt;/a&gt; 安装兰空图床&lt;/h3&gt;
&lt;p&gt;首先进入主页面，点击 PHP-7.3，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/1ebfe72982cc2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后在安装扩展这里点击 fileinfo 扩展安装（因为我已经装过了，所以这里显示的是卸载）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/ea3ab0f0c4f47.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;安装完成以后，点击网站，开始新建站点，配置如下图，注意在 IP 后面配置一个可以访问的端口，默认的 80 端口应该是使用不了的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/0af4c3de78a55.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后在兰空图床的 GitHub 官网上下载最新的发行包，并上传到站点的根目录，然后解压，解压完成之后记得把解压之后的文件放在站点的根目录，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/b4b042cd16722.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;接下来点击站点名称，可以进行网站设置，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/6e4d58cbf32b4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在网站目录下，设置运行目录为  &lt;code&gt;/public&lt;/code&gt; ，点击保存，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/4553770b23267.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;根据兰空图床&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cua2FuY2xvdWQuY24vd2lzcHgvbHNreS1wcm8vODgwMDQ0&#34;&gt;官网教程&lt;/span&gt;，nginx 需要设置伪静态，代码如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;location / &amp;#123;
    if (!-e $request_filename) &amp;#123;
    	rewrite ^(.*)$ /index.php?s=$1 last; break;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/15a3203b8d92d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;记得点击保存。这样我们的兰空图床的站点就配置好啦～～&lt;/p&gt;
&lt;h3 id=&#34;初始化访问&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化访问&#34;&gt;#&lt;/a&gt; 初始化访问&lt;/h3&gt;
&lt;p&gt;在浏览器输入  &lt;code&gt;ip地址:10003&lt;/code&gt; ，后，博主发现了一个问题，访问这个端口失败 emmmm&lt;/p&gt;
&lt;p&gt;在博主仔细检查了后发现，我们在最开始设置 docker 端口映射时，忘记映射我们这个  &lt;code&gt;10003&lt;/code&gt;  端口了，诶呀真是失策&lt;/p&gt;
&lt;p&gt;所以接下来的操作就是，在 NAS 后台管理界面，进行 docker 应用，先把宝塔容器暂停运行，然后选择宝塔容器，点击上面的编辑，在端口设置里面添加  &lt;code&gt;10003&lt;/code&gt;  的端口映射，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/3be66807ee889.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置完之后，再把宝塔容器重新恢复运行，注意哦注意哦，这里我们重新刷新宝塔的访问界面，可以在首页发现 Nginx 服务是停止运行的，这就需要我们手动启动这个服务，这里是一个要注意的小地方&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/fb5479c4d1edc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当把以上这些都完成以后，再次在浏览器输入  &lt;code&gt;ip地址:10003&lt;/code&gt; ，终于出现了让人开心的界面，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/44d9065f8e998.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们点击下一步，这里的数据库名，用户名和密码可以在宝塔界面的数据库那里查看，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/c48e9e9c3998a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/e387b7616a750.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后点击下一步，在接下来的界面配置一下管理员的邮箱和密码，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/707ac27baa7af.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这样我们的图床就配置好啦，开心ヾ (≧▽≦*) o&lt;/p&gt;
&lt;p&gt;我们可以在左侧点击登陆，进入图床后台进行详细查看，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/12/e62e686015c82.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;输入刚才设置的用户名和密码，就可以进入到图床后台了。在图床后台可以设置上传图片的大小等等，接下来就开始愉快的使用图床吧～～&lt;/p&gt;
&lt;p&gt;后续我就会把我的个人博客也都迁移到我的 NAS 里面，啦啦～～&lt;/p&gt;
&lt;h2 id=&#34;参考链接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考链接&#34;&gt;#&lt;/a&gt; 参考链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cua2FuY2xvdWQuY24vd2lzcHgvbHNreS1wcm8vODgwMDQ0&#34;&gt;兰空图床官网教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZGFuaWFvLm9yZy8xMDIyOS5odG1s&#34;&gt;宝塔面板安装 lsky-pro（ 兰空图床） – 一款安装简单、功能强大的图床程序&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wb3N0LnNtemRtLmNvbS9wL2FscHp4enEwLyNjb21tZW50cw==&#34;&gt;NAS 篇：群晖 Docker 直接装宝塔面板一键部署建站系统&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="我的NAS捣鼓笔记" scheme="https://blog.aayu.today/categories/nas/" />
        <category term="群晖" scheme="https://blog.aayu.today/categories/nas/synology/" />
        <category term="NAS" scheme="https://blog.aayu.today/tags/NAS/" />
        <category term="Synology" scheme="https://blog.aayu.today/tags/Synology/" />
        <category term="Lsky" scheme="https://blog.aayu.today/tags/Lsky/" />
        <updated>2022-01-10T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/hardware/iot/20211124/</id>
        <title>使用Air724UG模块拍摄照片并上传至云服务器</title>
        <link rel="alternate" href="https://blog.aayu.today/hardware/iot/20211124/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;最近在做物联网的项目，有一个需求是要每隔一段时间要拍摄一张现场的图片并上传至云服务器保存。在查阅了很多资料后，发现这方面的资料是真的匮乏。同时，tb 上的摄像头产品也太高度集成了，很难进行二次开发。一次机缘巧合下，在逛 tb 的时候偶然发现一款产品，就是如下图所示 Air724UG 模块，自带 4G 通信模块和摄像头接口，而且成本也比较便宜，带通信卡和摄像头总价格不超过 80，简直就是完美符合我需求的天选产品。同时该系列产品的官方网站上也给出了很多代码 demo，非常有利于初学者的学习。最终，在经历了几天的学习后，终于成功把这个需求实现了，开心ヾ (・ω・`) o，于是在此记录下来，希望能帮助到其他有需要的小伙伴们～&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/2223ff21b72de.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/ed1fd4c843f37.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;基础知识&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础知识&#34;&gt;#&lt;/a&gt; 基础知识&lt;/h2&gt;
&lt;p&gt;如果买了这个模块，首先把卖家写的五篇开发文档看一下，如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veWFuZ2Zlbmd3dS9wLzE1MTIyMzAzLmh0bWw=&#34;&gt;1-Air724UG (4G 全网通 GPRS) 开发 - 硬件使用说明&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veWFuZ2Zlbmd3dS9wLzE1MTI1NDA2Lmh0bWw=&#34;&gt;2-Air724UG (4G 全网通 GPRS) 开发 - 下载 AT 指令固件&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veWFuZ2Zlbmd3dS9wLzE1MTYzODYzLmh0bWw=&#34;&gt;200-Air724UG (4G 全网通 GPRS) 开发 - 下载和运行第一个 lua 程序&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veWFuZ2Zlbmd3dS9wLzE1MTYzOTg2Lmh0bWw=&#34;&gt;201-Air724UG 模块 (4G 全网通 GPRS 开发)- 模块测试 - 测试 SD 卡和扬声器 (喇叭) 播放功能&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veWFuZ2Zlbmd3dS9wLzE1MTY0NDUzLmh0bWw=&#34;&gt;202-Air724UG 模块 (4G 全网通 GPRS 开发)- 模块测试 - 摄像头扫码，LCD 显示摄像头图像&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最重要的是最后一个文档，因为我们后面要修改这里面的代码。&lt;/p&gt;
&lt;p&gt;看完文档后，应该就会对 Air724UG 模块有了大致的了解，同时我们也会发觉二次开发是基于 Lua 语言的。有小伙伴可能就会问，没学过 Lua 语言肿么办&lt;/p&gt;
&lt;p&gt;莫慌，因为合宙官方给出了很多案例的示例代码，包括上面第五个文档里面用的摄像头案例的代码。我们可以打开代码看一下，官方的代码规范写的很好，每一句代码几乎都有注释，这就非常有利于我们初学者的学习～&lt;/p&gt;
&lt;p&gt;博主也是在大致浏览了下代码后，尝试性的将 socket 的示例代码和 camera 的示例代码融合起来，成功的解决了这个需求，下面就具体看看修改后的代码吧～&lt;/p&gt;
&lt;h2 id=&#34;编写-tcp-客户端代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编写-tcp-客户端代码&#34;&gt;#&lt;/a&gt; 编写 TCP 客户端代码&lt;/h2&gt;
&lt;p&gt;目前拍摄的需求已经通过默认的 camera 示例代码实现了，下面要实现的就是如何把照片上传到云端。搞过开发的同学应该都大致了解 socket 这个东西，我们各种网络通信的基础就是 socket，我们用 socket 也可以很快搭建一个 tcp 服务器，这样就相当于我们的摄像头模块是 tcp 客户端，部署了代码的云服务器是 tcp 服务器端，两端连通以后，就可以实现将照片传输到云端啦～&lt;/p&gt;
&lt;p&gt;下面先看一下 TCP 客户端具体代码&lt;/p&gt;
&lt;p&gt;主要用到的就是官方  &lt;code&gt;demo\socket\async\asyncSocket&lt;/code&gt;  的案例和  &lt;code&gt;demo\camera&lt;/code&gt;  这两个案例，我们按照 socket 案例的 main 文件修改 camera 案例的 main 文件，修改后如下&lt;/p&gt;
&lt;figure class=&#34;highlight lua&#34;&gt;&lt;figcaption data-lang=&#34;lua&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 必须在这个位置定义 PROJECT 和 VERSION 变量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--PROJECT：ascii string 类型，可以随便定义，只要不使用，就行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--VERSION：ascii string 类型，如果使用 Luat 物联云平台固件升级的功能，必须按照 &#34;X.X.X&#34; 定义，X 表示 1 位数字；否则可随便定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PROJECT &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;CAMERA&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;VERSION &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2.0.0&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 加载日志功能模块，并且设置日志输出等级&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 如果关闭调用 log 模块接口输出的日志，等级设置为 log.LOG_SILENT 即可&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;log&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;LOG_LEVEL &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;LOGLEVEL_TRACE&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--[[&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;如果使用 UART 输出日志，打开这行注释的代码 &#34;--log.openTrace (true,1,115200)&#34; 即可，根据自己的需求修改此接口的参数&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;如果要彻底关闭脚本中的输出日志（包括调用 log 模块接口和 Lua 标准 print 接口输出的日志），执行 log.openTrace (false, 第二个参数跟调用 openTrace 接口打开日志的第二个参数相同)，例如：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1、没有调用过 sys.opntrace 配置日志输出端口或者最后一次是调用 log.openTrace (true,nil,921600) 配置日志输出端口，此时要关闭输出日志，直接调用 log.openTrace (false) 即可&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2、最后一次是调用 log.openTrace (true,1,115200) 配置日志输出端口，此时要关闭输出日志，直接调用 log.openTrace (false,1) 即可&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;]]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--log.openTrace(true,1,115200)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;sys&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;utils&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;patch&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;pins&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;net&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 每 1 分钟查询一次 GSM 信号强度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 每 1 分钟查询一次基站信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- net.startQueryAll(60000, 60000)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--8 秒后查询第一次 csq&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;startQueryAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 此处关闭 RNDIS 网卡功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 否则，模块通过 USB 连接电脑后，会在电脑的网络适配器中枚举一个 RNDIS 网卡，电脑默认使用此网卡上网，导致模块使用的 sim 卡流量流失&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 如果项目中需要打开此功能，把 ril.request (&#34;AT+RNDISCALL=0,1&#34;) 修改为 ril.request (&#34;AT+RNDISCALL=1,1&#34;) 即可&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 注意：core 固件：V0030 以及之后的版本、V3028 以及之后的版本，才以稳定地支持此功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ril&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;AT+RNDISCALL=0,1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 加载控制台调试功能模块（此处代码配置的是 uart1，波特率 115200）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 此功能模块不是必须的，根据项目需求决定是否加载&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 使用时注意：控制台使用的 uart 不要和其他功能使用的 uart 冲突&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 使用说明参考 demo/console 下的《console 功能使用说明.docx》&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--require &#34;console&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--console.setup(1, 115200)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 加载硬件看门狗功能模块&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 根据自己的硬件配置决定：1、是否加载此功能模块；2、配置 Luat 模块复位单片机引脚和互相喂狗引脚&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 合宙官方出售的 Air201 开发板上有硬件看门狗，所以使用官方 Air201 开发板时，必须加载此功能模块&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--[[&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &#34;wdt&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wdt.setup(pio.P0_30, pio.P0_31)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;]]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 加载网络指示灯和 LTE 指示灯功能模块&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 根据自己的项目需求和硬件配置决定：1、是否加载此功能模块；2、配置指示灯引脚&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 合宙官方出售的 Air720U 开发板上的网络指示灯引脚为 pio.P0_1，LTE 指示灯引脚为 pio.P0_4&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;netLed&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pmd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ldoset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pmd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;LDO_VLCD&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;netLed&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;P0_1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;pio&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;P0_4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 网络指示灯功能模块中，默认配置了各种工作状态下指示灯的闪烁规律，参考 netLed.lua 中 ledBlinkTime 配置的默认值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 如果默认值满足不了需求，此处调用 netLed.updateBlinkTime 去配置闪烁时长&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 加载错误日志管理功能模块【强烈建议打开此功能】&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 如下 2 行代码，只是简单的演示如何使用 errDump 功能，详情参考 errDump 的 api&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;errDump&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;errDump&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;udp://ota.airm2m.com:9072&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 加载远程升级功能模块【强烈建议打开此功能】&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 如下 3 行代码，只是简单的演示如何使用 update 功能，详情参考 update 的 api 以及 demo/update&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--PRODUCT_KEY = &#34;v32xEAKsGTIEQxtqgwCldp5aPlcnPs3K&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--require &#34;update&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--update.request()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require&lt;span class=&#34;token string&#34;&gt;&#34;color_lcd_spi_st7735&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--require&#34;color_lcd_spi_gc9106l&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require&lt;span class=&#34;token string&#34;&gt;&#34;testCamera&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 系统工具&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;misc&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;testSocket&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;ntp&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ntp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;timeSync&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;----------------&gt; AutoTimeSync is Done ! &amp;lt;----------------&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 启动系统框架&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后在 camera 案例下添加一个  &lt;code&gt;testSocket.lua&lt;/code&gt;  文件，编写代码如下&lt;/p&gt;
&lt;figure class=&#34;highlight lua&#34;&gt;&lt;figcaption data-lang=&#34;lua&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--- testSocket&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @module asyncSocket&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @author AIRM2M&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @license MIT&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @copyright openLuat.com&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @release 2018.10.27&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require &lt;span class=&#34;token string&#34;&gt;&#34;socket&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; package&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;seeall&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 此处的 IP 和端口请填上你自己的 socket 服务器和端口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- local ip, port, c = &#34;180.97.80.55&#34;, &#34;12415&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; c &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;xxx.xxx.xxx.xxx&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;9999&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 异步接口演示代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; asyncClient&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;taskInit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isReady&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        asyncClient &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;tcp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; asyncClient&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;connect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ip&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; port&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; asyncClient&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;asyncSelect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        asyncClient&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 测试代码，用于发送消息给 socket&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sendFile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;taskInit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; socket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isReady&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt; sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wait&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; fileHandle &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testCamera.jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;rb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; fileHandle &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;testALiYun.otaCb1 open file error&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-----------------------------------------------start send photo&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        asyncClient&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;asyncSend&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;do&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; fileHandle&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; data &lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;break&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            asyncClient&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;asyncSend&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-----------------------------------------------end send photo&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        fileHandle&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意把上面的 ip 地址换成你后面部署 tcp 服务器端的云服务器的 ip 地址&lt;/p&gt;
&lt;p&gt;这个文件编写完成以后，就可以在  &lt;code&gt;testCamera.lua&lt;/code&gt;  文件里面调用这个函数了， &lt;code&gt;testCamera.lua&lt;/code&gt;  文件具体编辑如下，其中中间省略了一些没有修改的代码&lt;/p&gt;
&lt;figure class=&#34;highlight lua&#34;&gt;&lt;figcaption data-lang=&#34;lua&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;--- 模块功能：camera 功能测试.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @author openLuat&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @module fs.testFs&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @license MIT&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @copyright openLuat&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @release 2018.03.27&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;package&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;seeall&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require&lt;span class=&#34;token string&#34;&gt;&#34;pm&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require&lt;span class=&#34;token string&#34;&gt;&#34;scanCode&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require&lt;span class=&#34;token string&#34;&gt;&#34;utils&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require&lt;span class=&#34;token string&#34;&gt;&#34;common&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require&lt;span class=&#34;token string&#34;&gt;&#34;testUartSentFile&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;require&lt;span class=&#34;token string&#34;&gt;&#34;testSocket&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; WIDTH&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;HEIGHT &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; disp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getlcdinfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; DEFAULT_WIDTH&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;DEFAULT_HEIGHT &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;320&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;240&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 扫码结果回调函数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @bool result，true 或者 false，true 表示扫码成功，false 表示超时失败&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @string [opt=nil] codeType，result 为 true 时，表示扫码类型；result 为 false 时，为 nil；支持 QR-Code 和 CODE-128 两种类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- @string [opt=nil] codeStr，result 为 true 时，表示扫码结果的字符串；result 为 false 时，为 nil&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scanCodeCb&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;codeType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;codeStr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; bf302A_sdr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; gc6153 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; gc0310_ddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; gc0310_ddr_big &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;....&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;local&lt;/span&gt; gc0310_sdr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;scan&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 拍照并显示&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;takePhotoAndDisplay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 拍照并通过 uart1 发送出去&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;takePhotoAndSendToUart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- 拍照并通过 socket 发送出去&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;takePhotoAndSendToSocket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 唤醒系统&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    pm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wake&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;testTakePhoto&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 打开摄像头&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    disp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;cameraopen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;--disp.cameraopen (1,0,0,0)  -- 因目前 core 中还有问题没解决，所以不能关闭隔行隔列&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 打开摄像头预览&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 如果有 LCD，使用 LCD 的宽和高&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 如果无 LCD，宽度设置为 240 像素，高度设置为 320 像素，240*320 是 Air268F 支持的最大分辨率&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    disp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;camerapreview&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;DEFAULT_WIDTH&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;DEFAULT_HEIGHT&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 设置照片的宽和高像素并且开始拍照&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 此处设置的宽和高和预览时的保持一致&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    disp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;cameracapture&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;DEFAULT_WIDTH&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;DEFAULT_HEIGHT&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 设置照片保存路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    disp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;camerasavephoto&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testCamera.jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;-----------------------------------------------testCamera.takePhotoAndSendToSocket fileSize&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fileSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testCamera.jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 关闭摄像头预览&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    disp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;camerapreviewclose&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 关闭摄像头&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    disp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;cameraclose&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;-- 允许系统休眠&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    pm&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;testTakePhoto&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    testSocket&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sendFile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;io&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fileSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testCamera.jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;timerStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;takePhotoAndSendToSocket&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- sys.timerStart(takePhotoAndDisplay,1000)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- sys.timerStart(takePhotoAndSendToUart,1000)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;timerStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;takePhotoAndSendToSocket&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- sys.timerStart(scan,1000)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;修改完这三个文件之后，我们就可以把这个案例烧录到 Air724UG 模块上了，这样我们 TCP 客户端就弄好了，下面来看下 TCP 服务器端的代码吧～&lt;/p&gt;
&lt;h2 id=&#34;编写-tcp-服务端代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编写-tcp-服务端代码&#34;&gt;#&lt;/a&gt; 编写 TCP 服务端代码&lt;/h2&gt;
&lt;p&gt;这里 socket 的编程可以用 python 写，也可以用 go 或其他语言写，因为我最近在学 go，所以我就用 go 来编写 tcp 服务器端的代码啦，具体  &lt;code&gt;main.go&lt;/code&gt;  文件编写如下&lt;/p&gt;
&lt;figure class=&#34;highlight go&#34;&gt;&lt;figcaption data-lang=&#34;go&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; main&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;bytes&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;encoding/binary&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;encoding/hex&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;fmt&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;log&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;net&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;os&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;strconv&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;time&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;GetDetailTime&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	now &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Now&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%02d%02d%02d%02d%02d%02d&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; now&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Year&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;now&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Month&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		now&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Day&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; now&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Hour&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; now&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Minute&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; now&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Second&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handleClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;conn &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;TCPConn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; buf &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;byte&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;var&lt;/span&gt; imageData &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;byte&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; conn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Read&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;------------------------receive bytes--------------------&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		size&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; strconv&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Atoi&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;------------------------file size--------------------&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; size&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		i &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; size &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			n&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; conn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Read&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;imageData&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			i &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; n&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		encodedStr &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; hex&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;EncodeToString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;imageData&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;------------------------received bytes--------------------&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;encodedStr&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		imgName &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Sprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%s.jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;GetDetailTime&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token function&#34;&gt;byte2image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;imageData&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; imgName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;byte2image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;b &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; path &lt;span class=&#34;token builtin&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	fp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; err &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; os&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;path&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; err &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;defer&lt;/span&gt; fp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	buf &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;bytes&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Buffer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	binary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; binary&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;LittleEndian&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; b&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;n&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	fp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Write&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Bytes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	address &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;TCPAddr&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		IP&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;   net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ParseIP&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;0.0.0.0&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 把字符串 IP 地址转换为 net.IP 类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		Port&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;v2.0 server listen at &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; address&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;IP&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; address&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Port&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	listener&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; err &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; net&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ListenTCP&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;tcp4&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;address&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 创建 TCP4 服务器端监听器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; err &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Fatal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// Println + os.Exit(1)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		conn&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; err &lt;span class=&#34;token operator&#34;&gt;:=&lt;/span&gt; listener&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;AcceptTCP&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; err &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Fatal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 错误直接退出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;remote address:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; conn&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;RemoteAddr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;// go echo(conn)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;go&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handleClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;conn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;编写完成之后，可以通过在当前目录下运行如下命令将代码打包成 Linux 可执行文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SET CGO_ENABLED=0
SET GOOS=linux
SET GOARCH=amd64
go build main.go
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样就可以在当前目录下生成  &lt;code&gt;main&lt;/code&gt;  可执行文件了，这也是我喜欢 go 的原因，同样的代码，可以方便的打包成 windows 可执行文件和 linux 可执行文件，十分的方便&lt;/p&gt;
&lt;p&gt;将打包生成的  &lt;code&gt;main&lt;/code&gt;  文件传输到云服务器上，然后执行，TCP 服务器端代码就运行起来了，记得开放云服务器防火墙的对应端口&lt;/p&gt;
&lt;p&gt;接下来只要保证 TCP 客户端代码里的 ip 地址和端口正确，照片就可以顺利的上传到云服务器上，然后保存到可执行文件的目录下了～&lt;/p&gt;
&lt;p&gt;如果这篇文件对你有帮助，记得给博主点个赞支持一下呀 (✿◡‿◡)&lt;/p&gt;
</content>
        <category term="硬件修炼手册" scheme="https://blog.aayu.today/categories/hardware/" />
        <category term="物联网" scheme="https://blog.aayu.today/categories/hardware/iot/" />
        <category term="IoT" scheme="https://blog.aayu.today/tags/IoT/" />
        <category term="Air724UG" scheme="https://blog.aayu.today/tags/Air724UG/" />
        <updated>2021-11-23T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/hardware/iot/20211123/</id>
        <title>基于docker部署thingsboard+tb-gateway+emqx详细教程</title>
        <link rel="alternate" href="https://blog.aayu.today/hardware/iot/20211123/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;这篇教程其实拖了好久了，十月份的时候经过连续几个晚上的踩坑，终于把整个流程跑通啦。但后面由于自己太懒了，一直没能抽时间把这篇教程记录下来，于是便拖到了现在 (。・ω・。)&lt;/p&gt;
&lt;p&gt;拒绝拖延，从我做起。记录下这篇博客，希望能帮到有需要的小伙伴～&lt;/p&gt;
&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1 核 2G Centos 腾讯云服务器&lt;/li&gt;
&lt;li&gt;postgres 13.0 数据库&lt;/li&gt;
&lt;li&gt;thingsboard 3.2.1&lt;/li&gt;
&lt;li&gt;tb-gateway 最新版&lt;/li&gt;
&lt;li&gt;emqx 4.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里需要注意一下，经过博主测试，1 核 2G 的配置是最低最低的极限配置，实际上，在该配置下用 docker 起四个体积不小的容器，打开网页已经能感受到明显的卡顿了。所以建议有条件的小伙伴升级到 2 核 4G 的配置比较好，这里博主就用 1 核 2G 的配置进行演示。&lt;/p&gt;
&lt;h2 id=&#34;安装-postgres-数据库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装-postgres-数据库&#34;&gt;#&lt;/a&gt; 安装 postgres 数据库&lt;/h2&gt;
&lt;p&gt;根据 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGluZ3Nib2FyZC5pby9kb2NzL3VzZXItZ3VpZGUvaW5zdGFsbC9kb2NrZXIv&#34;&gt;thingsboard&lt;/span&gt; 的官方文档，thingsboard 的 docker 镜像里是带了 postgres 数据库的，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/58c52adcbc6a1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;因此理论上是不需要单独在安装 postgres 的。但博主在尝试的过程中，碰到了 postgres 的权限问题，即用 thingsboard 镜像里面自带的 postgres 数据库，数据库的初始化总是失败。导致后面 thingsboard 在启动过程中因为在数据库中找不到对应的表，直接就启动失败，退出了。&lt;/p&gt;
&lt;p&gt;在查询了很多资料后，在 stackoverflow 上找到了解决办法。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/64659110/thingsboard-docker-container-deploy-resulting-in-psqlexception&#34;&gt;ThingsBoard Docker container deploy resulting in  &lt;code&gt;PSQLException&lt;/code&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/00303b6c38237.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;解决办法就是不用 thingsboard 镜像内自带的 postgres 数据库，在环境变量中将连接的数据库地址指向我们自己创建的 postgres 数据库。所以第一步就是用 docker 去创建一个 postgres 数据库。&lt;/p&gt;
&lt;p&gt;拉取指定版本的 postgres 镜像&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull postgres:13.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/d88e21fc05841.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;拉取完后查看镜像&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker images
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/b973f640e2c68.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;创建并启动容器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --name postgres13 -e POSTGRES_PASSWORD=postgres -p 5432:5432 -v /root/thingsboard/pgdata:/var/lib/postgresql/data -d postgres:13.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面解释下这些参数的意思&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;--name：将容器命名为一个好记的名字&lt;/li&gt;
&lt;li&gt;-e：设置环境变量。这里设置数据库的密码是 postgres&lt;/li&gt;
&lt;li&gt;-p：进行端口映射。左边是服务器的端口，右边是容器内的端口&lt;/li&gt;
&lt;li&gt;-v：进行目录映射。即将服务器的  &lt;code&gt;/root/thingsboard/pgdata&lt;/code&gt;  与容器内部的  &lt;code&gt;/var/lib/postgresql/data&lt;/code&gt;  的目录进行关联，而容器内部的那个目录即为储存数据的目录，这样就相当于将数据备份到本地了。同理，在服务器的对应目录下对数据库配置文件进行修改也能反映到&lt;/li&gt;
&lt;li&gt;-d：让容器后台运行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：postgres 镜像默认的用户名为 postgres&lt;/p&gt;
&lt;p&gt;使用  &lt;code&gt;docker ps&lt;/code&gt;  查看容器状态&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/3a3f5dec6862d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进入服务器的  &lt;code&gt;/root/thingsboard/pgdata&lt;/code&gt;  目录下，可以看到该目录下已经有数据了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/fb9d896777e61.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下面可以在我们自己的电脑上用 pgadmin 工具连接一下云端的 postgres 数据库。注意服务器要放开 5432 端口哦&lt;/p&gt;
&lt;p&gt;创建一个 server&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/f603975019fdb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;填写数据库连接的参数，密码就是创建时设的  &lt;code&gt;postgres&lt;/code&gt; ，点击确定后，没啥问题应该就能顺利连接上啦&lt;/p&gt;
&lt;p&gt;接下来，在 pgadmin 里创建一个  &lt;code&gt;thingsboard&lt;/code&gt;  数据库，这样到时 thingsboard 镜像启动时，会连接这个数据库，对数据库进行初始化&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/0d22008b74c61.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;输入数据库名称后，点击确定&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/62f02d88bbdcc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;做完这一步，数据库相关的工作就基本完成了，下一步就是启动 thingsboard 镜像了&lt;/p&gt;
&lt;h2 id=&#34;启动-thingsboard-镜像&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动-thingsboard-镜像&#34;&gt;#&lt;/a&gt; 启动 thingsboard 镜像&lt;/h2&gt;
&lt;p&gt;根据 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGluZ3Nib2FyZC5pby9kb2NzL3VzZXItZ3VpZGUvaW5zdGFsbC9kb2NrZXIv&#34;&gt;thingsboard&lt;/span&gt; 官方文档，想启动 thingsboard 镜像，除了需要安装  &lt;code&gt;docker&lt;/code&gt; ，还需要再安装  &lt;code&gt;docker compose&lt;/code&gt; ，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/323861c27c875.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;根据 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vY29tcG9zZS9pbnN0YWxsLw==&#34;&gt;docker compose&lt;/span&gt; 的文档，运行如下命令安装  &lt;code&gt;docker compose&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下载二进制可执行文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo curl -L &amp;quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&amp;quot; -o /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;赋予可执行权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chmod +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/c2f692b43974b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;运行下列命令测试安装是否成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-compose --version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/cab560336068a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;按照 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGluZ3Nib2FyZC5pby9kb2NzL3VzZXItZ3VpZGUvaW5zdGFsbC9kb2NrZXIv&#34;&gt;thingsboard&lt;/span&gt; 官方文档，接下来就是创建一个  &lt;code&gt;docker-compose.yml&lt;/code&gt;  文件了，这里该文件的内容和官方文档里的就有些差别了。因为官方文档里的默认是用内部的 postgres 数据库，经过博主的惨烈踩坑后，发现这种方式行不通，所以  &lt;code&gt;docker-compose.yml&lt;/code&gt;  文件里的内容按照我的来编辑&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;2.2&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;services&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;mytb&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;restart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; always&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;thingsboard/tb-postgres:3.2.1&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;8080:9090&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1884:1883&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;7070:7070&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;5683-5688:5683-5688/udp&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;environment&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; TB_QUEUE_TYPE=in&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;memory&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; SPRING_DATASOURCE_URL=jdbc&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;postgresql&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//xxx.xxx.xxx.xxx&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;5432/thingsboard&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; SPRING_DATASOURCE_USERNAME=postgres&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; SPRING_DATASOURCE_PASSWORD=postgres&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可以看到和官方文档里的主要区别就是在环境变量里指定了外部 postgres 数据库的地址，注意把地址换成你自己云服务器的地址&lt;/p&gt;
&lt;p&gt;哦对，还有一个主要区别，注意到  &lt;code&gt;1884:1883&lt;/code&gt;  了吗，官方文档里是  &lt;code&gt;1883:1883&lt;/code&gt; ，这里和官方文档不一样是因为我后面还需要用 docker 启动  &lt;code&gt;emqx&lt;/code&gt; ，而  &lt;code&gt;emqx&lt;/code&gt;  也需要用 1883 端口，所以我这里把 thingsboard 的 1883 端口映射为服务器的 1884 端口，这里是一个重点哦～&lt;/p&gt;
&lt;p&gt;这里可以把  &lt;code&gt;docker-compose.yml&lt;/code&gt;  文件放到  &lt;code&gt;/root/thingsboard/&lt;/code&gt;  目录下，然后我们在该目录下运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-compose pull
docker-compose up
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;来拉取镜像并启动镜像。&lt;/p&gt;
&lt;p&gt;这里我镜像指定的是  &lt;code&gt;3.2.1&lt;/code&gt;  版本的，如果想用最新版的，可以把后面的  &lt;code&gt;3.2.1&lt;/code&gt;  去掉，但最新版的可能会有新的问题，这里博主还没有去踩新坑&lt;/p&gt;
&lt;p&gt;数据库地址配置正确的话，可以在启动过程中看到正在初始化数据库&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/9167f67d019b3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下图表示数据库初始化成功，数据库初始化成功的话，后面就应该不会有啥问题了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/1a29962399803.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下图就是正常启动的输出日志&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/3d9270754b4d8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在服务器的防火墙中放开  &lt;code&gt;8080&lt;/code&gt; 、 &lt;code&gt;1884&lt;/code&gt; 、 &lt;code&gt;7070&lt;/code&gt; 、 &lt;code&gt;5683-5688&lt;/code&gt;  这几个端口，然后再浏览器中访问  &lt;code&gt;ip地址:8080&lt;/code&gt; ，就可以看到 thingsboard 的登陆界面了，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/7ad0b9414a80b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;官方文档也给出了默认的系统管理员账号和密码，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/b7919b724d8b1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;我们再打开 pgadmin，可以看到 thingsboard 数据库中已经多出了很多表，这些都是在数据库初始化时自动生成的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/dd754882fd1ae.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;至此，用 docker 启动 thingsboard 就成功啦～&lt;/p&gt;
&lt;h2 id=&#34;安装-tb-gateway&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装-tb-gateway&#34;&gt;#&lt;/a&gt; 安装 tb-gateway&lt;/h2&gt;
&lt;p&gt;可以直接参考官方文档：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGluZ3Nib2FyZC5pby9kb2NzL2lvdC1nYXRld2F5L2luc3RhbGwvZG9ja2VyLWluc3RhbGxhdGlvbi8=&#34;&gt;Install ThingsBoard IoT Gateway using Docker.&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it -v ~/.tb-gateway/logs:/thingsboard_gateway/logs -v ~/.tb-gateway/extensions:/thingsboard_gateway/extensions -v ~/.tb-gateway/config:/thingsboard_gateway/config --name tb-gateway --restart always thingsboard/tb-gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/77009dd8d27c3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;通过  &lt;code&gt;-v&lt;/code&gt;  挂载目录后，就可以直接在  &lt;code&gt;~/.tb-gateway/config&lt;/code&gt;  修改 tb-gateway 的配置文件了，非常的方便&lt;/p&gt;
&lt;p&gt;接下来可以参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaW90c2Nob29sL3AvMTMwNjUzMzAuaHRtbA==&#34;&gt;Thingsboard 3.0 通过 tb-gateway 网关接入 MQTT 设备教程&lt;/span&gt; 这篇博客对  &lt;code&gt;tb-gateway&lt;/code&gt;  进行配置&lt;/p&gt;
&lt;h2 id=&#34;安装-emqx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装-emqx&#34;&gt;#&lt;/a&gt; 安装 emqx&lt;/h2&gt;
&lt;p&gt;这个好像也没啥好写的，直接看官方文档就行了：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmVtcXguY24vYnJva2VyL3Y0LjMvZ2V0dGluZy1zdGFydGVkL2luc3RhbGwuaHRtbCMlRTklODAlOUElRTglQkYlODctZG9ja2VyLSVFOCVCRiU5MCVFOCVBMSU4Qy0lRTUlOEMlODUlRTUlOTAlQUIlRTclQUUlODAlRTUlOEQlOTUlRTclOUElODQtZG9ja2VyLWNvbXBvc2UtJUU5JTlCJTg2JUU3JUJFJUE0&#34;&gt;通过 Docker 运行 (包含简单的 docker-compose 集群)&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull emqx/emqx:v4.0.0
$ docker run -d --name emqx -p 1883:1883 -p 8081:8081 -p 8083:8083 -p 8883:8883 -p 8084:8084 -p 18083:18083 emqx/emqx:v4.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/523ff8f50352c.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;注意在防火墙放开  &lt;code&gt;1883&lt;/code&gt; 、 &lt;code&gt;8081&lt;/code&gt; 、 &lt;code&gt;8083&lt;/code&gt; 、 &lt;code&gt;8883&lt;/code&gt; 、 &lt;code&gt;8084&lt;/code&gt; 、 &lt;code&gt;18083&lt;/code&gt;  这几个端口&lt;/p&gt;
&lt;p&gt;启动成功后，访问  &lt;code&gt;ip地址:18083&lt;/code&gt; ，就可以看到 emqx 的界面了，如下图&lt;/p&gt;
&lt;p&gt;默认用户名是  &lt;code&gt;admin&lt;/code&gt; ，密码是  &lt;code&gt;public&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/a8ff43b0eac3c.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;剩下的就可以参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaW90c2Nob29sL3AvMTMwNjUzMzAuaHRtbA==&#34;&gt;Thingsboard 3.0 通过 tb-gateway 网关接入 MQTT 设备教程&lt;/span&gt; 这篇博客接入 MQTT 设备啦&lt;/p&gt;
&lt;p&gt;教程写到这里就要结束啦，这篇教程浓缩了博主踩了好几个晚上的坑，都是博主的血和泪 555，如果对你们有帮助的话，记得点个赞支持一下博主呀 (✿◡‿◡)&lt;/p&gt;
&lt;h2 id=&#34;参考文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考文章&#34;&gt;#&lt;/a&gt; 参考文章&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aGluZ3Nib2FyZC5pby9kb2NzL3VzZXItZ3VpZGUvaW5zdGFsbC9kb2NrZXIv&#34;&gt;Installing ThingsBoard using Docker (Linux or Mac OS)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/64659110/thingsboard-docker-container-deploy-resulting-in-psqlexception&#34;&gt;ThingsBoard Docker container deploy resulting in  &lt;code&gt;PSQLException&lt;/code&gt; &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaW90c2Nob29sL3AvMTMwNjUzMzAuaHRtbA==&#34;&gt;Thingsboard 3.0 通过 tb-gateway 网关接入 MQTT 设备教程&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="硬件修炼手册" scheme="https://blog.aayu.today/categories/hardware/" />
        <category term="物联网" scheme="https://blog.aayu.today/categories/hardware/iot/" />
        <category term="Docker" scheme="https://blog.aayu.today/tags/Docker/" />
        <category term="IoT" scheme="https://blog.aayu.today/tags/IoT/" />
        <category term="ThingsBoard" scheme="https://blog.aayu.today/tags/ThingsBoard/" />
        <category term="TB-Gateway" scheme="https://blog.aayu.today/tags/TB-Gateway/" />
        <category term="EMQX" scheme="https://blog.aayu.today/tags/EMQX/" />
        <updated>2021-11-22T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/skill/environment-configuration/20211016/</id>
        <title>R语言和RStudio开发环境的下载与安装</title>
        <link rel="alternate" href="https://blog.aayu.today/skill/environment-configuration/20211016/"/>
        <content type="html">&lt;h2 id=&#34;r的下载和安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#r的下载和安装&#34;&gt;#&lt;/a&gt; R 的下载和安装&lt;/h2&gt;
&lt;p&gt;进入官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuci1wcm9qZWN0Lm9yZy8=&#34;&gt;https://www.r-project.org/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/02/27/1122ec109808a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/02/27/835334d0072bf.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/02/27/e6d40cdeb884b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/02/27/4b251d20f50a1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/02/27/d4ec5939c18b1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下载完成后双击运行安装包，注意这里全部点击下一步默认即可，不要更改安装路径，后面会省很多麻烦～&lt;/p&gt;
&lt;h2 id=&#34;rstudio的下载与安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rstudio的下载与安装&#34;&gt;#&lt;/a&gt; RStudio 的下载与安装&lt;/h2&gt;
&lt;p&gt;RStudio 是 R 语言的集成开发环境，我们首先进入官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucnN0dWRpby5jb20v&#34;&gt;https://www.rstudio.com/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意，该网址对网络有些要求，如果发现该官网网址打不开，就用我的百度网盘安装包吧&lt;/p&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXkwUHFhNk1GM1htLWNCMXNhaldBNHc=&#34;&gt;https://pan.baidu.com/s/1y0Pqa6MF3Xm-cB1sajWA4w&lt;/span&gt;&lt;br /&gt;
 提取码：90cw&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/02/27/0a562617f040b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/02/27/b56edb873f7c2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下载完成后右键选择以 &lt;code&gt;管理员身份&lt;/code&gt; 运行安装包，也是全部点击下一步默认即可，最后，RStudio 就安装成功啦&lt;/p&gt;
&lt;p&gt;安装完成后打开 RStudio，就能看到一个精美的 R 语言集成开发环境啦&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/02/27/376dc4ec1d4e1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</content>
        <category term="不看会后悔的实用技巧分享" scheme="https://blog.aayu.today/categories/skill/" />
        <category term="环境配置" scheme="https://blog.aayu.today/categories/skill/environment-configuration/" />
        <category term="R" scheme="https://blog.aayu.today/tags/R/" />
        <category term="RStudio" scheme="https://blog.aayu.today/tags/RStudio/" />
        <updated>2021-10-15T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/hardware/bear-pi/20211014/</id>
        <title>小熊派-串口读取RS485输出的土壤七合一传感器数据（基于STM32CubeMX）</title>
        <link rel="alternate" href="https://blog.aayu.today/hardware/bear-pi/20211014/"/>
        <content type="html">&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;JRE（Java Runtime Environment）&lt;/li&gt;
&lt;li&gt;STM32CubeMX v6.3.0&lt;/li&gt;
&lt;li&gt;HAL 库 L4 v1.7.0&lt;/li&gt;
&lt;li&gt;Keil5-MDK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;环境搭建参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU5OTM5MC9hcnRpY2xlL2RldGFpbHMvMTA2ODYzOTI5&#34;&gt;STM32CubeMX 学习记录 -- 安装配置与使用&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果不想去官网下，也可以从我的百度云分享里下载 STM32CubeMX 和 HAL 库&lt;/p&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTBNS0dLUE5Rckl4Wm51TVp2Vktxa2c=&#34;&gt;https://pan.baidu.com/s/10MKGKPNQrIxZnuMZvVKqkg&lt;/span&gt;&lt;br /&gt;
 提取码：zjor&lt;/p&gt;
&lt;h2 id=&#34;硬件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#硬件&#34;&gt;#&lt;/a&gt; 硬件&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;小熊派开发板&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/caa39a90752c8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;土壤七合一传感器（水分、温度、电导率、氮磷钾、PH 值）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/4813d00d339f7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RS485 转 TTL 模块&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/77b8bc00db7c2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;接线图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#接线图&#34;&gt;#&lt;/a&gt; 接线图&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;小熊派的  &lt;code&gt;5v&lt;/code&gt;  电源接土壤传感器的  &lt;code&gt;电源正&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;小熊派的  &lt;code&gt;GND&lt;/code&gt;  接土壤传感器的  &lt;code&gt;电源地&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;小熊派的  &lt;code&gt;3.3v&lt;/code&gt;  电源接转接模块的  &lt;code&gt;VCC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;小熊派的  &lt;code&gt;GND&lt;/code&gt;  接转接模块的  &lt;code&gt;GND&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;小熊派的  &lt;code&gt;UART2_TX&lt;/code&gt;  接转接模块的  &lt;code&gt;TXD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;小熊派的  &lt;code&gt;UART2_RX&lt;/code&gt;  接转接模块的  &lt;code&gt;RXD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;转接模块的  &lt;code&gt;A+&lt;/code&gt;  接土壤传感器的  &lt;code&gt;485-A&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;转接模块的  &lt;code&gt;B-&lt;/code&gt;  接土壤传感器的  &lt;code&gt;485-B&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/33d355271d104.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;创建工程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建工程&#34;&gt;#&lt;/a&gt; 创建工程&lt;/h2&gt;
&lt;p&gt;打开 STM32CubeMX，选择新建一个工程，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/5f8fd595babc3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在输入框中输入  &lt;code&gt;stm32l431rc&lt;/code&gt; ，选中，然后双击选择中间  &lt;code&gt;LQFP64&lt;/code&gt;  的这款，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/a0567b1553f35.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;查看原理图， &lt;code&gt;KEY1&lt;/code&gt;  按键对应的引脚为  &lt;code&gt;PB2&lt;/code&gt; ，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/cbaf5779e0697.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在 STM32CubeMX 中选择  &lt;code&gt;PB2&lt;/code&gt;  引脚输出模式为  &lt;code&gt;GPIO_input&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/a705d5e9e12e4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置  &lt;code&gt;PB2&lt;/code&gt;  输出方式和别名，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/065ffc9bc1f5f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置  &lt;code&gt;UART1&lt;/code&gt;  为异步输出，该串口是用来和 PC 端进行通信，波特率就用默认的 115200，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/d98814b2d76e3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置  &lt;code&gt;UART2&lt;/code&gt;  为异步输出，该串口用来和土壤传感器进行通信，我们上面的硬件接线也是使用的是  &lt;code&gt;UART2&lt;/code&gt;  串口。土壤传感器的波特率为 9600，所以工程里该串口波特率设置为 9600，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/faaccfe8db78e.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;时钟使用内部默认时钟，设置为最高 80MHz&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/f300e7fd8b454.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/c1039726db46a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后配置生成工程设置，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/c91261592128a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/6766e875243ac.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后选择右上角的  &lt;code&gt;GENERATE CODE&lt;/code&gt; ，即可完成工程的创建&lt;/p&gt;
&lt;h2 id=&#34;在-keil5-mdk-中编写代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在-keil5-mdk-中编写代码&#34;&gt;#&lt;/a&gt; 在 Keil5-MDK 中编写代码&lt;/h2&gt;
&lt;p&gt;进入  &lt;code&gt;MDK-ARM&lt;/code&gt;  目录，打开工程，在  &lt;code&gt;usart.c&lt;/code&gt;  中编写如下代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN 1 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fputc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; ch&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; FILE &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;file&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token class-name&#34;&gt;uint8_t&lt;/span&gt; temp&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;ch&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;HAL_UART_Transmit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;huart1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; temp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0xff&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; HAL_OK&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END 1 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;并在该文件头部添加头文件&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN 0 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;stdio.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END 0 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;重写  &lt;code&gt;fputc&lt;/code&gt;  可以将  &lt;code&gt;printf&lt;/code&gt;  函数的输出重定向到  &lt;code&gt;uart1&lt;/code&gt;  串口上，就可以通过串口助手显示出来&lt;/p&gt;
&lt;p&gt;在  &lt;code&gt;main.c&lt;/code&gt;  中，首先添加头文件&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN Includes */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;stdio.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END Includes */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后在 main 函数的 while 循环中编写如下代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN 3 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 如果检测到 KEY1 按下&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;HAL_GPIO_ReadPin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;KEY1_GPIO_Port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; KEY1_Pin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; GPIO_PIN_RESET&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 按键去抖&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;HAL_Delay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;HAL_GPIO_ReadPin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;KEY1_GPIO_Port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; KEY1_Pin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; GPIO_PIN_RESET&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;HAL_Delay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 发送问询帧&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;uint8_t&lt;/span&gt; askData&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0x01&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x03&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x00&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x04&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x44&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0x09&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;HAL_UART_Transmit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;huart2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; askData&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0xff&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 接收应答帧&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;uint8_t&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;HAL_UART_Receive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;huart2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0xff&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34; %x &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里的  &lt;code&gt;HAL_UART_Transmit&lt;/code&gt;  和  &lt;code&gt;HAL_UART_Receive&lt;/code&gt;  都是用的  &lt;code&gt;uart2&lt;/code&gt;  串口，向我们的土壤传感器发送和接收数据。&lt;/p&gt;
&lt;p&gt;查阅土壤传感器的用户手册，想要获取数据，要先发送一个问询帧，如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/15fa5332a406f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;因此，我们根据用户手册里的示例，向  &lt;code&gt;uart2&lt;/code&gt;  串口发送一个如代码所示的问询帧，然后接收返回来的应答帧，最后输出到串口助手上就好啦&lt;/p&gt;
&lt;h2 id=&#34;编译-烧录程序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编译-烧录程序&#34;&gt;#&lt;/a&gt; 编译、烧录程序&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/b21f00d70afc2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;勾选  &lt;code&gt;MicroLIB&lt;/code&gt;  库很重要，不然会无法向串口助手输出数据&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/5c313ed408192.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/19985646ceb4a.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;勾选  &lt;code&gt;reset and run&lt;/code&gt;  可以让程序烧录完成后自动运行。&lt;/p&gt;
&lt;p&gt;设置完成后点击确定，OK&lt;/p&gt;
&lt;p&gt;点击编译，然后烧录，下图所示表示烧录成功&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/57aa8fb18a837.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;打开串口助手，这里我用的是 QCOM。打开端口，然后按下小熊派的  &lt;code&gt;KEY1&lt;/code&gt;  按键，可以看到串口助手打印出了应答帧的信息，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/4a8bd2d0673be.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;根据土壤传感器的用户手册，可以解析出温度数据为： &lt;code&gt;0x01 0x03（十六进制） = 259（十进制）&lt;/code&gt; ，所以当前温度为 25.9 ℃&lt;/p&gt;
</content>
        <category term="硬件修炼手册" scheme="https://blog.aayu.today/categories/hardware/" />
        <category term="小熊派" scheme="https://blog.aayu.today/categories/hardware/bear-pi/" />
        <category term="BearPi" scheme="https://blog.aayu.today/tags/BearPi/" />
        <category term="STM32CubeMX" scheme="https://blog.aayu.today/tags/STM32CubeMX/" />
        <category term="RS485" scheme="https://blog.aayu.today/tags/RS485/" />
        <updated>2021-10-13T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/hardware/bear-pi/20211010/</id>
        <title>小熊派-按键控制LED灯亮灭（基于STM32CubeMX）</title>
        <link rel="alternate" href="https://blog.aayu.today/hardware/bear-pi/20211010/"/>
        <content type="html">&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;JRE（Java Runtime Environment）&lt;/li&gt;
&lt;li&gt;STM32CubeMX v6.3.0&lt;/li&gt;
&lt;li&gt;HAL 库 L4 v1.7.0&lt;/li&gt;
&lt;li&gt;Keil5-MDK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;环境搭建参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU5OTM5MC9hcnRpY2xlL2RldGFpbHMvMTA2ODYzOTI5&#34;&gt;STM32CubeMX 学习记录 -- 安装配置与使用&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果不想去官网下，也可以从我的百度云分享里下载 STM32CubeMX 和 HAL 库&lt;/p&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTBNS0dLUE5Rckl4Wm51TVp2Vktxa2c=&#34;&gt;https://pan.baidu.com/s/10MKGKPNQrIxZnuMZvVKqkg&lt;/span&gt;&lt;br /&gt;
 提取码：zjor&lt;/p&gt;
&lt;h2 id=&#34;创建工程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建工程&#34;&gt;#&lt;/a&gt; 创建工程&lt;/h2&gt;
&lt;p&gt;打开 STM32CubeMX，选择新建一个工程，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/5f8fd595babc3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在输入框中输入  &lt;code&gt;stm32l431rc&lt;/code&gt; ，选中，然后双击选择中间  &lt;code&gt;LQFP64&lt;/code&gt;  的这款，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/a0567b1553f35.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置时钟源，这里选择外部高速时钟，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/ee8ec2d56a83d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;外设引脚对应表&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MCU 引脚&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;引脚标注名&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;PC13&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;LED&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;PB2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;KEY1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;PB3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;KEY2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;按键原理图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/812e52e63ab9b.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/cbaf5779e0697.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置时钟树。STM32L4 的最高主频可达到 80M，使  &lt;code&gt;HCLK = 80Mhz&lt;/code&gt; ，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/5212bdbc0b02e.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/3db26a836599c.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置 LED GPIO 引脚，并修改用户标签名（相当于取另一个新名字），如下图&lt;br /&gt;
&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/f0dc3bab38ca1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/3f2398316a609.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置 PB2 和 PB3 设置成上拉输入，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/fd84528e9ffd2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/dbec4b0aa98c0.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后配置生成工程设置，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/a28f464dd80d1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/6766e875243ac.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后选择右上角的  &lt;code&gt;GENERATE CODE&lt;/code&gt; ，即可完成工程的创建&lt;/p&gt;
&lt;h2 id=&#34;在-keil5-mdk-中编写代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在-keil5-mdk-中编写代码&#34;&gt;#&lt;/a&gt; 在 Keil5-MDK 中编写代码&lt;/h2&gt;
&lt;p&gt;进入  &lt;code&gt;MDK-ARM&lt;/code&gt;  目录，打开工程，在  &lt;code&gt;main.c&lt;/code&gt;  中编写如下代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END WHILE */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;HAL_GPIO_ReadPin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;KEY1_GPIO_Port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; KEY1_Pin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;HAL_Delay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;HAL_GPIO_ReadPin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;KEY1_GPIO_Port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; KEY1_Pin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;HAL_Delay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;// filp LED status&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;HAL_GPIO_TogglePin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;LED_GPIO_Port&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; LED_Pin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;// the above code is equivalent to the following&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//			if (HAL_GPIO_ReadPin(LED_GPIO_Port, LED_Pin) == 0) &amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//				HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 1);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//			&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//			else &amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//				HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, 0);&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//			&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;点击编译和烧录，烧录配置参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FwcGxlX0NvY28vYXJ0aWNsZS9kZXRhaWxzLzEyMDY4MTk2Ng==&#34;&gt;小熊派开发笔记 - 点亮 LED 灯（基于 STM32CubeMX）&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;烧录成功如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/abd3691d8df89.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实验结果&#34;&gt;#&lt;/a&gt; 实验结果&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/fb76e62cdc2e7.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</content>
        <category term="硬件修炼手册" scheme="https://blog.aayu.today/categories/hardware/" />
        <category term="小熊派" scheme="https://blog.aayu.today/categories/hardware/bear-pi/" />
        <category term="BearPi" scheme="https://blog.aayu.today/tags/BearPi/" />
        <category term="STM32CubeMX" scheme="https://blog.aayu.today/tags/STM32CubeMX/" />
        <updated>2021-10-09T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.aayu.today/hardware/bear-pi/20211009/</id>
        <title>小熊派-点亮LED灯（基于STM32CubeMX）</title>
        <link rel="alternate" href="https://blog.aayu.today/hardware/bear-pi/20211009/"/>
        <content type="html">&lt;h2 id=&#34;环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;JRE（Java Runtime Environment）&lt;/li&gt;
&lt;li&gt;STM32CubeMX v6.3.0&lt;/li&gt;
&lt;li&gt;HAL 库 L4 v1.7.0&lt;/li&gt;
&lt;li&gt;Keil5-MDK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;环境搭建参考：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzU5OTM5MC9hcnRpY2xlL2RldGFpbHMvMTA2ODYzOTI5&#34;&gt;STM32CubeMX 学习记录 -- 安装配置与使用&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果不想去官网下，也可以从我的百度云分享里下载 STM32CubeMX 和 HAL 库&lt;/p&gt;
&lt;p&gt;链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTBNS0dLUE5Rckl4Wm51TVp2Vktxa2c=&#34;&gt;https://pan.baidu.com/s/10MKGKPNQrIxZnuMZvVKqkg&lt;/span&gt;&lt;br /&gt;
 提取码：zjor&lt;/p&gt;
&lt;h2 id=&#34;创建工程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建工程&#34;&gt;#&lt;/a&gt; 创建工程&lt;/h2&gt;
&lt;p&gt;打开 STM32CubeMX，选择新建一个工程，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/5f8fd595babc3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在输入框中输入  &lt;code&gt;stm32l431rc&lt;/code&gt; ，选中，然后双击选择中间  &lt;code&gt;LQFP64&lt;/code&gt;  的这款，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/a0567b1553f35.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置时钟源，这里选择外部高速时钟，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/ee8ec2d56a83d.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置 GPIO 引脚，在原理图上查看 LED 灯的连接情况如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/93df37e638255.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;所以在 STM32CubeMX 中选择配置 PC13 引脚，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/f0dc3bab38ca1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置时钟树，选择 HSE，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/aac1ceb8095c5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;配置工程，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/3f83bfc9292bc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后选择右上角的  &lt;code&gt;GENERATE CODE&lt;/code&gt; ，即可完成工程的创建&lt;/p&gt;
&lt;h2 id=&#34;在-keil5-mdk-中编写代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在-keil5-mdk-中编写代码&#34;&gt;#&lt;/a&gt; 在 Keil5-MDK 中编写代码&lt;/h2&gt;
&lt;p&gt;STM32CubeMX 生成的代码目录如下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/25616712663e9.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;进入  &lt;code&gt;MDK-ARM&lt;/code&gt;  目录，打开工程，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/d1c6d04a00f19.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在 main.c 中编写如下代码&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/* USER CODE END WHILE */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;HAL_Delay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;HAL_GPIO_TogglePin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;GPIOC&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; GPIO_PIN_13&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN 3 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后编译整个工程&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/31d2227bc3f6f.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;最后进行下载设置。点击菜单栏的  &lt;code&gt;Options for Target&lt;/code&gt; ，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/324bf0eb63d45.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;选择 Debug，进行 ST-Link 配置，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/3e5adeac0cbd7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;选择  &lt;code&gt;reset and fun&lt;/code&gt; ，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/82a8a2a062b8c.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;点击确定，OK&lt;/p&gt;
&lt;p&gt;最后点击下载，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/64f1e7a9f0327.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;实验结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实验结果&#34;&gt;#&lt;/a&gt; 实验结果&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;http://image.aayu.today/2022/01/16/5094980fb0381.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</content>
        <category term="硬件修炼手册" scheme="https://blog.aayu.today/categories/hardware/" />
        <category term="小熊派" scheme="https://blog.aayu.today/categories/hardware/bear-pi/" />
        <category term="BearPi" scheme="https://blog.aayu.today/tags/BearPi/" />
        <category term="STM32CubeMX" scheme="https://blog.aayu.today/tags/STM32CubeMX/" />
        <updated>2021-10-08T16:00:00.000Z</updated>
    </entry>
</feed>
