{
    "version": "https://jsonfeed.org/version/1",
    "title": "学无止境",
    "subtitle": "世界上大部分事，都没太大意义。真理与热爱除外",
    "icon": "https://blog.aayu.today/images/favicon.ico",
    "description": "真理和热爱是吾永生的追求",
    "home_page_url": "https://blog.aayu.today",
    "items": [
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230801/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230801/",
            "title": "PyTorch学习笔记（11）自编码器Auto-Encoders",
            "date_published": "2023-08-01T08:19:10.000Z",
            "content_html": "<p>前面所接触的一般都是监督学习，而除了有监督学习，互联网上更多的数据都是没有标签的，所以这就引出了无监督学习。</p>\n<p>无监督学习不是没有标签，而是数据本身就是标签，通过神经网络找出数据内在的特征，然后再重构出数据本身，这就是自编码器 Auto-Encoders</p>\n<p><img data-src=\"assets/image-20230801151818-rmzm1kv.png\" alt=\"image\" /></p>\n<p>这个过程其实就是要找到数据本质的特征，和 PCA 降维类似，通过 Auto-Encoders 找到降维后的特征后，我们就可以方便的将其可视化出来了，比如这个比较著名的可视化网站：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9qZWN0b3IudGVuc29yZmxvdy5vcmcv\">Embedding projector - visualization of high-dimensional data (tensorflow.org)</span></p>\n<p><img data-src=\"assets/image-20230801153030-36uhepi.png\" alt=\"image\" /></p>\n<h2 id=\"pca-vs-auto-encoders\"><a class=\"anchor\" href=\"#pca-vs-auto-encoders\">#</a> PCA V.S. Auto-Encoders</h2>\n<p><img data-src=\"assets/image-20230801152041-3k1mws2.png\" alt=\"image\" /></p>\n<p>可以看到 Auto-Encoders 重建出来的数据效果还是明显优于 PCA 的</p>\n<h2 id=\"auto-encoders-变种\"><a class=\"anchor\" href=\"#auto-encoders-变种\">#</a> Auto-Encoders 变种</h2>\n<h3 id=\"denoising-autoencoders\"><a class=\"anchor\" href=\"#denoising-autoencoders\">#</a> Denoising AutoEncoders</h3>\n<p>为了防止神经网络记住训练数据集，所以在训练数据中添加一个高斯噪声，逼迫神经网络真正学到数据的特征。</p>\n<p><img data-src=\"assets/image-20230801152438-cvpx96c.png\" alt=\"image\" /></p>\n<h3 id=\"dropout-autoencoders\"><a class=\"anchor\" href=\"#dropout-autoencoders\">#</a> Dropout AutoEncoders</h3>\n<p>同样也是为了防止过拟合，所以添加一个适当的 Dropout，可以提升测试集上的准确率，如最右边的图</p>\n<p><img data-src=\"assets/image-20230801152522-dwcyme2.png\" alt=\"image\" /></p>\n<h3 id=\"adversarial-autoencoders\"><a class=\"anchor\" href=\"#adversarial-autoencoders\">#</a> Adversarial AutoEncoders</h3>\n<p>如果将隐藏层的数据分布可视化出来，可以发现它的分布是有偏的，如下</p>\n<p><img data-src=\"assets/image-20230801153221-zf643tv.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230801153349-8pu8044.png\" alt=\"image\" /></p>\n<p>所以我们也想尽可能将这个分布也学习到，就借鉴 GAN 的思想，引入一个鉴别器，专门用来学习隐藏层的分布</p>\n<h2 id=\"variational-autoencoders\"><a class=\"anchor\" href=\"#variational-autoencoders\">#</a> Variational AutoEncoders</h2>\n<blockquote>\n<p>相关资料：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamVyZW15am9yZGFuLm1lL3ZhcmlhdGlvbmFsLWF1dG9lbmNvZGVycy8=\">Variational autoencoders. (jeremyjordan.me)</span></p>\n</blockquote>\n<p>KL 散度，用来衡量两个分布间的差异，详情：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMDA2NzY5MjI=\">Kullback-Leibler (KL) 散度介绍</span></p>\n<p>所以和上面的 Adversarial AutoEncoders 类似，变分自编码器通过 KL 散度来学习隐藏层的分布，如下</p>\n<p><img data-src=\"assets/image-20230801154305-535hiuc.png\" alt=\"image\" /></p>\n<p>可以看到公式中被加号分为了两个部分，第一部分就是希望模型尽可能的学习到特征 z，然后通过特征 z 再重构出 x</p>\n<p>第二部分就是 KL 散度的计算，KL 散度越小，表示两个分布之间的差异越小，所以第二部分就希望模型尽可能学习到特征的分布</p>\n<p><img data-src=\"assets/image-20230801154737-c08y2eb.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230801154805-j3ud22y.png\" alt=\"image\" /></p>\n<h3 id=\"kl-散度的计算\"><a class=\"anchor\" href=\"#kl-散度的计算\">#</a> KL 散度的计算</h3>\n<blockquote>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGF0cy5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvNzQ0MC9rbC1kaXZlcmdlbmNlLWJldHdlZW4tdHdvLXVuaXZhcmlhdGUtZ2F1c3NpYW5z\">normal distribution - KL divergence between two univariate Gaussians - Cross Validated (stackexchange.com)</span></p>\n</blockquote>\n<p><img data-src=\"assets/image-20230801155111-x095j0k.png\" alt=\"image\" /></p>\n<h3 id=\"reparameterization-trick\"><a class=\"anchor\" href=\"#reparameterization-trick\">#</a> Reparameterization trick</h3>\n<p>因为现在隐藏层变成了一个分布，所以需要从分布中进行取样，但取样又会造成无法求梯度的问题，也就是无法反向传播，所以，使用一个小 trick，如下</p>\n<p><img data-src=\"assets/image-20230801155404-c5pq8up.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230801155421-xgqaw8t.png\" alt=\"image\" /></p>\n<p>将取样的过程拆除出来，模型反向传播的过程就可以避开它，从而可以优化参数 μ 和 σ</p>\n<p><img data-src=\"assets/image-20230801155717-3kufzk7.png\" alt=\"image\" /></p>\n<h3 id=\"应用\"><a class=\"anchor\" href=\"#应用\">#</a> 应用</h3>\n<p>通过在分布上取样不同的点，就可以调整生成的结果，如下</p>\n<p><img data-src=\"assets/image-20230801155905-7ndts4c.png\" alt=\"image\" /></p>\n<p>这和 GAN 类似，但实际上自编码器还是重建的是数据本身，无法自己创造出新的数据，而且重建的数据效果也往往没有 GAN 好</p>\n<p><img data-src=\"assets/image-20230801160134-hv7y0bw.png\" alt=\"image\" /></p>\n<p>左边是变分自编码器，右边是 GAN</p>\n<h2 id=\"代码实战\"><a class=\"anchor\" href=\"#代码实战\">#</a> 代码实战</h2>\n<h3 id=\"auto-encoders-代码\"><a class=\"anchor\" href=\"#auto-encoders-代码\">#</a> Auto-Encoders 代码</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">AE</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>AE<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\"># [b, 784] => [b, 20]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>encoder <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">784</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># [b, 20] => [b, 784]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        self<span class=\"token punctuation\">.</span>decoder <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">784</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Sigmoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        :param x: [b, 1, 28, 28]</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        batchsz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\"># flatten</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>batchsz<span class=\"token punctuation\">,</span> <span class=\"token number\">784</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\"># encoder</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>encoder<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token comment\"># decoder</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>decoder<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\"># reshape</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>batchsz<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span></pre></td></tr></table></figure><h3 id=\"variational-autoencoders-代码\"><a class=\"anchor\" href=\"#variational-autoencoders-代码\">#</a> Variational AutoEncoders 代码</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">VAE</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>VAE<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># [b, 784] => [b, 20]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># u: [b, 10]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\"># sigma: [b, 10]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>encoder <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">784</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\"># [b, 20] => [b, 784]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        self<span class=\"token punctuation\">.</span>decoder <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">784</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Sigmoid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        self<span class=\"token punctuation\">.</span>criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>MSELoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        :param x: [b, 1, 28, 28]</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        batchsz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\"># flatten</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>batchsz<span class=\"token punctuation\">,</span> <span class=\"token number\">784</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\"># encoder</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token comment\"># [b, 20], including mean and sigma</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        h_ <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>encoder<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\"># [b, 20] => [b, 10] and [b, 10]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        mu<span class=\"token punctuation\">,</span> sigma <span class=\"token operator\">=</span> h_<span class=\"token punctuation\">.</span>chunk<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\"># reparametrize trick, epison~N(0, 1)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        h <span class=\"token operator\">=</span> mu <span class=\"token operator\">+</span> sigma <span class=\"token operator\">*</span> torch<span class=\"token punctuation\">.</span>randn_like<span class=\"token punctuation\">(</span>sigma<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\"># decoder</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        x_hat <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>decoder<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\"># reshape</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        x_hat <span class=\"token operator\">=</span> x_hat<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>batchsz<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        kld <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>mu<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>sigma<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            torch<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span><span class=\"token number\">1e-8</span> <span class=\"token operator\">+</span> torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>sigma<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>batchsz<span class=\"token operator\">*</span><span class=\"token number\">28</span><span class=\"token operator\">*</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token keyword\">return</span> x_hat<span class=\"token punctuation\">,</span> kld</pre></td></tr></table></figure><h3 id=\"main-代码\"><a class=\"anchor\" href=\"#main-代码\">#</a> Main 代码</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> DataLoader</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn<span class=\"token punctuation\">,</span> optim</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> transforms<span class=\"token punctuation\">,</span> datasets</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span>    ae <span class=\"token keyword\">import</span> AE</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span>    vae <span class=\"token keyword\">import</span> VAE</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span>  visdom</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    mnist_train <span class=\"token operator\">=</span> datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'mnist'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    mnist_train <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>mnist_train<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    mnist_test <span class=\"token operator\">=</span> datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'mnist'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    mnist_test <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>mnist_test<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    x<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>mnist_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x:'</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># model = AE().to(device)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    model <span class=\"token operator\">=</span> VAE<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>MSELoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span><span class=\"token number\">1e-3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    viz <span class=\"token operator\">=</span> visdom<span class=\"token punctuation\">.</span>Visdom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">for</span> batchidx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> _<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>mnist_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token comment\"># [b, 1, 28, 28]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            x_hat<span class=\"token punctuation\">,</span> kld <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>x_hat<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">if</span> kld <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                elbo <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> loss <span class=\"token operator\">-</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">*</span> kld</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                loss <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> elbo</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\"># backprop</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>epoch<span class=\"token punctuation\">,</span> <span class=\"token string\">'loss:'</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'kld:'</span><span class=\"token punctuation\">,</span> kld<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        x<span class=\"token punctuation\">,</span> _ <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>mnist_test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            x_hat<span class=\"token punctuation\">,</span> kld <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        viz<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> nrow<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        viz<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">(</span>x_hat<span class=\"token punctuation\">,</span> nrow<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'x_hat'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'x_hat'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230731-2/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230731-2/",
            "title": "PyTorch学习笔记（10）长短期神经网络LSTM",
            "date_published": "2023-07-31T16:52:36.000Z",
            "content_html": "<p>最为关键的点就在于 LSTM 有三个门，遗忘门（forget gate）、输入门（input gate）和输出门（output gate），每个门通过 sigmoid 激活函数（σ）输出 0 或者 1，然后通过 element-wise 的乘积操作，达到筛选信息的目的。</p>\n<p><img data-src=\"assets/image-20230801000723-64t8wf4.png\" alt=\"image\" /></p>\n<h2 id=\"遗忘门\"><a class=\"anchor\" href=\"#遗忘门\">#</a> 遗忘门</h2>\n<p><img data-src=\"assets/image-20230801000935-ct94029.png\" alt=\"image\" /></p>\n<p>选择性的筛选上一步的记忆信息 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span>，所以叫做遗忘门</p>\n<h2 id=\"输入门\"><a class=\"anchor\" href=\"#输入门\">#</a> 输入门</h2>\n<p><img data-src=\"assets/image-20230801001536-y6b1u83.png\" alt=\"image\" /></p>\n<p>将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">h_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_{t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的经过 Sigmoid 激活函数得到输入门，同时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">h_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>t</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_{t}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 经过 tanh 激活函数得到新的记忆信息，然后和输入门经过 element-wise 的乘积操作，将输入进行选择性的筛选，所以叫做输入门</p>\n<p><img data-src=\"assets/image-20230801002028-83zq08e.png\" alt=\"image\" /></p>\n<p>接下来就是更新上一步的记忆信息 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{t-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.891661em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span>，通过 element-wise 的相加操作</p>\n<p>从这里也可以看出输入门和输出门的状态组合会导致不同的结果</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">input gate</th>\n<th style=\"text-align:center\">forget gate</th>\n<th style=\"text-align:center\">behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">remember the previous value</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">add to the previous value</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">erase the value</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">overwrite the value</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"输出门\"><a class=\"anchor\" href=\"#输出门\">#</a> 输出门</h2>\n<p><img data-src=\"assets/image-20230801004103-q1wuomh.png\" alt=\"image\" /></p>\n<h2 id=\"总体结构图\"><a class=\"anchor\" href=\"#总体结构图\">#</a> 总体结构图</h2>\n<p><img data-src=\"assets/image-20230801004233-varpage.png\" alt=\"image\" /></p>\n<h2 id=\"梯度信息\"><a class=\"anchor\" href=\"#梯度信息\">#</a> 梯度信息</h2>\n<p>RNN 网络中会有梯度弥散的情况发生，根本原因就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的连乘，而 LSTM 就很好的解决了这个问题</p>\n<p><img data-src=\"assets/image-20230801004435-ay2ogin.png\" alt=\"image\" /></p>\n<h2 id=\"相关-api\"><a class=\"anchor\" href=\"#相关-api\">#</a> 相关 API</h2>\n<blockquote>\n<p>参考：<a href=\"assets/52-20230801004608-a4q3xgt.pdf\">LSTM 使用.pdf</a></p>\n</blockquote>\n<p><img data-src=\"assets/image-20230801004548-4qc23n6.png\" alt=\"image\" /></p>\n<h2 id=\"情感分类实战\"><a class=\"anchor\" href=\"#情感分类实战\">#</a> 情感分类实战</h2>\n<blockquote>\n<p>参考：<a href=\"assets/53-20230801004921-1as17pj.pdf\">情感分类实战.pdf</a></p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"lstm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Automatically generated by Colaboratory.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Original file is located at</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    https://colab.research.google.com/drive/1GX0Rqur8T45MSYhLU9MYWAbycfLH4-Fu</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>!pip install torch</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>!pip install torchtext</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>!python <span class=\"token operator\">-</span>m spacy download en</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># K80 gpu for 12 hours</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">from</span> torch <span class=\"token keyword\">import</span> nn<span class=\"token punctuation\">,</span> optim</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">from</span> torchtext <span class=\"token keyword\">import</span> data<span class=\"token punctuation\">,</span> datasets</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'GPU:'</span><span class=\"token punctuation\">,</span> torch<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">.</span>is_available<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>torch<span class=\"token punctuation\">.</span>manual_seed<span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>TEXT <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">(</span>tokenize<span class=\"token operator\">=</span><span class=\"token string\">'spacy'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>LABEL <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>LabelField<span class=\"token punctuation\">(</span>dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>train_data<span class=\"token punctuation\">,</span> test_data <span class=\"token operator\">=</span> datasets<span class=\"token punctuation\">.</span>IMDB<span class=\"token punctuation\">.</span>splits<span class=\"token punctuation\">(</span>TEXT<span class=\"token punctuation\">,</span> LABEL<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'len of train data:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'len of test data:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">.</span>examples<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">.</span>examples<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># word2vec, glove</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>TEXT<span class=\"token punctuation\">.</span>build_vocab<span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> max_size<span class=\"token operator\">=</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> vectors<span class=\"token operator\">=</span><span class=\"token string\">'glove.6B.100d'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>LABEL<span class=\"token punctuation\">.</span>build_vocab<span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>batchsz <span class=\"token operator\">=</span> <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>train_iterator<span class=\"token punctuation\">,</span> test_iterator <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>BucketIterator<span class=\"token punctuation\">.</span>splits<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> test_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    batch_size <span class=\"token operator\">=</span> batchsz<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    device<span class=\"token operator\">=</span>device</pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">RNN</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> vocab_size<span class=\"token punctuation\">,</span> embedding_dim<span class=\"token punctuation\">,</span> hidden_dim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>RNN<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\"># [0-10001] => [100]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        self<span class=\"token punctuation\">.</span>embedding <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Embedding<span class=\"token punctuation\">(</span>vocab_size<span class=\"token punctuation\">,</span> embedding_dim<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\"># [100] => [256]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rnn <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>LSTM<span class=\"token punctuation\">(</span>embedding_dim<span class=\"token punctuation\">,</span> hidden_dim<span class=\"token punctuation\">,</span> num_layers<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                           bidirectional<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> dropout<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\"># [256*2] => [1]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fc <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>hidden_dim<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dropout <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Dropout<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        x: [seq_len, b] vs [b, 3, 28, 28]</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token comment\"># [seq, b, 1] => [seq, b, 100]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        embedding <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>dropout<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>embedding<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token comment\"># output: [seq, b, hid_dim*2]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token comment\"># hidden/h: [num_layers*2, b, hid_dim]</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token comment\"># cell/c: [num_layers*2, b, hid_di]</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        output<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">,</span> cell<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>rnn<span class=\"token punctuation\">(</span>embedding<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\"># [num_layers*2, b, hid_dim] => 2 of [b, hid_dim] => [b, hid_dim*2]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        hidden <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>hidden<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hidden<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token comment\"># [b, hid_dim*2] => [b, 1]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        hidden <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>dropout<span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fc<span class=\"token punctuation\">(</span>hidden<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">return</span> out</pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>rnn <span class=\"token operator\">=</span> RNN<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>TEXT<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>pretrained_embedding <span class=\"token operator\">=</span> TEXT<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">.</span>vectors</pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pretrained_embedding:'</span><span class=\"token punctuation\">,</span> pretrained_embedding<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>rnn<span class=\"token punctuation\">.</span>embedding<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>copy_<span class=\"token punctuation\">(</span>pretrained_embedding<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'embedding layer inited.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>rnn<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span><span class=\"token number\">1e-3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>BCEWithLogitsLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>rnn<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">binary_acc</span><span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    get accuracy</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    preds <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>sigmoid<span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    correct <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>preds<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    acc <span class=\"token operator\">=</span> correct<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>correct<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">return</span> acc</pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">train</span><span class=\"token punctuation\">(</span>rnn<span class=\"token punctuation\">,</span> iterator<span class=\"token punctuation\">,</span> optimizer<span class=\"token punctuation\">,</span> criteon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    avg_acc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    rnn<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> batch <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token comment\"># [seq, b] => [b, 1] => [b]</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        pred <span class=\"token operator\">=</span> rnn<span class=\"token punctuation\">(</span>batch<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        acc <span class=\"token operator\">=</span> binary_acc<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        avg_acc<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">10</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    avg_acc <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>avg_acc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'avg acc:'</span><span class=\"token punctuation\">,</span> avg_acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"130\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span>rnn<span class=\"token punctuation\">,</span> iterator<span class=\"token punctuation\">,</span> criteon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    avg_acc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    rnn<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token keyword\">for</span> batch <span class=\"token keyword\">in</span> iterator<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            <span class=\"token comment\"># [b, 1] => [b]</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            pred <span class=\"token operator\">=</span> rnn<span class=\"token punctuation\">(</span>batch<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            acc <span class=\"token operator\">=</span> binary_acc<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> batch<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>            avg_acc<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    avg_acc <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>avg_acc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'>>test:'</span><span class=\"token punctuation\">,</span> avg_acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>rnn<span class=\"token punctuation\">,</span> test_iterator<span class=\"token punctuation\">,</span> criteon<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    train<span class=\"token punctuation\">(</span>rnn<span class=\"token punctuation\">,</span> train_iterator<span class=\"token punctuation\">,</span> optimizer<span class=\"token punctuation\">,</span> criteon<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230731/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230731/",
            "title": "PyTorch学习笔记（9）循环神经网络RNN",
            "date_published": "2023-07-31T15:52:08.000Z",
            "content_html": "<h2 id=\"时间序列表示\"><a class=\"anchor\" href=\"#时间序列表示\">#</a> 时间序列表示</h2>\n<p>通常表示为 [word num, batch, word vec]，即 [单词数，句子数，单词的特征维度数]</p>\n<h2 id=\"循环神经网络\"><a class=\"anchor\" href=\"#循环神经网络\">#</a> 循环神经网络</h2>\n<p><img data-src=\"assets/image-20230731233337-ezwgjzd.png\" alt=\"image\" /></p>\n<p>h 表示连续的语义信息，为了减少参数量，所以 w 和 h 参数都是权重共享的</p>\n<p><img data-src=\"assets/image-20230731233437-t14th0w.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230731233455-8zn64nt.png\" alt=\"image\" /></p>\n<h3 id=\"梯度更新\"><a class=\"anchor\" href=\"#梯度更新\">#</a> 梯度更新</h3>\n<p><img data-src=\"assets/image-20230731233747-dr3njom.png\" alt=\"image\" /></p>\n<p ih=\"\">需要注意的是，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>h</mi><mi>h</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{hh}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">h</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>I</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_{I}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 就是 W_</p>\n<p>从梯度推导公式中可以看出，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>h</mi><mi>k</mi></msub></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>h</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><msubsup><mo>∏</mo><mi>i</mi><mi>k</mi></msubsup><mi>d</mi><mi>i</mi><mi>a</mi><mi>g</mi><mrow><mo fence=\"true\">(</mo><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mrow><mo fence=\"true\">(</mo><msub><mi>W</mi><mi>I</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><msub><mi>W</mi><mi>R</mi></msub><msub><mi>h</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\frac{\\partial h_{k}}{\\partial h_1}=\\prod_{i}^{k}diag\\left(f^{\\prime}\\left(W_{I}x_{i}+W_{R}h_{i-1}\\right)\\right)W_{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3470679999999997em;vertical-align:-0.44509999999999994em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9019679999999999em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.41586em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3487714285714287em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15122857142857138em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44509999999999994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2887179999999998em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9890079999999999em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">h</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，里面包含了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mi>R</mi></msub></mrow><annotation encoding=\"application/x-tex\">W_R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>==== 的连乘，这就会导致梯度弥散和梯度爆炸 ==。</p>\n<p>梯度爆炸可以尝试通过梯度裁剪解决，梯度弥散就需要靠 LSTM 网络啦</p>\n<p><img data-src=\"assets/image-20230731234942-otmzrm0.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230731235057-baq148g.png\" alt=\"image\" /></p>\n<h3 id=\"代码示例\"><a class=\"anchor\" href=\"#代码示例\">#</a> 代码示例</h3>\n<blockquote>\n<p>参考：<a href=\"assets/48-20230731234645-88ob5ej.pdf\">RNN Layer 使用.pdf</a></p>\n</blockquote>\n<p><img data-src=\"assets/image-20230731234422-i812e55.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230731234501-kleomrj.png\" alt=\"image\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> optim</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">import</span> functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    rnn <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>RNN<span class=\"token punctuation\">(</span>input_size<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> hidden_size<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> num_layers<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rnn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    out<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> rnn<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    rnn <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>RNN<span class=\"token punctuation\">(</span>input_size<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> hidden_size<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> num_layers<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rnn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    out<span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> rnn<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># print(vars(rnn))</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rnn by cell'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    cell1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>RNNCell<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    h1 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> xt <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        h1 <span class=\"token operator\">=</span> cell1<span class=\"token punctuation\">(</span>xt<span class=\"token punctuation\">,</span> h1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    cell1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>RNNCell<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    cell2 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>RNNCell<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    h1 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    h2 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">for</span> xt <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        h1 <span class=\"token operator\">=</span> cell1<span class=\"token punctuation\">(</span>xt<span class=\"token punctuation\">,</span> h1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        h2 <span class=\"token operator\">=</span> cell2<span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>h2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Lstm'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    lstm <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>LSTM<span class=\"token punctuation\">(</span>input_size<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> hidden_size<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> num_layers<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lstm<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    out<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> lstm<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'one layer lstm'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    cell <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>LSTMCell<span class=\"token punctuation\">(</span>input_size<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> hidden_size<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    h <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    c <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">for</span> xt <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        h<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> cell<span class=\"token punctuation\">(</span>xt<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'two layer lstm'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    cell1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>LSTMCell<span class=\"token punctuation\">(</span>input_size<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> hidden_size<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    cell2 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>LSTMCell<span class=\"token punctuation\">(</span>input_size<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> hidden_size<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    h1 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    c1 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    h2 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    c2 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">for</span> xt <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        h1<span class=\"token punctuation\">,</span> c1 <span class=\"token operator\">=</span> cell1<span class=\"token punctuation\">(</span>xt<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>h1<span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        h2<span class=\"token punctuation\">,</span> c2 <span class=\"token operator\">=</span> cell2<span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>h2<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>h2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"时间序列预测实战\"><a class=\"anchor\" href=\"#时间序列预测实战\">#</a> 时间序列预测实战</h3>\n<blockquote>\n<p>参考：<a href=\"assets/49-20230731234850-b3d49pr.pdf\">时间序列预测.pdf</a></p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>optim <span class=\"token keyword\">as</span> optim</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    matplotlib <span class=\"token keyword\">import</span> pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>num_time_steps <span class=\"token operator\">=</span> <span class=\"token number\">50</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>input_size <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>hidden_size <span class=\"token operator\">=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>output_size <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>lr<span class=\"token operator\">=</span><span class=\"token number\">0.01</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Net</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Net<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rnn <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>RNN<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            input_size<span class=\"token operator\">=</span>input_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            hidden_size<span class=\"token operator\">=</span>hidden_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            num_layers<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            batch_first<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">for</span> p <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>rnn<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          nn<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>normal_<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> mean<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">=</span><span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        self<span class=\"token punctuation\">.</span>linear <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span>hidden_size<span class=\"token punctuation\">,</span> output_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> hidden_prev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>       out<span class=\"token punctuation\">,</span> hidden_prev <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>rnn<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> hidden_prev<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>       <span class=\"token comment\"># [b, seq, h]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>       out <span class=\"token operator\">=</span> out<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hidden_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>       out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>linear<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>       out <span class=\"token operator\">=</span> out<span class=\"token punctuation\">.</span>unsqueeze<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>       <span class=\"token keyword\">return</span> out<span class=\"token punctuation\">,</span> hidden_prev</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>model <span class=\"token operator\">=</span> Net<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>criterion <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>MSELoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>hidden_prev <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> hidden_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token builtin\">iter</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    start <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    time_steps <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> num_time_steps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>time_steps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>num_time_steps<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> num_time_steps <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    y <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> num_time_steps <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    output<span class=\"token punctuation\">,</span> hidden_prev <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> hidden_prev<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    hidden_prev <span class=\"token operator\">=</span> hidden_prev<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    loss <span class=\"token operator\">=</span> criterion<span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    model<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\"># for p in model.parameters():</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token comment\">#     print(p.grad.norm())</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\"># torch.nn.utils.clip_grad_norm_(p, 10)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">iter</span> <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Iteration: &#123;&#125; loss &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>start <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>time_steps <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> start <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> num_time_steps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>time_steps<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>num_time_steps<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> num_time_steps <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>y <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> num_time_steps <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>predictions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>  <span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>  <span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> hidden_prev<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">,</span> hidden_prev<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>  <span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> pred</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>  predictions<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ravel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ravel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>time_steps<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>ravel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token operator\">=</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>time_steps<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>ravel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>time_steps<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> predictions<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/basic/20230725/",
            "url": "https://blog.aayu.today/artificial-intelligence/basic/20230725/",
            "title": "K折交叉验证和F1-Score学习笔记",
            "date_published": "2023-07-25T11:00:36.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>最近在做模型评估，看到有论文涉及到 18 折交叉验证和 F1 分数以及宏观 F1 分数，有点被搞晕了，遂查了些资料，记录于此</p>\n<h2 id=\"k-折交叉验证\"><a class=\"anchor\" href=\"#k-折交叉验证\">#</a> K 折交叉验证</h2>\n<p>K 折交叉验证实际上可以有两种功能，模型选择，和模型评估。参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTM2MjM2MjM=\">N 折交叉验证的作用（如何使用交叉验证）</span></p>\n<p>重点如下：</p>\n<blockquote>\n<ol>\n<li>N 折交叉验证有两个用途：<strong>模型评估、模型选择</strong>。</li>\n<li>N 折交叉只是一种划分数据集的策略 **。** 想知道它的优势，可以拿它和传统划分数据集的方式进行比较。它可以避免固定划分数据集的局限性、特殊性，这个优势在小规模数据集上更明显。</li>\n<li><strong>把这种策略用于划分训练集和测试集，就可以进行模型评估</strong>；<strong>把这种策略用于划分训练集和验证集，就可以进行模型选择</strong>。</li>\n<li>不用 N 折交叉验证就不能进行模型评估和模型选择了吗？当然不是。只要有测试集，就能进行模型评估；只要有验证集，就能进行模型选择。所以 N 折交叉验证只是在做这两件事时的一种可选的优化手段。</li>\n</ol>\n</blockquote>\n<p>所以我在阅读 TapID 论文里 3 折交叉验证和 18 折交叉验证就是”<strong> 把这种策略用于划分训练集和测试集，就可以进行模型评估</strong> “，是模型评估。</p>\n<p>也有网友评论的我觉得很有道理</p>\n<blockquote>\n<p>我觉得有些讲复杂了。<br />\n交叉验证就是一种模型评估方法。<br />\n模型选择本质上是通过评估不同模型的性能好坏来选择出最优的模型。<br />\n文中所说的模型选择实质上是使用交叉验证来评估不同模型的好坏。<br />\n实际使用过程中，可以直接将数据集划分为测试集和训练集，然后通过交叉验证选择出最优的模型。<br />\n<strong>如果是论文发表的话，可以将 K 个模型的性能取平均值作为最后的结果</strong>。<br />\n如果是实际部署的话，则需要加一步，使用所有数据训练最优的模型。<br />\n如有不妥，请大家批评指教。</p>\n</blockquote>\n<p>还有一点需要注意的是，在 K 折交叉验证中，每一折都需要重新初始化模型进行训练，这样才能评估模型的好坏。所以在论文中，为了验证自己所搭模型的优劣，就可以将 K 个模型的性能取平均值作为最后的结果，来证明自己模型的性能不错～</p>\n<h3 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTk1MTM2MDIvc2hvdWxkLWktYmUtcmUtaW5pdGlhbGl6aW5nLXRoZS13aG9sZS1tb2RlbC1iZXR3ZWVuLWxvb3BzLW9mLWstZm9sZC1jcm9zcy12YWxpZGE=\">Should I be re-initializing the whole model between loops of K-fold Cross-validation? And how do I do that?</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZvbmVvbmUvYXJ0aWNsZS9kZXRhaWxzLzEwNDQ0NTMyMA==\">pytorch - K 折交叉验证过程说明及实现</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzYxNDgwL2FydGljbGUvZGV0YWlscy8xMTMzOTM0MjE=\">pytorch Kfold 数据集划分</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTE2OTg4MDAvYXJ0aWNsZS9kZXRhaWxzLzEwNzYwNzgyOQ==\">交叉验证 -- 关于最终选取模型的疑问</span></li>\n</ul>\n<h2 id=\"f1-score\"><a class=\"anchor\" href=\"#f1-score\">#</a> F1-Score</h2>\n<h3 id=\"首先理解查准率precision\"><a class=\"anchor\" href=\"#首先理解查准率precision\">#</a> 首先理解查准率（precision）</h3>\n<p>指的是预测值为 1 且真实值也为 1 的样本<mark>在预测值为 1 的所有样本</mark>中所占的比例。以西瓜问题为例，<mark>算法挑出来的西瓜中有多少比例是好西瓜</mark>。</p>\n<h3 id=\"召回率recall\"><a class=\"anchor\" href=\"#召回率recall\">#</a> 召回率（recall）</h3>\n<p>也叫查全率，指的是预测值为 1 且真实值也为 1 的样本<mark>在真实值为 1 的所有样本</mark>中所占的比例。<mark>所有的好西瓜中有多少比例被算法挑了出来</mark>。</p>\n<h3 id=\"f1-分数f1-score\"><a class=\"anchor\" href=\"#f1-分数f1-score\">#</a> F1 分数（F1-Score）</h3>\n<p>又称为平衡 F 分数（BalancedScore），它被定义为精确率和召回率的调和平均数。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mn>2</mn><mo>⋅</mo><mfrac><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>⋅</mo><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>+</mo><mi>r</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">F_1=2\\cdot\\frac{precision\\cdot recall}{precision+recall}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25188em;vertical-align:-0.8804400000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8804400000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h2 id=\"sklearn-中的评估报告\"><a class=\"anchor\" href=\"#sklearn-中的评估报告\">#</a> sklearn 中的评估报告</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sklearn<span class=\"token punctuation\">.</span>metrics<span class=\"token punctuation\">.</span>classification_report<span class=\"token punctuation\">(</span>y_true<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> target_names<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> sample_weight<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> digits<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> output_dict<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"参数\"><a class=\"anchor\" href=\"#参数\">#</a> 参数</h3>\n<ul>\n<li>y_true：类别的真实标签值，类标签的列表</li>\n<li>y_pred：预测值的标签，类标签的列表</li>\n<li>labels：报告中要包含的标签索引的可选列表；这个参数一般不需要设置（如果要设置，比如 200 个类别，那么就应该如此设置：lable= range (200);  然后在 sklearn.metrics.classification_report 中将 labels=label），可是有的时候不设置就会出错，之所以会出错是因为：比如你总共的类别为 200 个类，但是，你的测试集中真实标签包含的类别只有 199 个，有一个类别缺失数据，如果不设置这个参数就会报错</li>\n<li>target_name：与标签匹配的名称，就是一个字符串列表，在报告中显示；也即是显示与 labels 对应的名称</li>\n<li>digits：这个参数是用来设置你要输出的格式位数，就是几位有效数字吧，大概就是这个意思，即指定输出格式的精确度</li>\n<li>sample_weight：暂时不知道有啥用</li>\n<li>output_dict：如果为 True，则将输出作为 dict 返回</li>\n</ul>\n<h3 id=\"指标分析\"><a class=\"anchor\" href=\"#指标分析\">#</a> 指标分析</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> classification_report</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> y_true <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> y_pred <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> target_names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'class 0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'class 1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'class 2'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>classification_report<span class=\"token punctuation\">(</span>y_true<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">,</span> target_names<span class=\"token operator\">=</span>target_names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>              precision    recall  f1<span class=\"token operator\">-</span>score   support</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     <span class=\"token keyword\">class</span> <span class=\"token class-name\">0</span>       <span class=\"token number\">0.50</span>      <span class=\"token number\">1.00</span>      <span class=\"token number\">0.67</span>         <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     <span class=\"token keyword\">class</span> <span class=\"token class-name\">1</span>       <span class=\"token number\">0.00</span>      <span class=\"token number\">0.00</span>      <span class=\"token number\">0.00</span>         <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     <span class=\"token keyword\">class</span> <span class=\"token class-name\">2</span>       <span class=\"token number\">1.00</span>      <span class=\"token number\">0.67</span>      <span class=\"token number\">0.80</span>         <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   micro avg       <span class=\"token number\">0.60</span>      <span class=\"token number\">0.60</span>      <span class=\"token number\">0.60</span>         <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   macro avg       <span class=\"token number\">0.50</span>      <span class=\"token number\">0.56</span>      <span class=\"token number\">0.49</span>         <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>weighted avg       <span class=\"token number\">0.70</span>      <span class=\"token number\">0.60</span>      <span class=\"token number\">0.61</span>         <span class=\"token number\">5</span></pre></td></tr></table></figure><ul>\n<li>y_true 为样本真实标签，y_pred 为样本预测标签；</li>\n<li>support：当前行的类别在测试数据中的样本总量，如上表就是，在 class 0 类别在测试集中总数量为 1；</li>\n<li>precision：精度 = 正确预测的个数 (TP)/ 被预测正确的个数 (TP+FP)；人话也就是模型预测的结果中有多少是预测正确的</li>\n<li>recall：召回率 = 正确预测的个数 (TP)/ 预测个数 (TP+FN)；人话也就是某个类别测试集中的总量，有多少样本预测正确了；</li>\n<li>f1-score：F1 = 2 * 精度 * 召回率 /(精度 + 召回率)</li>\n<li>micro avg：计算所有数据下的指标值，假设全部数据 5 个样本中有 3 个预测正确，所以 micro avg 为 3/5=0.6</li>\n<li>macro avg：每个类别评估指标未加权的平均值，比如准确率的 macro avg，(0.50+0.00+1.00)/3=0.5</li>\n<li>weighted avg：加权平均，就是测试集中样本量大的，我认为它更重要，给他设置的权重大点；比如第一个值的计算方法，(0.501 + 0.01 + 1.0*3)/5 = 0.70</li>\n</ul>\n<blockquote>\n<p>补充一下现在不再有 micro avg 了，因为这个指标指的是全体样本的准确率，所以简化成了一个指标 accuracy</p>\n</blockquote>\n<h3 id=\"参考-2\"><a class=\"anchor\" href=\"#参考-2\">#</a> 参考</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NvbXdheV9MaS9hcnRpY2xlL2RldGFpbHMvMTAyNzU4OTcy\">sklearn.metrics.classification_report 模块使用与指标分析 (生成混淆矩阵评价分类指标)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29kZXIud29yay9hcnRpY2xlLzQ3NTgyNzI=\">python - 如何显示每个交叉验证折叠的混淆矩阵和报告 (召回率、精度、fmeasure)</span></li>\n</ul>\n",
            "tags": [
                "人工智能",
                "基础知识",
                "F1-Score"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/basic/20230720/",
            "url": "https://blog.aayu.today/artificial-intelligence/basic/20230720/",
            "title": "Matplotlib学习笔记",
            "date_published": "2023-07-20T07:48:02.000Z",
            "content_html": "<blockquote>\n<p>B 站视频：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVBlNHkxUjc5ZC8=\">《十分钟讲解 Matplotlib 的核心内容与基本逻辑》</span></p>\n<p><a href=\"assets/Matplotlib_examples-20230720030616-zvqxlv2.ipynb\">Matplotlib_examples.ipynb</a></p>\n</blockquote>\n<h2 id=\"入门\"><a class=\"anchor\" href=\"#入门\">#</a> 入门</h2>\n<h3 id=\"基本设置\"><a class=\"anchor\" href=\"#基本设置\">#</a> 基本设置</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 一些基本设置</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 设置支持中文字体（黑体）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>matplotlib<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'font.family'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'SimHei'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>matplotlib<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'axes.unicode_minus'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 设置图片清晰度（200dpi: 200 像素每英寸）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>matplotlib<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'figure.dpi'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 图画面板调整为白色</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>matplotlib<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'axes.facecolor'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'white'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>matplotlib<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'savefig.facecolor'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string\">'white'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>y1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>y2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"设置标签\"><a class=\"anchor\" href=\"#设置标签\">#</a> 设置标签</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ro--\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> <span class=\"token string\">\"bs\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'def'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'sample'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'time'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"设置-x-轴和-y-轴范围\"><a class=\"anchor\" href=\"#设置-x-轴和-y-轴范围\">#</a> 设置 x 轴和 y 轴范围</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>yticks<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"局部显示\"><a class=\"anchor\" href=\"#局部显示\">#</a> 局部显示</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlim<span class=\"token punctuation\">(</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylim<span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.5</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"更多线段格式\"><a class=\"anchor\" href=\"#更多线段格式\">#</a> 更多线段格式</h3>\n<p><img data-src=\"assets/image-20230720012337-vl542qi.png\" alt=\"image\" /></p>\n<p>更多格式参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9zdGFibGUvYXBpL19hc19nZW4vbWF0cGxvdGxpYi5weXBsb3QucGxvdC5odG1s\">https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html</span></p>\n<h3 id=\"更多图片样式\"><a class=\"anchor\" href=\"#更多图片样式\">#</a> 更多图片样式</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9zdGFibGUvcGxvdF90eXBlcy9pbmRleC5odG1s\">https://matplotlib.org/stable/plot_types/index.html</span></p>\n<h2 id=\"结构\"><a class=\"anchor\" href=\"#结构\">#</a> 结构</h2>\n<p><img data-src=\"assets/image-20230720014014-nnw72ut.png\" alt=\"image\" /></p>\n<h3 id=\"画两张图\"><a class=\"anchor\" href=\"#画两张图\">#</a> 画两张图</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">211</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">212</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> <span class=\"token string\">\"b^--\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"使用面向对象-oop-精准语法\"><a class=\"anchor\" href=\"#使用面向对象-oop-精准语法\">#</a> 使用面向对象 OOP 精准语法</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fig<span class=\"token punctuation\">,</span> axes <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> <span class=\"token string\">\"b^--\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"画多个图\"><a class=\"anchor\" href=\"#画多个图\">#</a> 画多个图</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fig<span class=\"token punctuation\">,</span> axes <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> <span class=\"token string\">\"b^--\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ax <span class=\"token operator\">=</span> axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ax<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           s<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 大小</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           c<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 颜色</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>           <span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Bar\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Plot\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"y2-y1\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"更多设置\"><a class=\"anchor\" href=\"#更多设置\">#</a> 更多设置</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fig<span class=\"token punctuation\">,</span> axes <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>                         facecolor<span class=\"token operator\">=</span><span class=\"token string\">\"lightblue\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 背景色</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                         sharex<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 共享 x 轴</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                         sharey<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 共享 y 轴</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                         <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 删除子图</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r+-\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># Figure 对象添加整体大标题 / 注释</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>fig<span class=\"token punctuation\">.</span>suptitle<span class=\"token punctuation\">(</span><span class=\"token string\">\"Four Subplots\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>fig<span class=\"token punctuation\">.</span>supylabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"y1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>fig<span class=\"token punctuation\">.</span>supxlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"画-3d-图\"><a class=\"anchor\" href=\"#画-3d-图\">#</a> 画 3D 图</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 重新添加右下角坐标系（改变为三维坐标系）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ax <span class=\"token operator\">=</span> fig<span class=\"token punctuation\">.</span>add_subplot<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                     projection<span class=\"token operator\">=</span><span class=\"token string\">'3d'</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span><span class=\"token string\">\"grey\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ax<span class=\"token punctuation\">.</span>stem<span class=\"token punctuation\">(</span>seasons<span class=\"token punctuation\">,</span> stock1<span class=\"token punctuation\">,</span> stock2<span class=\"token operator\">-</span>stock1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ax<span class=\"token punctuation\">.</span>stem<span class=\"token punctuation\">(</span>seasons<span class=\"token punctuation\">,</span> stock1<span class=\"token punctuation\">,</span> stock2<span class=\"token operator\">-</span>stock1<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        linefmt<span class=\"token operator\">=</span><span class=\"token string\">'k--'</span><span class=\"token punctuation\">,</span> basefmt<span class=\"token operator\">=</span><span class=\"token string\">'k--'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        bottom<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> orientation<span class=\"token operator\">=</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ax<span class=\"token punctuation\">.</span>plot_surface<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                alpha<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ax<span class=\"token punctuation\">.</span>plot_surface<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                alpha<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"季度(x)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"股票1(y)\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ax<span class=\"token punctuation\">.</span>set_zlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"差价(z)\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"补充设置\"><a class=\"anchor\" href=\"#补充设置\">#</a> 补充设置</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 改变坐标系的背景颜色（在画图后改变属性，OOP）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_facecolor<span class=\"token punctuation\">(</span><span class=\"token string\">'grey'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>patch<span class=\"token punctuation\">.</span>set_alpha<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_facecolor<span class=\"token punctuation\">(</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>patch<span class=\"token punctuation\">.</span>set_alpha<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>plt<span class=\"token punctuation\">.</span>tight_layout<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"常用工作流程\"><a class=\"anchor\" href=\"#常用工作流程\">#</a> 常用工作流程</h2>\n<h3 id=\"导入包\"><a class=\"anchor\" href=\"#导入包\">#</a> 导入包</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 步骤 1. 导入包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib <span class=\"token keyword\">as</span> mpl  <span class=\"token comment\"># 整个包</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr></table></figure><h3 id=\"查询所有画图整体风格\"><a class=\"anchor\" href=\"#查询所有画图整体风格\">#</a> 查询所有画图整体风格</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 步骤 2. 查询所有画图整体风格</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># print(plt.style.available)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>plt<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 默认风格</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"default style\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># plt.savefig(\"images/style_1.png\", facecolor=plt.gcf().get_facecolor())</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>plt<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token string\">'ggplot'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"ggplot style\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># plt.savefig(\"images/style_2.png\", facecolor=plt.gcf().get_facecolor())</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>plt<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token string\">'seaborn-dark'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"seaborn-dark\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># plt.gcf().savefig(\"images/style_3.png\", facecolor=plt.gcf().get_facecolor())</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>plt<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 重新设置回默认风格</span></pre></td></tr></table></figure><h3 id=\"查询当前的一些画图属性设置\"><a class=\"anchor\" href=\"#查询当前的一些画图属性设置\">#</a> 查询当前的一些画图属性设置</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查询当前的一些画图属性设置</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mpl<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'figure.figsize'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 当前图画大小（长 * 高）（英寸）</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mpl<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'font.size'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 当前字体大小</span></pre></td></tr></table></figure><h3 id=\"查询当前计算机中-matplotlib-的可用字体\"><a class=\"anchor\" href=\"#查询当前计算机中-matplotlib-的可用字体\">#</a> 查询当前计算机中 matplotlib 的可用字体</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 例子：查询当前你的计算机中 matplotlib 的可用字体</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>font_manager <span class=\"token keyword\">as</span> fm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fm<span class=\"token punctuation\">.</span>_load_fontmanager<span class=\"token punctuation\">(</span>try_read_cache<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fpaths <span class=\"token operator\">=</span> fm<span class=\"token punctuation\">.</span>findSystemFonts<span class=\"token punctuation\">(</span>fontpaths<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># print(fpaths)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>exempt_lst <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"NISC18030.ttf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Emoji\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>skip<span class=\"token operator\">=</span><span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> fpaths<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\"># print(i)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> ft <span class=\"token keyword\">in</span> exempt_lst<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> ft <span class=\"token keyword\">in</span> i<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            skip<span class=\"token operator\">=</span><span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> skip<span class=\"token operator\">==</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        skip<span class=\"token operator\">=</span><span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    f <span class=\"token operator\">=</span> matplotlib<span class=\"token punctuation\">.</span>font_manager<span class=\"token punctuation\">.</span>get_font<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>family_name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"一些常用设定参数\"><a class=\"anchor\" href=\"#一些常用设定参数\">#</a> 一些常用设定参数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib <span class=\"token keyword\">as</span> mpl</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># step 2. 一些常用设定参数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 设置字体 (主要字体 / 数学公式字符集)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rc <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"font.family\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 默认字体</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token string\">\"mathtext.fontset\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"stix\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 数学字符集</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mpl<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 根据 dict 一次性更新很多参数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 设置图片清晰度（300dpi）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mpl<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'figure.dpi'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">300</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 图画面板调整为白色</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>mpl<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'axes.facecolor'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>mpl<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'savefig.facecolor'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># Figure 自动调整格式</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>plt<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'figure.constrained_layout.use'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr></table></figure><h3 id=\"中英文数学符号混排\"><a class=\"anchor\" href=\"#中英文数学符号混排\">#</a> 中英文 / 数学符号混排</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 例子。中英文 / 数学符号混排</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 单独添加字体</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>st_font <span class=\"token operator\">=</span> fm<span class=\"token punctuation\">.</span>FontProperties<span class=\"token punctuation\">(</span>fname<span class=\"token operator\">=</span><span class=\"token string\">\"/System/Library/Fonts/Supplemental/Songti.ttc\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 注 (理论上): SC: 简体中文；TC: 繁体中文；</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 实际上一般应该是使用 Heiti TC 即可（所见即所得）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">r'乌龟烏龜/密度$\\mathrm&#123;kg/m&#125;^3$'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>              fontname <span class=\"token operator\">=</span> <span class=\"token string\">'Heiti TC'</span><span class=\"token punctuation\">,</span> fontsize<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 单独指定字体大小与格式</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>ax<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'乌龟烏龜/黑体 $\\mathrm&#123;Times New Roman&#125;$'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        fontname<span class=\"token operator\">=</span><span class=\"token string\">'Heiti TC'</span><span class=\"token punctuation\">,</span> fontsize<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 目前其他字体支持也比较有限。。。如这里宋体没有繁体</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ax<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'乌龟烏龜/宋体 $Times New Roman$'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        fontproperties<span class=\"token operator\">=</span>st_font<span class=\"token punctuation\">,</span> fontsize<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylim<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># plt.savefig(\"images/pic3_1.png\", facecolor=fig.get_facecolor())</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"复用代码函数\"><a class=\"anchor\" href=\"#复用代码函数\">#</a> 复用代码 / 函数</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 三个 “三角函数”</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>y1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>y2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>y3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>tanh<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token comment\"># tanh 函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 画时间序列曲线</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 输入 / 输出都包含坐标轴变量</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">plot_time_series</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">,</span> lab<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> ax <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span>lab<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># x 轴固有格式</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>set_major_locator<span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">.</span>MultipleLocator<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>set_minor_locator<span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">.</span>MultipleLocator<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    labs <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>get_ticklabels<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>set_ticklabels<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">r\"&#123;:.2f&#125;$\\pi$\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>labs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> ax</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 两个坐标周</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>fig<span class=\"token punctuation\">,</span> axes <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                         sharex<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 在第一个坐标周画两条线</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> <span class=\"token string\">'b-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'$y=sin(x)$'</span><span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> <span class=\"token string\">'r:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'$y=cos(x)$'</span><span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 在第二个坐标周画一条线</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> <span class=\"token string\">'g--'</span><span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># plt.savefig(\"images/pic3_2.png\", facecolor=fig.get_facecolor())</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"很多格式可以后期再函数外处理\"><a class=\"anchor\" href=\"#很多格式可以后期再函数外处理\">#</a> 很多格式可以后期再函数外处理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 拓展：很多格式可以后期再函数外处理</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">plot_time_series</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">,</span> lab<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> ax <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span>lab<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># x 轴固有格式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"time\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>set_major_locator<span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">.</span>MultipleLocator<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>set_minor_locator<span class=\"token punctuation\">(</span>plt<span class=\"token punctuation\">.</span>MultipleLocator<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    labs <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>get_ticklabels<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>set_ticklabels<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">r\"&#123;:.2f&#125;$\\pi$\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> l <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>labs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> ax</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>fig<span class=\"token punctuation\">,</span> axes <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                         sharex<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> <span class=\"token string\">'b-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'$y=sin(x)$'</span><span class=\"token punctuation\">,</span> axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> <span class=\"token string\">'r:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'$y=cos(x)$'</span><span class=\"token punctuation\">,</span> axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> <span class=\"token string\">'g--'</span><span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 后期调整格式 / 添加内容 / 美化...</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token string\">\"upper right\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token string\">\"upper right\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># plt.savefig(\"images/pic3_3.png\", facecolor=fig.get_facecolor())</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"后期调整\"><a class=\"anchor\" href=\"#后期调整\">#</a> 后期调整</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 后期调整</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>fig<span class=\"token punctuation\">,</span> axes <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                         sharex<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span><span class=\"token string\">\"white\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> <span class=\"token string\">'b-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'$y=sin(x)$'</span><span class=\"token punctuation\">,</span> axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> <span class=\"token string\">'r:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'$y=cos(x)$'</span><span class=\"token punctuation\">,</span> axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>plot_time_series<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> <span class=\"token string\">'g--'</span><span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 调整格式 / 添加内容 / 美化...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 补充图示</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>lines<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_label<span class=\"token punctuation\">(</span><span class=\"token string\">r\"$y=tanh(x)$\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token string\">\"upper right\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token string\">\"upper right\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>axes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>plt<span class=\"token punctuation\">.</span>savefig<span class=\"token punctuation\">(</span><span class=\"token string\">\"images/pic3_4.png\"</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span>fig<span class=\"token punctuation\">.</span>get_facecolor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"交互式画图\"><a class=\"anchor\" href=\"#交互式画图\">#</a> 交互式画图</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> matplotlib <span class=\"token keyword\">import</span> cm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> matplotlib<span class=\"token punctuation\">.</span>ticker <span class=\"token keyword\">import</span> LinearLocator</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">%</span>matplotlib widget</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 交互式画图</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>subplot_kw<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"projection\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3d\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Make data.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>X <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>X<span class=\"token punctuation\">,</span> Y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>meshgrid<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>R <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>X<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> Y<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Z <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># Plot the surface.</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>surf <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>plot_surface<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span>cm<span class=\"token punctuation\">.</span>coolwarm<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                       linewidth<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> antialiased<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># Customize the z axis.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ax<span class=\"token punctuation\">.</span>set_zlim<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.01</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ax<span class=\"token punctuation\">.</span>zaxis<span class=\"token punctuation\">.</span>set_major_locator<span class=\"token punctuation\">(</span>LinearLocator<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># A StrMethodFormatter is used automatically</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ax<span class=\"token punctuation\">.</span>zaxis<span class=\"token punctuation\">.</span>set_major_formatter<span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;x:.02f&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># Add a color bar which maps values to colors.</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>surf<span class=\"token punctuation\">,</span> shrink<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> aspect<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># plt.savefig(\"images/pic3_5.png\", facecolor=fig.get_facecolor())</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "基础知识",
                "Matplotlib"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230719-3/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230719-3/",
            "title": "PyTorch学习笔记（8）迁移学习实战",
            "date_published": "2023-07-19T13:53:00.000Z",
            "content_html": "<h2 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h2>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/07/19/202307192154508.png\" alt=\"\" /></p>\n<p>迁移学习可以通过小数据量样本对模型进行微调，达到针对小数据量数据集更好的拟合效果</p>\n<h2 id=\"训练验证测试集伪代码流程\"><a class=\"anchor\" href=\"#训练验证测试集伪代码流程\">#</a> 训练 / 验证 / 测试集伪代码流程</h2>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/07/19/202307192154472.png\" alt=\"\" /></p>\n<h2 id=\"代码实战\"><a class=\"anchor\" href=\"#代码实战\">#</a> 代码实战</h2>\n<h3 id=\"自定义数据集\"><a class=\"anchor\" href=\"#自定义数据集\">#</a> 自定义数据集</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  os<span class=\"token punctuation\">,</span> glob</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  random<span class=\"token punctuation\">,</span> csv</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> Dataset<span class=\"token punctuation\">,</span> DataLoader</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> transforms</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span>    PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Pokemon</span><span class=\"token punctuation\">(</span>Dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">,</span> resize<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Pokemon<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>root <span class=\"token operator\">=</span> root</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        self<span class=\"token punctuation\">.</span>resize <span class=\"token operator\">=</span> resize</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name2label <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\"># \"sq...\":0</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isdir<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            self<span class=\"token punctuation\">.</span>name2label<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name2label<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\"># print(self.name2label)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\"># image, label</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>labels <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>load_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'images.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 60%</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            self<span class=\"token punctuation\">.</span>images <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            self<span class=\"token punctuation\">.</span>labels <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">elif</span> mode<span class=\"token operator\">==</span><span class=\"token string\">'val'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 20% = 60%->80%</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            self<span class=\"token punctuation\">.</span>images <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            self<span class=\"token punctuation\">.</span>labels <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 20% = 80%->100%</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            self<span class=\"token punctuation\">.</span>images <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            self<span class=\"token punctuation\">.</span>labels <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token operator\">*</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">load_csv</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            images <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>name2label<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token comment\"># 'pokemon\\\\mewtwo\\\\00001.png</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                images <span class=\"token operator\">+=</span> glob<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">'*.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                images <span class=\"token operator\">+=</span> glob<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">'*.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                images <span class=\"token operator\">+=</span> glob<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> <span class=\"token string\">'*.jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token comment\"># 1167, 'pokemon\\\\bulbasaur\\\\00000000.png'</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> images<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> newline<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                writer <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token keyword\">for</span> img <span class=\"token keyword\">in</span> images<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 'pokemon\\\\bulbasaur\\\\00000000.png'</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                    name <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>sep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    label <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>name2label<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    <span class=\"token comment\"># 'pokemon\\\\bulbasaur\\\\00000000.png', 0</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                    writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>img<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'writen into csv file:'</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token comment\"># read from csv file</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        images<span class=\"token punctuation\">,</span> labels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            reader <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> reader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token comment\"># 'pokemon\\\\bulbasaur\\\\00000000.png', 0</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                img<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> row</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                label <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                images<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                labels<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">return</span> images<span class=\"token punctuation\">,</span> labels</pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">denormalize</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x_hat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        mean <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.485</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.406</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        std <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.225</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token comment\"># x_hat = (x-mean)/std</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token comment\"># x = x_hat*std = mean</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token comment\"># x: [c, h, w]</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token comment\"># mean: [3] => [3, 1, 1]</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        mean <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>mean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>unsqueeze<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>unsqueeze<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        std <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>std<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>unsqueeze<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>unsqueeze<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token comment\"># print(mean.shape, std.shape)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        x <span class=\"token operator\">=</span> x_hat <span class=\"token operator\">*</span> std <span class=\"token operator\">+</span> mean</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token comment\"># idx~[0~len(images)]</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token comment\"># self.images, self.labels</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token comment\"># img: 'pokemon\\\\bulbasaur\\\\00000000.png'</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token comment\"># label: 0</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        img<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>labels<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        tf <span class=\"token operator\">=</span> transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># string path= > image data</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            transforms<span class=\"token punctuation\">.</span>Resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>resize<span class=\"token operator\">*</span><span class=\"token number\">1.25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>resize<span class=\"token operator\">*</span><span class=\"token number\">1.25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            transforms<span class=\"token punctuation\">.</span>RandomRotation<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            transforms<span class=\"token punctuation\">.</span>CenterCrop<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span>mean<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.485</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.406</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                                 std<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.225</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        img <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        label <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">return</span> img<span class=\"token punctuation\">,</span> label</pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token keyword\">import</span>  visdom</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token keyword\">import</span>  time</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token keyword\">import</span>  torchvision</pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    viz <span class=\"token operator\">=</span> visdom<span class=\"token punctuation\">.</span>Visdom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token comment\"># tf = transforms.Compose([</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token comment\">#                 transforms.Resize((64,64)),</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token comment\">#                 transforms.ToTensor(),</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token comment\"># ])</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token comment\"># db = torchvision.datasets.ImageFolder(root='pokemon', transform=tf)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token comment\"># loader = DataLoader(db, batch_size=32, shuffle=True)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token comment\"># print(db.class_to_idx)</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token comment\"># for x,y in loader:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token comment\">#     viz.images(x, nrow=8, win='batch', opts=dict(title='batch'))</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token comment\">#     viz.text(str(y.numpy()), win='label', opts=dict(title='batch-y'))</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token comment\">#     time.sleep(10)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    db <span class=\"token operator\">=</span> Pokemon<span class=\"token punctuation\">(</span><span class=\"token string\">'pokemon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'train'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    x<span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sample:'</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>denormalize<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'sample_x'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'sample_x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> num_workers<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span>y <span class=\"token keyword\">in</span> loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        viz<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>denormalize<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nrow<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'batch'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'batch'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        viz<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'label'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'batch-y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"自定义网络模型\"><a class=\"anchor\" href=\"#自定义网络模型\">#</a> 自定义网络模型</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span>  nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">import</span> functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ResBlk</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    resnet block</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        :param ch_in:</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        :param ch_out:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ResBlk<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>bn1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv2 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        self<span class=\"token punctuation\">.</span>bn2 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        self<span class=\"token punctuation\">.</span>extra <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> ch_out <span class=\"token operator\">!=</span> ch_in<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\"># [b, ch_in, h, w] => [b, ch_out, h, w]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            self<span class=\"token punctuation\">.</span>extra <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        :param x: [b, ch, h, w]</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        out <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>bn1<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>bn2<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv2<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\"># short cut.</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\"># extra module: [b, ch_in, h, w] => [b, ch_out, h, w]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\"># element-wise add:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> out</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        out <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">return</span> out</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ResNet18</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num_class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ResNet18<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\"># followed 4 blocks</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\"># [b, 16, h, w] => [b, 32, h ,w]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk1 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\"># [b, 32, h, w] => [b, 64, h, w]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk2 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token comment\"># # [b, 64, h, w] => [b, 128, h, w]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk3 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token comment\"># # [b, 128, h, w] => [b, 256, h, w]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk4 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\"># [b, 256, 7, 7]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        self<span class=\"token punctuation\">.</span>outlayer <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> num_class<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        :param x:</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        x <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token comment\"># [b, 64, h, w] => [b, 1024, h, w]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk2<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk3<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk4<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token comment\"># print(x.shape)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>outlayer<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    blk <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    tmp <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    out <span class=\"token operator\">=</span> blk<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'block:'</span><span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    model <span class=\"token operator\">=</span> ResNet18<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    tmp <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    out <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resnet:'</span><span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    p <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> p<span class=\"token punctuation\">:</span>p<span class=\"token punctuation\">.</span>numel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'parameters size:'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"从零开始训练\"><a class=\"anchor\" href=\"#从零开始训练\">#</a> 从零开始训练</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> optim<span class=\"token punctuation\">,</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  visdom</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torchvision</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> DataLoader</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span>    pokemon <span class=\"token keyword\">import</span> Pokemon</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span>    resnet <span class=\"token keyword\">import</span> ResNet18</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>batchsz <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>lr <span class=\"token operator\">=</span> <span class=\"token number\">1e-3</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>epochs <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>torch<span class=\"token punctuation\">.</span>manual_seed<span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>train_db <span class=\"token operator\">=</span> Pokemon<span class=\"token punctuation\">(</span><span class=\"token string\">'pokemon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>val_db <span class=\"token operator\">=</span> Pokemon<span class=\"token punctuation\">(</span><span class=\"token string\">'pokemon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>test_db <span class=\"token operator\">=</span> Pokemon<span class=\"token punctuation\">(</span><span class=\"token string\">'pokemon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>train_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>train_db<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                          num_workers<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>val_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>val_db<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> num_workers<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>test_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>test_db<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> num_workers<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>viz <span class=\"token operator\">=</span> visdom<span class=\"token punctuation\">.</span>Visdom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">evalute</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    total <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span>y <span class=\"token keyword\">in</span> loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        x<span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        correct <span class=\"token operator\">+=</span> torch<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">return</span> correct <span class=\"token operator\">/</span> total</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    model <span class=\"token operator\">=</span> ResNet18<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>lr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    best_acc<span class=\"token punctuation\">,</span> best_epoch <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    global_step <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'val_acc'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'val_acc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">for</span> step<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token comment\"># x: [b, 3, 224, 224], y: [b]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>global_step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">,</span> update<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            global_step <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">if</span> epoch <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            val_acc <span class=\"token operator\">=</span> evalute<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> val_loader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">if</span> val_acc<span class=\"token operator\">></span> best_acc<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                best_epoch <span class=\"token operator\">=</span> epoch</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                best_acc <span class=\"token operator\">=</span> val_acc</pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                torch<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>state_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'best.mdl'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>val_acc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>global_step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'val_acc'</span><span class=\"token punctuation\">,</span> update<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'best acc:'</span><span class=\"token punctuation\">,</span> best_acc<span class=\"token punctuation\">,</span> <span class=\"token string\">'best epoch:'</span><span class=\"token punctuation\">,</span> best_epoch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    model<span class=\"token punctuation\">.</span>load_state_dict<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'best.mdl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loaded from ckpt!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    test_acc <span class=\"token operator\">=</span> evalute<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> test_loader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test acc:'</span><span class=\"token punctuation\">,</span> test_acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"迁移学习\"><a class=\"anchor\" href=\"#迁移学习\">#</a> 迁移学习</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> optim<span class=\"token punctuation\">,</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  visdom</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torchvision</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> DataLoader</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span>    pokemon <span class=\"token keyword\">import</span> Pokemon</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># from    resnet import ResNet18</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> resnet18</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span>    utils <span class=\"token keyword\">import</span> Flatten</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>batchsz <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>lr <span class=\"token operator\">=</span> <span class=\"token number\">1e-3</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>epochs <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>torch<span class=\"token punctuation\">.</span>manual_seed<span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>train_db <span class=\"token operator\">=</span> Pokemon<span class=\"token punctuation\">(</span><span class=\"token string\">'pokemon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'train'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>val_db <span class=\"token operator\">=</span> Pokemon<span class=\"token punctuation\">(</span><span class=\"token string\">'pokemon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'val'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>test_db <span class=\"token operator\">=</span> Pokemon<span class=\"token punctuation\">(</span><span class=\"token string\">'pokemon'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>train_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>train_db<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                          num_workers<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>val_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>val_db<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> num_workers<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>test_loader <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>test_db<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> num_workers<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>viz <span class=\"token operator\">=</span> visdom<span class=\"token punctuation\">.</span>Visdom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">evalute</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    total <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span>y <span class=\"token keyword\">in</span> loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        x<span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        correct <span class=\"token operator\">+=</span> torch<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">return</span> correct <span class=\"token operator\">/</span> total</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\"># model = ResNet18(5).to(device)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    trained_model <span class=\"token operator\">=</span> resnet18<span class=\"token punctuation\">(</span>pretrained<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    model <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>trained_model<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">#[b, 512, 1, 1]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                          Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># [b, 512, 1, 1] => [b, 512]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                          nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\"># x = torch.randn(2, 3, 224, 224)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\"># print(model(x).shape)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>lr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    best_acc<span class=\"token punctuation\">,</span> best_epoch <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    global_step <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'val_acc'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'val_acc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">for</span> step<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token comment\"># x: [b, 3, 224, 224], y: [b]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>global_step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">,</span> update<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            global_step <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">if</span> epoch <span class=\"token operator\">%</span> <span class=\"token number\">1</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            val_acc <span class=\"token operator\">=</span> evalute<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> val_loader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">if</span> val_acc<span class=\"token operator\">></span> best_acc<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                best_epoch <span class=\"token operator\">=</span> epoch</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                best_acc <span class=\"token operator\">=</span> val_acc</pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                torch<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>state_dict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'best.mdl'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>val_acc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>global_step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'val_acc'</span><span class=\"token punctuation\">,</span> update<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'best acc:'</span><span class=\"token punctuation\">,</span> best_acc<span class=\"token punctuation\">,</span> <span class=\"token string\">'best epoch:'</span><span class=\"token punctuation\">,</span> best_epoch<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    model<span class=\"token punctuation\">.</span>load_state_dict<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">'best.mdl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loaded from ckpt!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    test_acc <span class=\"token operator\">=</span> evalute<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> test_loader<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test acc:'</span><span class=\"token punctuation\">,</span> test_acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"工具函数\"><a class=\"anchor\" href=\"#工具函数\">#</a> 工具函数</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span>    matplotlib <span class=\"token keyword\">import</span> pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Flatten</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Flatten<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        shape <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">plot_image</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    fig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        plt<span class=\"token punctuation\">.</span>tight_layout<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">0.3081</span><span class=\"token operator\">+</span><span class=\"token number\">0.1307</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'gray'</span><span class=\"token punctuation\">,</span> interpolation<span class=\"token operator\">=</span><span class=\"token string\">'none'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"&#123;&#125;: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        plt<span class=\"token punctuation\">.</span>xticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        plt<span class=\"token punctuation\">.</span>yticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230719-2/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230719-2/",
            "title": "PyTorch学习笔记（7）ResNet实战",
            "date_published": "2023-07-19T13:52:53.000Z",
            "content_html": "<h2 id=\"lenet5-网络模型\"><a class=\"anchor\" href=\"#lenet5-网络模型\">#</a> Lenet5 网络模型</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">import</span> functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Lenet5</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    for cifar10 dataset.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Lenet5<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv_unit <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\"># x: [b, 3, 32, 32] => [b, 16, ]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>MaxPool2d<span class=\"token punctuation\">(</span>kernel_size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>MaxPool2d<span class=\"token punctuation\">(</span>kernel_size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\"># flatten</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># fc unit</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fc_unit <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token comment\"># nn.Linear(120, 84),</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\"># nn.ReLU(),</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\"># [b, 3, 32, 32]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        tmp <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv_unit<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\"># [b, 16, 5, 5]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'conv out:'</span><span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\"># # use Cross Entropy Loss</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\"># self.criteon = nn.CrossEntropyLoss()</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        :param x: [b, 3, 32, 32]</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        batchsz <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\"># [b, 3, 32, 32] => [b, 16, 5, 5]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv_unit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\"># [b, 16, 5, 5] => [b, 16*5*5]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>batchsz<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\"># [b, 16*5*5] => [b, 10]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        logits <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fc_unit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\"># # [b, 10]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\"># pred = F.softmax(logits, dim=1)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token comment\"># loss = self.criteon(logits, y)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">return</span> logits</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    net <span class=\"token operator\">=</span> Lenet5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    tmp <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    out <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lenet out:'</span><span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"resnet-网络模型\"><a class=\"anchor\" href=\"#resnet-网络模型\">#</a> ResNet 网络模型</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span>  nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">import</span> functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ResBlk</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    resnet block</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        :param ch_in:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        :param ch_out:</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ResBlk<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\"># we add stride support for resbok, which is distinct from tutorials.</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        self<span class=\"token punctuation\">.</span>bn1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv2 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        self<span class=\"token punctuation\">.</span>bn2 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        self<span class=\"token punctuation\">.</span>extra <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">if</span> ch_out <span class=\"token operator\">!=</span> ch_in<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token comment\"># [b, ch_in, h, w] => [b, ch_out, h, w]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            self<span class=\"token punctuation\">.</span>extra <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span>stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        :param x: [b, ch, h, w]</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        out <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>bn1<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>bn2<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv2<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token comment\"># short cut.</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token comment\"># extra module: [b, ch_in, h, w] => [b, ch_out, h, w]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\"># element-wise add:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> out</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        out <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">return</span> out</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ResNet18</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ResNet18<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\"># followed 4 blocks</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\"># [b, 64, h, w] => [b, 128, h ,w]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk1 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\"># [b, 128, h, w] => [b, 256, h, w]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk2 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token comment\"># # [b, 256, h, w] => [b, 512, h, w]</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk3 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\"># # [b, 512, h, w] => [b, 1024, h, w]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk4 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span> <span class=\"token number\">512</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        self<span class=\"token punctuation\">.</span>outlayer <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token operator\">*</span><span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        :param x:</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        x <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token comment\"># [b, 64, h, w] => [b, 1024, h, w]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk2<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk3<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk4<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token comment\"># print('after conv:', x.shape) #[b, 512, 2, 2]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token comment\"># [b, 512, h, w] => [b, 512, 1, 1]</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        x <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>adaptive_avg_pool2d<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token comment\"># print('after pool:', x.shape)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>outlayer<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    blk <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    tmp <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    out <span class=\"token operator\">=</span> blk<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'block:'</span><span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    model <span class=\"token operator\">=</span> ResNet18<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    out <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resnet:'</span><span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"模型训练\"><a class=\"anchor\" href=\"#模型训练\">#</a> 模型训练</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> DataLoader</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> datasets</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> transforms</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn<span class=\"token punctuation\">,</span> optim</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span>    lenet5 <span class=\"token keyword\">import</span> Lenet5</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span>    resnet <span class=\"token keyword\">import</span> ResNet18</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    batchsz <span class=\"token operator\">=</span> <span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    cifar_train <span class=\"token operator\">=</span> datasets<span class=\"token punctuation\">.</span>CIFAR10<span class=\"token punctuation\">(</span><span class=\"token string\">'cifar'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span>mean<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.485</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.406</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                             std<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.225</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    cifar_train <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>cifar_train<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    cifar_test <span class=\"token operator\">=</span> datasets<span class=\"token punctuation\">.</span>CIFAR10<span class=\"token punctuation\">(</span><span class=\"token string\">'cifar'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span>mean<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.485</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.406</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                             std<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.225</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    cifar_test <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>cifar_test<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    x<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>cifar_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x:'</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> <span class=\"token string\">'label:'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># model = Lenet5().to(device)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    model <span class=\"token operator\">=</span> ResNet18<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span><span class=\"token number\">1e-3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">for</span> batchidx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>cifar_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token comment\"># [b, 3, 32, 32]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token comment\"># [b]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            x<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token comment\"># logits: [b, 10]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token comment\"># label:  [b]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token comment\"># loss: tensor scalar</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token comment\"># backprop</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>epoch<span class=\"token punctuation\">,</span> <span class=\"token string\">'loss:'</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token comment\"># test</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            total_correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            total_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> label <span class=\"token keyword\">in</span> cifar_test<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token comment\"># [b, 3, 32, 32]</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token comment\"># [b]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                x<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token comment\"># [b, 10]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                <span class=\"token comment\"># [b]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token comment\"># [b] vs [b] => scalar tensor</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                correct <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                total_correct <span class=\"token operator\">+=</span> correct</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                total_num <span class=\"token operator\">+=</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token comment\"># print(correct)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            acc <span class=\"token operator\">=</span> total_correct <span class=\"token operator\">/</span> total_num</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>epoch<span class=\"token punctuation\">,</span> <span class=\"token string\">'test acc:'</span><span class=\"token punctuation\">,</span> acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230719/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230719/",
            "title": "PyTorch学习笔记（6）卷积神经网络",
            "date_published": "2023-07-19T13:39:52.000Z",
            "content_html": "<h1 id=\"什么是卷积神经网络\"><a class=\"anchor\" href=\"#什么是卷积神经网络\">#</a> 什么是卷积神经网络</h1>\n<p><img data-src=\"assets/image-20230718045735-sy9ec1l.png\" alt=\"image\" /></p>\n<p>注意，是把一个 kernel 里的三个窗口做完运算后生成的三个值累加起来，得到新的 feature map。对于下一层有 16 个通道，则是把一个 kernel 里的 16 个窗口做完运算后生成的 16 个值累加起来，算作一个新的 feature。</p>\n<h2 id=\"代码示例\"><a class=\"anchor\" href=\"#代码示例\">#</a> 代码示例</h2>\n<h3 id=\"类风格-api\"><a class=\"anchor\" href=\"#类风格-api\">#</a> 类风格 API</h3>\n<p><img data-src=\"assets/image-20230718162849-qhpp3ei.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718162900-64ffjxu.png\" alt=\"image\" /></p>\n<h3 id=\"函数风格-api\"><a class=\"anchor\" href=\"#函数风格-api\">#</a> 函数风格 API</h3>\n<p><img data-src=\"assets/image-20230718162925-gaqrp2a.png\" alt=\"image\" /></p>\n<p>‍</p>\n<h1 id=\"池化层和采样\"><a class=\"anchor\" href=\"#池化层和采样\">#</a> 池化层和采样</h1>\n<h2 id=\"池化层\"><a class=\"anchor\" href=\"#池化层\">#</a> 池化层</h2>\n<p>最大池化：取 kernel 里的最大值</p>\n<p>平均池化：取 kernel 里的平均值</p>\n<p><img data-src=\"assets/image-20230718163210-ne2g6gs.png\" alt=\"image\" /></p>\n<h3 id=\"上采样\"><a class=\"anchor\" href=\"#上采样\">#</a> 上采样</h3>\n<p>将特征图放大</p>\n<p><img data-src=\"assets/image-20230718163320-4rn4o2j.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718163332-ggq6fgt.png\" alt=\"image\" /></p>\n<h1 id=\"batchnorm\"><a class=\"anchor\" href=\"#batchnorm\">#</a> BatchNorm</h1>\n<h2 id=\"image-normalization\"><a class=\"anchor\" href=\"#image-normalization\">#</a> Image Normalization</h2>\n<p><img data-src=\"assets/image-20230718163432-b8fti5e.png\" alt=\"image\" /></p>\n<p>这里的均值和方差是统计了数百万张图片在 RGB 三通道的均值和方差，所以通过这些数，就可以将图片大致缩放到均值为 0，方差为 1 的正态分布上了</p>\n<h2 id=\"batch-normalization\"><a class=\"anchor\" href=\"#batch-normalization\">#</a> Batch Normalization</h2>\n<p><img data-src=\"assets/image-20230718163721-esczlhj.png\" alt=\"image\" /></p>\n<p>这里只考虑 Batch Norm</p>\n<p>注意，它是将 N * H * W 数据合起来进行 Normalization 了，依旧是一个 Batch 里有三个 feature map，就对分别对每个的 feature map，将<mark>所有图片 N，所有宽高 H，W 合并起来</mark>进行 Normalization，这个就叫 Batch Normalization</p>\n<p><img data-src=\"assets/image-20230718164123-9jmygdw.png\" alt=\"image\" /></p>\n<p>从上图中可以看出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> 是从数据中计算得出的，计算得出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> 后，就可以将数据归一化到均值为 0，方差为 1 的正态分布上了。而 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> 是将分布转换到均值为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span>，方差为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> 的正态分布上。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> 的  <code>requires_grad</code>  也是为 True 的，因为他们也是要进行梯度计算的</p>\n<h2 id=\"代码示例-2\"><a class=\"anchor\" href=\"#代码示例-2\">#</a> 代码示例</h2>\n<p><img data-src=\"assets/image-20230718164718-cyr5lxn.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718164848-7bu9lqn.png\" alt=\"image\" /></p>\n<p><code>running_mean</code>  就是上面的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>， <code>running_var</code>  就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>，每次 batch normalization 后，都会更新这两个属性</p>\n<h2 id=\"伪代码\"><a class=\"anchor\" href=\"#伪代码\">#</a> 伪代码</h2>\n<p><img data-src=\"assets/image-20230718165047-o2tup6u.png\" alt=\"image\" /></p>\n<h2 id=\"查看参数\"><a class=\"anchor\" href=\"#查看参数\">#</a> 查看参数</h2>\n<p><img data-src=\"assets/image-20230718165120-7de7dyh.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718165212-cqjocig.png\" alt=\"image\" /></p>\n<p>注意，在 Test 中，因为我们往往只会预测一个 Sample，所以统计 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> 就是没有意义的。</p>\n<p>所以在 Test 时，会把全局的  <code>running_mean</code>  和  <code>running_var</code>  赋值给 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>，同时，在 Test 时，也没有 Backward，所以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi></mrow><annotation encoding=\"application/x-tex\">\\beta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span> 是不需要更新的，所以在 Test 时，需要调用  <code>eval()</code>  方法将模式切换过来再送入 Sample 进行预测。</p>\n<p><img data-src=\"assets/image-20230718170401-8c5rrpr.png\" alt=\"image\" /></p>\n<h2 id=\"使用-batch-normalization-的优点\"><a class=\"anchor\" href=\"#使用-batch-normalization-的优点\">#</a> 使用 Batch Normalization 的优点</h2>\n<ul>\n<li>收敛速度更快</li>\n<li>更好的最优解</li>\n<li>更稳定</li>\n</ul>\n<h1 id=\"经典卷积网络\"><a class=\"anchor\" href=\"#经典卷积网络\">#</a> 经典卷积网络</h1>\n<h2 id=\"lenet\"><a class=\"anchor\" href=\"#lenet\">#</a> LeNet</h2>\n<p><img data-src=\"assets/image-20230718193100-jpf8hhg.png\" alt=\"image\" /></p>\n<h2 id=\"alexnet\"><a class=\"anchor\" href=\"#alexnet\">#</a> AlexNet</h2>\n<p><img data-src=\"assets/image-20230718193455-hm22dhc.png\" alt=\"image\" /></p>\n<h2 id=\"vggnet\"><a class=\"anchor\" href=\"#vggnet\">#</a> VGGNet</h2>\n<p><img data-src=\"assets/image-20230718193203-iebk6ke.png\" alt=\"image\" /></p>\n<h2 id=\"googlenet\"><a class=\"anchor\" href=\"#googlenet\">#</a> GoogLeNet</h2>\n<p><img data-src=\"assets/image-20230718193241-us9a3ag.png\" alt=\"image\" /></p>\n<h2 id=\"resnet\"><a class=\"anchor\" href=\"#resnet\">#</a> ResNet</h2>\n<p><img data-src=\"assets/image-20230718193355-hu1fzxj.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718193416-nsdot95.png\" alt=\"image\" /></p>\n<h3 id=\"代码示例-3\"><a class=\"anchor\" href=\"#代码示例-3\">#</a> 代码示例</h3>\n<p><img data-src=\"assets/image-20230718193602-65fbflo.png\" alt=\"image\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span>  nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">import</span> functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span>    torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data <span class=\"token keyword\">import</span> DataLoader</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> datasets</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> transforms</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn<span class=\"token punctuation\">,</span> optim</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># from    torchvision.models import resnet18</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ResBlk</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    resnet block</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        :param ch_in:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        :param ch_out:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ResBlk<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        self<span class=\"token punctuation\">.</span>bn1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv2 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        self<span class=\"token punctuation\">.</span>bn2 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        self<span class=\"token punctuation\">.</span>extra <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">if</span> ch_out <span class=\"token operator\">!=</span> ch_in<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token comment\"># [b, ch_in, h, w] => [b, ch_out, h, w]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            self<span class=\"token punctuation\">.</span>extra <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span>ch_in<span class=\"token punctuation\">,</span> ch_out<span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span>ch_out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        :param x: [b, ch, h, w]</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        out <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>bn1<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>bn2<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv2<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token comment\"># short cut.</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token comment\"># extra module: [b, ch_in, h, w] => [b, ch_out, h, w]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\"># element-wise add:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        out <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>extra<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> out</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">return</span> out</pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ResNet18</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>ResNet18<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> kernel_size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>BatchNorm2d<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token comment\"># followed 4 blocks</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\"># [b, 64, h, w] => [b, 128, h ,w]</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk1 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token comment\"># [b, 128, h, w] => [b, 256, h, w]</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        self<span class=\"token punctuation\">.</span>blk2 <span class=\"token operator\">=</span> ResBlk<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\"># # [b, 256, h, w] => [b, 512, h, w]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token comment\"># self.blk3 = ResBlk(128, 256)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token comment\"># # [b, 512, h, w] => [b, 1024, h, w]</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token comment\"># self.blk4 = ResBlk(256, 512)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        self<span class=\"token punctuation\">.</span>outlayer <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        :param x:</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        :return:</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        x <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token comment\"># [b, 64, h, w] => [b, 1024, h, w]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>blk2<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token comment\"># x = self.blk3(x)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token comment\"># x = self.blk4(x)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token comment\"># print(x.shape)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>outlayer<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    batchsz <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    cifar_train <span class=\"token operator\">=</span> datasets<span class=\"token punctuation\">.</span>CIFAR10<span class=\"token punctuation\">(</span><span class=\"token string\">'cifar'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    cifar_train <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>cifar_train<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    cifar_test <span class=\"token operator\">=</span> datasets<span class=\"token punctuation\">.</span>CIFAR10<span class=\"token punctuation\">(</span><span class=\"token string\">'cifar'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    cifar_test <span class=\"token operator\">=</span> DataLoader<span class=\"token punctuation\">(</span>cifar_test<span class=\"token punctuation\">,</span> batch_size<span class=\"token operator\">=</span>batchsz<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    x<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>cifar_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x:'</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> <span class=\"token string\">'label:'</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token comment\"># model = Lenet5().to(device)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    model <span class=\"token operator\">=</span> ResNet18<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span><span class=\"token number\">1e-3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        model<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">for</span> batchidx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>cifar_train<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token comment\"># [b, 3, 32, 32]</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            <span class=\"token comment\"># [b]</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            x<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>            logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>            <span class=\"token comment\"># logits: [b, 10]</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>            <span class=\"token comment\"># label:  [b]</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>            <span class=\"token comment\"># loss: tensor scalar</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>            <span class=\"token comment\"># backprop</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>epoch<span class=\"token punctuation\">,</span> <span class=\"token string\">'loss:'</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        model<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token keyword\">with</span> torch<span class=\"token punctuation\">.</span>no_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            <span class=\"token comment\"># test</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            total_correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>            total_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> label <span class=\"token keyword\">in</span> cifar_test<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>                <span class=\"token comment\"># [b, 3, 32, 32]</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>                <span class=\"token comment\"># [b]</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>                x<span class=\"token punctuation\">,</span> label <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>                <span class=\"token comment\"># [b, 10]</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>                logits <span class=\"token operator\">=</span> model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>                <span class=\"token comment\"># [b]</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>                pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>                <span class=\"token comment\"># [b] vs [b] => scalar tensor</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>                correct <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">,</span> label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>                total_correct <span class=\"token operator\">+=</span> correct</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>                total_num <span class=\"token operator\">+=</span> x<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>                <span class=\"token comment\"># print(correct)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>            acc <span class=\"token operator\">=</span> total_correct <span class=\"token operator\">/</span> total_num</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>epoch<span class=\"token punctuation\">,</span> <span class=\"token string\">'acc:'</span><span class=\"token punctuation\">,</span> acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"nnmodule-相关-api\"><a class=\"anchor\" href=\"#nnmodule-相关-api\">#</a> nn.Module 相关 API</h1>\n<p><img data-src=\"assets/image-20230718193750-uu5ihn9.png\" alt=\"image\" /></p>\n<h3 id=\"优点1-container\"><a class=\"anchor\" href=\"#优点1-container\">#</a> 优点 1 Container</h3>\n<p>可以直接加入 nn.Sequential</p>\n<p><img data-src=\"assets/image-20230718193916-gtcosmu.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718194544-oro0omp.png\" alt=\"image\" /></p>\n<h3 id=\"优点2-可以方便的查看参数\"><a class=\"anchor\" href=\"#优点2-可以方便的查看参数\">#</a> 优点 2 可以方便的查看参数</h3>\n<p><img data-src=\"assets/image-20230718194007-tqwyb13.png\" alt=\"image\" /></p>\n<h3 id=\"优点3-可以方便的查看所有节点\"><a class=\"anchor\" href=\"#优点3-可以方便的查看所有节点\">#</a> 优点 3 可以方便的查看所有节点</h3>\n<ul>\n<li>modules: all nodes</li>\n<li>children: direct children</li>\n</ul>\n<p><img data-src=\"assets/image-20230718194234-vsv57up.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718194246-vd3a4az.png\" alt=\"image\" /></p>\n<h3 id=\"优点4-可以方便的转移到-gpu-设备上\"><a class=\"anchor\" href=\"#优点4-可以方便的转移到-gpu-设备上\">#</a> 优点 4 可以方便的转移到 GPU 设备上</h3>\n<p><img data-src=\"assets/image-20230718194345-tmhxs8z.png\" alt=\"image\" /></p>\n<h3 id=\"优点5-保存和加载模型\"><a class=\"anchor\" href=\"#优点5-保存和加载模型\">#</a> 优点 5 保存和加载模型</h3>\n<p><img data-src=\"assets/image-20230718194419-h9wq8tz.png\" alt=\"image\" /></p>\n<h3 id=\"优点6-方便的在训练和测试之间切换\"><a class=\"anchor\" href=\"#优点6-方便的在训练和测试之间切换\">#</a> 优点 6 方便的在训练和测试之间切换</h3>\n<p><img data-src=\"assets/image-20230718194458-qwgcm9p.png\" alt=\"image\" /></p>\n<h2 id=\"代码示例-4\"><a class=\"anchor\" href=\"#代码示例-4\">#</a> 代码示例</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    torch <span class=\"token keyword\">import</span> optim</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyLinear</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> inp<span class=\"token punctuation\">,</span> outp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MyLinear<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\"># requires_grad = True</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span>outp<span class=\"token punctuation\">,</span> inp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Parameter<span class=\"token punctuation\">(</span>torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span>outp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        x <span class=\"token operator\">=</span> x @ self<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>b</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Flatten</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Flatten<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">TestNet</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>TestNet<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>net <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> stride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                                 nn<span class=\"token punctuation\">.</span>MaxPool2d<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                                 Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                                 nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token number\">14</span><span class=\"token operator\">*</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">BasicNet</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>BasicNet<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        self<span class=\"token punctuation\">.</span>net <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Net</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Net<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        self<span class=\"token punctuation\">.</span>net <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span>BasicNet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                                 nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                                 nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    net <span class=\"token operator\">=</span> Net<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    net<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    net<span class=\"token punctuation\">.</span>train<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    net<span class=\"token punctuation\">.</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token comment\"># net.load_state_dict(torch.load('ckpt.mdl'))</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token comment\"># torch.save(net.state_dict(), 'ckpt.mdl')</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> t <span class=\"token keyword\">in</span> net<span class=\"token punctuation\">.</span>named_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'parameters:'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> m <span class=\"token keyword\">in</span> net<span class=\"token punctuation\">.</span>named_children<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'children:'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">for</span> name<span class=\"token punctuation\">,</span> m <span class=\"token keyword\">in</span> net<span class=\"token punctuation\">.</span>named_modules<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'modules:'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"数据增强\"><a class=\"anchor\" href=\"#数据增强\">#</a> 数据增强</h1>\n<h2 id=\"翻转\"><a class=\"anchor\" href=\"#翻转\">#</a> 翻转</h2>\n<p><img data-src=\"assets/image-20230718194841-swt1ija.png\" alt=\"image\" /></p>\n<h2 id=\"旋转\"><a class=\"anchor\" href=\"#旋转\">#</a> 旋转</h2>\n<p><img data-src=\"assets/image-20230718194902-9cc94er.png\" alt=\"image\" /></p>\n<h2 id=\"缩放和裁剪\"><a class=\"anchor\" href=\"#缩放和裁剪\">#</a> 缩放和裁剪</h2>\n<p><img data-src=\"assets/image-20230718195011-80s6j18.png\" alt=\"image\" /></p>\n<h2 id=\"代码示例-5\"><a class=\"anchor\" href=\"#代码示例-5\">#</a> 代码示例</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>optim <span class=\"token keyword\">as</span> optim</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> datasets<span class=\"token punctuation\">,</span> transforms</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> visdom <span class=\"token keyword\">import</span> Visdom</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>batch_size<span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>learning_rate<span class=\"token operator\">=</span><span class=\"token number\">0.01</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>epochs<span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>train_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                   transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>RandomHorizontalFlip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>RandomVerticalFlip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>RandomRotation<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>RandomRotation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">270</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>Resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>RandomCrop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                       <span class=\"token comment\"># transforms.Normalize((0.1307,), (0.3081,))</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>test_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\"># transforms.Normalize((0.1307,), (0.3081,))</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MLP</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MLP<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        self<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">784</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda:0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>net <span class=\"token operator\">=</span> MLP<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>SGD<span class=\"token punctuation\">(</span>net<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>learning_rate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>viz <span class=\"token operator\">=</span> Visdom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'train_loss'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'train loss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'test loss&amp;acc.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                                                   legend<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'acc.'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>global_step <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">for</span> batch_idx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token operator\">*</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        data<span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        logits <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\"># print(w1.grad.norm(), w2.grad.norm())</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        global_step <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>global_step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'train_loss'</span><span class=\"token punctuation\">,</span> update<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">if</span> batch_idx <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Train Epoch: &#123;&#125; [&#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)]\\tLoss: &#123;:.6f&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                epoch<span class=\"token punctuation\">,</span> batch_idx <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                       <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> batch_idx <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    test_loss <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">for</span> data<span class=\"token punctuation\">,</span> target <span class=\"token keyword\">in</span> test_loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span> <span class=\"token operator\">*</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        data<span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        logits <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        test_loss <span class=\"token operator\">+=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        correct <span class=\"token operator\">+=</span> pred<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>test_loss<span class=\"token punctuation\">,</span> correct <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>             <span class=\"token punctuation\">[</span>global_step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> update<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'pred'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>             opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'pred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    test_loss <span class=\"token operator\">/=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nTest set: Average loss: &#123;:.4f&#125;, Accuracy: &#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        test_loss<span class=\"token punctuation\">,</span> correct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> correct <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230718-2/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230718-2/",
            "title": "PyTorch学习笔记（5）过拟合问题",
            "date_published": "2023-07-18T08:11:33.000Z",
            "content_html": "<h1 id=\"过拟合问题\"><a class=\"anchor\" href=\"#过拟合问题\">#</a> 过拟合问题</h1>\n<h2 id=\"欠拟合\"><a class=\"anchor\" href=\"#欠拟合\">#</a> 欠拟合</h2>\n<p>当 train acc. is bad 并且 test acc. is bad as well 可以认为是欠拟合，但现在神经网络的学习能力太强了，所以这种问题不常见</p>\n<h2 id=\"过拟合\"><a class=\"anchor\" href=\"#过拟合\">#</a> 过拟合</h2>\n<p>当 train loss and acc. is much better 但是 test acc. is worse 就是过拟合，也就是泛化能力 Generalization Performance 不够，所以目前的主要问题就是如何缓解过拟合问题</p>\n<h2 id=\"训练验证测试集的划分\"><a class=\"anchor\" href=\"#训练验证测试集的划分\">#</a> 训练 / 验证 / 测试集的划分</h2>\n<p>对于测试集，我们不能做任何事情，所以通常来说将训练集划分为训练集和验证集</p>\n<p><img data-src=\"assets/image-20230718040018-ibrfmhe.png\" alt=\"image\" /></p>\n<h2 id=\"weight_decay\"><a class=\"anchor\" href=\"#weight_decay\">#</a> weight_decay</h2>\n<p>可以用来尽可能减少参数的值</p>\n<p>L1-regularization</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mrow><mo fence=\"true\">(</mo><mi>θ</mi><mo fence=\"true\">)</mo></mrow><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mrow><mo fence=\"true\">[</mo><msub><mi>y</mi><mi>i</mi></msub><mi>ln</mi><mo>⁡</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo>+</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mi>ln</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo>+</mo><mi>λ</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence=\"true\">∣</mo><msub><mi>θ</mi><mi>i</mi></msub><mo fence=\"true\">∣</mo></mrow></mrow><annotation encoding=\"application/x-tex\">J\\left(\\theta\\right)=-\\frac{1}{m}\\sum_{i=1}^{m}\\left\\lbrack y_{i}\\ln\\hat{y}_{i}+\\left(1-y_{i}\\right)\\ln\\left(1-\\hat{y}_{i}\\right)\\right\\rbrack+\\lambda\\sum_{i=1}^{n}\\left|\\theta_{i}\\right|\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">ln</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">ln</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">θ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∣</span></span></span></span></span></span></p>\n<p><img data-src=\"assets/image-20230718040840-58hm2no.png\" alt=\"image\" /></p>\n<p>L2-regularization</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mrow><mo fence=\"true\">(</mo><mi>W</mi><mo separator=\"true\">;</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>y</mi><mo fence=\"true\">)</mo></mrow><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>λ</mi><mo>⋅</mo><msup><mrow><mo fence=\"true\">∥</mo><mi>W</mi><mo fence=\"true\">∥</mo></mrow><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">J\\left(W;X,y\\right)+\\frac12\\lambda\\cdot\\left\\Vert W\\right\\Vert^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">2</span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.204008em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∥</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mclose delimcenter\" style=\"top:0em;\">∥</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954008em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><img data-src=\"assets/image-20230718040751-gguoms0.png\" alt=\"image\" /></p>\n<p>在 pytorch 中，可以方便的通过 weight_decay 设置 L2-regularization</p>\n<h2 id=\"动量-momentum\"><a class=\"anchor\" href=\"#动量-momentum\">#</a> 动量 momentum</h2>\n<p><img data-src=\"assets/image-20230718041005-8by3rjo.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718041019-6k3sqez.png\" alt=\"image\" /></p>\n<p>注意：Adam 中没有 momentum 参数，因为 Adam 已经内部包含了 momentum 的优化</p>\n<h2 id=\"学习率衰减\"><a class=\"anchor\" href=\"#学习率衰减\">#</a> 学习率衰减</h2>\n<h3 id=\"使用-reducelronplateau\"><a class=\"anchor\" href=\"#使用-reducelronplateau\">#</a> 使用 ReduceLROnPlateau</h3>\n<p>当 Loss 平滑时，自动衰减学习率</p>\n<p><img data-src=\"assets/image-20230718041215-d8gkcu1.png\" alt=\"image\" /></p>\n<h3 id=\"使用-steplr\"><a class=\"anchor\" href=\"#使用-steplr\">#</a> 使用 StepLR</h3>\n<p>达到迭代次数后进行衰减</p>\n<p><img data-src=\"assets/image-20230718041254-x7sr38c.png\" alt=\"image\" /></p>\n<h2 id=\"dropout\"><a class=\"anchor\" href=\"#dropout\">#</a> Dropout</h2>\n<p>pytorch 中的  <code>torch.nn.Dropout(p=dropout_prob)</code>  值为 1 时表示全部失活</p>\n<p>tensorflow 中的  <code>tf.nn.dropout(keep_prob)</code>  值为 1 时表示全部保持</p>\n<p><img data-src=\"assets/image-20230718041522-1wldthz.png\" alt=\"image\" /></p>\n<p>注意，当添加了 Dropout 时，需要在训练集和测试集之间用  <code>net.eval()</code>  进行切换。因为网络用于测试集时不用 Dropout</p>\n<p><img data-src=\"assets/image-20230718041712-iudgc39.png\" alt=\"image\" /></p>\n",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230718/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230718/",
            "title": "PyTorch学习笔记（4）神经网络与全连接层",
            "date_published": "2023-07-18T07:59:22.000Z",
            "content_html": "<h1 id=\"logistic-regression\"><a class=\"anchor\" href=\"#logistic-regression\">#</a> Logistic Regression</h1>\n<h2 id=\"q1-why-not-maximize-accuracy\"><a class=\"anchor\" href=\"#q1-why-not-maximize-accuracy\">#</a> Q1 why not maximize accuracy?</h2>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>a</mi><mi>c</mi><mi>c</mi><mi mathvariant=\"normal\">.</mi><mo>=</mo><mfrac><mrow><mo>∑</mo><mi>I</mi><mrow><mo fence=\"true\">(</mo><mi>p</mi><mi>r</mi><mi>e</mi><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mo fence=\"true\">)</mo></mrow></mrow><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mrow><mo fence=\"true\">(</mo><mi>Y</mi><mo fence=\"true\">)</mo></mrow></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">acc.=\\frac{\\sum I\\left(pred_{i}==y_{i}\\right)}{len\\left(Y\\right)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">c</span><span class=\"mord\">.</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>如果最小化 accuracy，<mark>会造成 gradient = 0 的现象</mark>。因为用 sigmoid 做激活函数，小于 0.5 判断为 0，大于 0.5 判断为 1，如果参数 w 从 0.4 提升到 0.45，但因为还是小于 0.5，所以预测的类别没有发生变化，accuracy 也没有变，导致梯度不就为 0 嘛。</p>\n<p>会造成梯度不连续的现象。还是刚才的例子，如果 w 从 0.499 变到 0.501，只有微小的提升，但是预测的类别就发生了变化，导致 accuracy 突变。也就造成了刚刚梯度都还是 0，但这次就突然变了很大的一个值，就是这种梯度不连续的现象。</p>\n<p>所以在分类问题上，不会用 accuracy 作为优化目标。</p>\n<h2 id=\"q2-why-call-logistic-regression\"><a class=\"anchor\" href=\"#q2-why-call-logistic-regression\">#</a> Q2 why call logistic regression</h2>\n<p>因为用了 sigmoid 激活函数，所以称它为 logistic</p>\n<p>如果使用 MSE 损失函数，则可以称之为 regression，因为 MSE 就是想将比如 P (0.7) 逼近 P (1)，所以可以称之为 regression</p>\n<p>而如果用 CrossEntropy 作为损失函数，则应该称为 classification</p>\n<h1 id=\"cross-entropy\"><a class=\"anchor\" href=\"#cross-entropy\">#</a> Cross Entropy</h1>\n<h2 id=\"entropy\"><a class=\"anchor\" href=\"#entropy\">#</a> Entropy</h2>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>E</mi><mi>n</mi><mi>t</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>y</mi><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><mi>P</mi><mrow><mo fence=\"true\">(</mo><mi>i</mi><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mi>P</mi><mrow><mo fence=\"true\">(</mo><mi>i</mi><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">Entropy=-\\sum_{i}P\\left(i\\right)\\log P\\left(i\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.327674em;vertical-align:-1.277669em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span></span></p>\n<p><img data-src=\"assets/image-20230718004736-1mmz8fb.png\" alt=\"image\" /></p>\n<h2 id=\"crossentropy\"><a class=\"anchor\" href=\"#crossentropy\">#</a> CrossEntropy</h2>\n<p>p 定义为真实分布，q 是模型学习到的分布，则 CrossEntropy 的定义如下</p>\n\\begin{align*}H\\left(p,q\\right)&=-\\sum p\\left(x\\right)\\log q\\left(x\\right)\\\\[10 pt] &=H\\left(p\\right)+D_{KL}\\left(p\\left|q\\right.\\right)\\end{align*}\n\n<p>KL 散度，用来衡量两个分布间的差异，详情：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMDA2NzY5MjI=\">Kullback-Leibler (KL) 散度介绍</span></p>\n<p>当 q = p，即完全学习到了真实分布时，CrossEntropy = Entropy</p>\n<p>对于分类问题，通常使用 one-hot 编码，这种情况下，真实分布 p 就类似 [1, 0, 0, 0] 这种，H (p) 的值就是 entropy = 1log1 = 0，所以对于分类问题，CrossEntropy 就等于用 KL 散度来衡量分布间的差异</p>\n<p>通常情况下，将没有经过激活函数的输出称为 Logits，如下</p>\n<p><img data-src=\"assets/image-20230718020108-blgtruv.png\" alt=\"image\" /></p>\n<h3 id=\"案例\"><a class=\"anchor\" href=\"#案例\">#</a> 案例</h3>\n<p><img data-src=\"assets/image-20230718015813-7b1wulq.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718015846-ssr348z.png\" alt=\"image\" /></p>\n<p>注意，在 pytorch 中，cross_entropy 就等于 softmax + log + nll_loss，所以对于 logits，直接扔到 cross_entropy 中就行</p>\n<p>‍# 全连接网络多分类小实战</p>\n<h2 id=\"底层-api-版\"><a class=\"anchor\" href=\"#底层-api-版\">#</a> 底层 API 版</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>optim <span class=\"token keyword\">as</span> optim</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> datasets<span class=\"token punctuation\">,</span> transforms</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>batch_size<span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>learning_rate<span class=\"token operator\">=</span><span class=\"token number\">0.01</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>epochs<span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>train_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                   transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1307</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.3081</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>test_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1307</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.3081</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>w1<span class=\"token punctuation\">,</span> b1 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">784</span><span class=\"token punctuation\">,</span> requires_grad<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\\</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>         torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> requires_grad<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>w2<span class=\"token punctuation\">,</span> b2 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> requires_grad<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\\</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> requires_grad<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>w3<span class=\"token punctuation\">,</span> b3 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> requires_grad<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\\</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>         torch<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> requires_grad<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>kaiming_normal_<span class=\"token punctuation\">(</span>w1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>kaiming_normal_<span class=\"token punctuation\">(</span>w2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">.</span>kaiming_normal_<span class=\"token punctuation\">(</span>w3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    x <span class=\"token operator\">=</span> x@w1<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> b1</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    x <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    x <span class=\"token operator\">=</span> x@w2<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> b2</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    x <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    x <span class=\"token operator\">=</span> x@w3<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> b3</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    x <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>SGD<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>w1<span class=\"token punctuation\">,</span> b1<span class=\"token punctuation\">,</span> w2<span class=\"token punctuation\">,</span> b2<span class=\"token punctuation\">,</span> w3<span class=\"token punctuation\">,</span> b3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>learning_rate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">for</span> batch_idx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token operator\">*</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        logits <span class=\"token operator\">=</span> forward<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\"># print(w1.grad.norm(), w2.grad.norm())</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">if</span> batch_idx <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Train Epoch: &#123;&#125; [&#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)]\\tLoss: &#123;:.6f&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                epoch<span class=\"token punctuation\">,</span> batch_idx <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                       <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> batch_idx <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    test_loss <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">for</span> data<span class=\"token punctuation\">,</span> target <span class=\"token keyword\">in</span> test_loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span> <span class=\"token operator\">*</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        logits <span class=\"token operator\">=</span> forward<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        test_loss <span class=\"token operator\">+=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        correct <span class=\"token operator\">+=</span> pred<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    test_loss <span class=\"token operator\">/=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nTest set: Average loss: &#123;:.4f&#125;, Accuracy: &#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        test_loss<span class=\"token punctuation\">,</span> correct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> correct <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"高阶-api-版\"><a class=\"anchor\" href=\"#高阶-api-版\">#</a> 高阶 API 版</h2>\n<h3 id=\"nnrelu-和-frelu-的区别\"><a class=\"anchor\" href=\"#nnrelu-和-frelu-的区别\">#</a> nn.ReLU 和 F.relu () 的区别</h3>\n<p>前者是类风格的 API，后者是函数风格的 API</p>\n<p>类风格的要创建实例，然后扔进去。函数风格的可以直接调用</p>\n<p><img data-src=\"assets/image-20230718025855-5zbuugm.png\" alt=\"image\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>optim <span class=\"token keyword\">as</span> optim</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> datasets<span class=\"token punctuation\">,</span> transforms</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>batch_size<span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>learning_rate<span class=\"token operator\">=</span><span class=\"token number\">0.01</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>epochs<span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>train_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                   transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1307</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.3081</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>test_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1307</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.3081</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MLP</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MLP<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        self<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">784</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>ReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>net <span class=\"token operator\">=</span> MLP<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>SGD<span class=\"token punctuation\">(</span>net<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>learning_rate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">for</span> batch_idx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token operator\">*</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        logits <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\"># print(w1.grad.norm(), w2.grad.norm())</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">if</span> batch_idx <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Train Epoch: &#123;&#125; [&#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)]\\tLoss: &#123;:.6f&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                epoch<span class=\"token punctuation\">,</span> batch_idx <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                       <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> batch_idx <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    test_loss <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">for</span> data<span class=\"token punctuation\">,</span> target <span class=\"token keyword\">in</span> test_loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span> <span class=\"token operator\">*</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        logits <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        test_loss <span class=\"token operator\">+=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        correct <span class=\"token operator\">+=</span> pred<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    test_loss <span class=\"token operator\">/=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nTest set: Average loss: &#123;:.4f&#125;, Accuracy: &#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        test_loss<span class=\"token punctuation\">,</span> correct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> correct <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"激活函数补充\"><a class=\"anchor\" href=\"#激活函数补充\">#</a> 激活函数补充</h2>\n<h3 id=\"leaky-relu\"><a class=\"anchor\" href=\"#leaky-relu\">#</a> Leaky ReLU</h3>\n<p><img data-src=\"assets/image-20230718030028-mas6ijy.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718030043-7q82env.png\" alt=\"image\" /></p>\n<h3 id=\"selu\"><a class=\"anchor\" href=\"#selu\">#</a> SELU</h3>\n<p><img data-src=\"assets/image-20230718030135-2t6gor3.png\" alt=\"image\" /></p>\n<h3 id=\"softplus\"><a class=\"anchor\" href=\"#softplus\">#</a> Softplus</h3>\n<p><img data-src=\"assets/image-20230718030213-qelvq0j.png\" alt=\"image\" /></p>\n<h2 id=\"gpu-加速\"><a class=\"anchor\" href=\"#gpu-加速\">#</a> GPU 加速</h2>\n<p><img data-src=\"assets/image-20230718030253-gnlqglh.png\" alt=\"image\" /></p>\n<p>使用  <code>cuda</code>  会造成硬编码，所以推荐使用  <code>to(device)</code></p>\n<h2 id=\"mnist-实战\"><a class=\"anchor\" href=\"#mnist-实战\">#</a> MNIST 实战</h2>\n<p><img data-src=\"assets/image-20230718030742-frs486s.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230718030856-pz2ojc7.png\" alt=\"image\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>optim <span class=\"token keyword\">as</span> optim</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> datasets<span class=\"token punctuation\">,</span> transforms</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>batch_size<span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>learning_rate<span class=\"token operator\">=</span><span class=\"token number\">0.01</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>epochs<span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>train_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                   transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1307</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.3081</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>test_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>Normalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1307</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.3081</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MLP</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MLP<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        self<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">784</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda:0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>net <span class=\"token operator\">=</span> MLP<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>SGD<span class=\"token punctuation\">(</span>net<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>learning_rate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">for</span> batch_idx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token operator\">*</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        data<span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        logits <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\"># print(w1.grad.norm(), w2.grad.norm())</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">if</span> batch_idx <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Train Epoch: &#123;&#125; [&#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)]\\tLoss: &#123;:.6f&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                epoch<span class=\"token punctuation\">,</span> batch_idx <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                       <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> batch_idx <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    test_loss <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">for</span> data<span class=\"token punctuation\">,</span> target <span class=\"token keyword\">in</span> test_loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span> <span class=\"token operator\">*</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        data<span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        logits <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        test_loss <span class=\"token operator\">+=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        correct <span class=\"token operator\">+=</span> pred<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    test_loss <span class=\"token operator\">/=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nTest set: Average loss: &#123;:.4f&#125;, Accuracy: &#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        test_loss<span class=\"token punctuation\">,</span> correct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> correct <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"visdom-可视化\"><a class=\"anchor\" href=\"#visdom-可视化\">#</a> Visdom 可视化</h2>\n<h3 id=\"安装及运行\"><a class=\"anchor\" href=\"#安装及运行\">#</a> 安装及运行</h3>\n<p>安装  <code>pip install visdom</code></p>\n<p>启动服务  <code>python -m visdom.server</code></p>\n<h3 id=\"绘制单条曲线\"><a class=\"anchor\" href=\"#绘制单条曲线\">#</a> 绘制单条曲线</h3>\n<p><img data-src=\"assets/image-20230718031136-ij6b1e5.png\" alt=\"image\" /></p>\n<h3 id=\"绘制多条曲线\"><a class=\"anchor\" href=\"#绘制多条曲线\">#</a> 绘制多条曲线</h3>\n<p><img data-src=\"assets/image-20230718031157-gz4wqos.png\" alt=\"image\" /></p>\n<h3 id=\"绘制图片和文本\"><a class=\"anchor\" href=\"#绘制图片和文本\">#</a> 绘制图片和文本</h3>\n<p><img data-src=\"assets/image-20230718031219-tgjs9h0.png\" alt=\"image\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">as</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>nn<span class=\"token punctuation\">.</span>functional <span class=\"token keyword\">as</span> F</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torch<span class=\"token punctuation\">.</span>optim <span class=\"token keyword\">as</span> optim</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span>    torchvision <span class=\"token keyword\">import</span> datasets<span class=\"token punctuation\">,</span> transforms</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> visdom <span class=\"token keyword\">import</span> Visdom</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>batch_size<span class=\"token operator\">=</span><span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>learning_rate<span class=\"token operator\">=</span><span class=\"token number\">0.01</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>epochs<span class=\"token operator\">=</span><span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>train_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> download<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                   transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                       transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                       <span class=\"token comment\"># transforms.Normalize((0.1307,), (0.3081,))</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>test_loader <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>DataLoader<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    datasets<span class=\"token punctuation\">.</span>MNIST<span class=\"token punctuation\">(</span><span class=\"token string\">'../data'</span><span class=\"token punctuation\">,</span> train<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> transform<span class=\"token operator\">=</span>transforms<span class=\"token punctuation\">.</span>Compose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        transforms<span class=\"token punctuation\">.</span>ToTensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\"># transforms.Normalize((0.1307,), (0.3081,))</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    batch_size<span class=\"token operator\">=</span>batch_size<span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MLP</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MLP<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        self<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">784</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>Linear<span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            nn<span class=\"token punctuation\">.</span>LeakyReLU<span class=\"token punctuation\">(</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>device <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">(</span><span class=\"token string\">'cuda:0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>net <span class=\"token operator\">=</span> MLP<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>optimizer <span class=\"token operator\">=</span> optim<span class=\"token punctuation\">.</span>SGD<span class=\"token punctuation\">(</span>net<span class=\"token punctuation\">.</span>parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span>learning_rate<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>criteon <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>CrossEntropyLoss<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>viz <span class=\"token operator\">=</span> Visdom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'train_loss'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'train loss'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'test loss&amp;acc.'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                                                   legend<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'loss'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'acc.'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>global_step <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">for</span> epoch <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">for</span> batch_idx<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token operator\">*</span><span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        data<span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        logits <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        loss <span class=\"token operator\">=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        loss<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\"># print(w1.grad.norm(), w2.grad.norm())</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        global_step <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>global_step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'train_loss'</span><span class=\"token punctuation\">,</span> update<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">if</span> batch_idx <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Train Epoch: &#123;&#125; [&#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)]\\tLoss: &#123;:.6f&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                epoch<span class=\"token punctuation\">,</span> batch_idx <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                       <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> batch_idx <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>train_loader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    test_loss <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    correct <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">for</span> data<span class=\"token punctuation\">,</span> target <span class=\"token keyword\">in</span> test_loader<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span> <span class=\"token operator\">*</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        data<span class=\"token punctuation\">,</span> target <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span>cuda<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        logits <span class=\"token operator\">=</span> net<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        test_loss <span class=\"token operator\">+=</span> criteon<span class=\"token punctuation\">(</span>logits<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        pred <span class=\"token operator\">=</span> logits<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        correct <span class=\"token operator\">+=</span> pred<span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>test_loss<span class=\"token punctuation\">,</span> correct <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>             <span class=\"token punctuation\">[</span>global_step<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> update<span class=\"token operator\">=</span><span class=\"token string\">'append'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>images<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>view<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    viz<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">.</span>detach<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cpu<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> win<span class=\"token operator\">=</span><span class=\"token string\">'pred'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>             opts<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'pred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    test_loss <span class=\"token operator\">/=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nTest set: Average loss: &#123;:.4f&#125;, Accuracy: &#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        test_loss<span class=\"token punctuation\">,</span> correct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token number\">100</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">*</span> correct <span class=\"token operator\">/</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>test_loader<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230717-2/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230717-2/",
            "title": "PyTorch学习笔记（3）随机梯度下降",
            "date_published": "2023-07-17T13:50:02.000Z",
            "content_html": "<h1 id=\"常见函数的梯度\"><a class=\"anchor\" href=\"#常见函数的梯度\">#</a> 常见函数的梯度</h1>\n<h2 id=\"基础\"><a class=\"anchor\" href=\"#基础\">#</a> 基础</h2>\n<ul>\n<li>导数 derivative</li>\n<li>偏微分 partial derivative</li>\n<li>梯度 gradient</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi mathvariant=\"normal\">∇</mi><mi>f</mi><mo>=</mo><mrow><mo fence=\"true\">(</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>f</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo separator=\"true\">;</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>f</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac><mo separator=\"true\">;</mo><mo>…</mo><mo separator=\"true\">;</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>f</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>x</mi><mi>n</mi></msub></mrow></mfrac><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\nabla f=\\left(\\frac{\\partial f}{\\partial x_1};\\frac{\\partial f}{\\partial x_2};\\ldots;\\frac{\\partial f}{\\partial x_{n}}\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">∇</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">(</span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.3139999999999996em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8360000000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">)</span></span></span></span></span></span></span></p>\n<p><img data-src=\"assets/image-20230717171714-98dnm6q.png\" alt=\"image\" /></p>\n<h1 id=\"常见激活函数及其梯度\"><a class=\"anchor\" href=\"#常见激活函数及其梯度\">#</a> 常见激活函数及其梯度</h1>\n<h2 id=\"sigmoid-logistic\"><a class=\"anchor\" href=\"#sigmoid-logistic\">#</a> Sigmoid / Logistic</h2>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mrow><mo fence=\"true\">(</mo><mi>x</mi><mo fence=\"true\">)</mo></mrow><mo>=</mo><mi>σ</mi><mrow><mo fence=\"true\">(</mo><mi>x</mi><mo fence=\"true\">)</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">f\\left(x\\right)=\\sigma\\left(x\\right)=\\frac{1}{1+e^{-x}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.697331em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n\\begin{align*}\\frac{\\mathrm{d}}{\\mathrm{d}x}\\sigma\\left(x\\right)={} & \\frac{\\mathrm{d}}{\\mathrm{d}x}\\left(\\frac{1}{1+e^{-x}}\\right)\\\\[10 pt] ={} & \\frac{e^{-x}}{\\left(1+e^{-x}\\right)^2}\\\\[14 pt] ={} & \\frac{\\left(1+e^{-x}\\right)-1}{\\left(1+e^{-x}\\right)^2}\\\\[10 pt] ={} & \\frac{1+e^{-x}}{\\left(1+e^{-x}\\right)^2}-\\left(\\frac{1}{1+e^{-x}}\\right)^2\\\\[10 pt] ={} & \\sigma\\left(x\\right)-\\sigma\\left(x\\right)^2\\\\[6 pt] \\sigma^{\\prime}={} & \\sigma\\left(1-\\sigma\\right)\\end{align*}\n\n<p><img data-src=\"assets/image-20230717190445-yex2nkt.png\" alt=\"image\" /></p>\n<p>缺点，当 x 趋近于正无穷或负无穷时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> 趋近于 1 或 0，所以它的导数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>σ</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> 就会趋近于 0，造成梯度弥散</p>\n<p><img data-src=\"assets/image-20230717194044-g4j1s4r.png\" alt=\"image\" /></p>\n<h2 id=\"tanh\"><a class=\"anchor\" href=\"#tanh\">#</a> Tanh</h2>\n\\begin{align*}f\\left(x\\right)=\\tanh\\left(x\\right)=\\frac{\\left(e^{x}-e^{-x}\\right)}{\\left(e^{x}+e^{-x}\\right)}\\\\ =2{sigmoid}\\left(2x\\right)-1\\end{align*}\n\n\\begin{align*}\\frac{\\mathrm{d}}{\\mathrm{d}x}\\tanh\\left(x\\right)&=\\frac{\\left(e^{x}+e^{-x}\\right)\\left(e^{x}+e^{-x}\\right)-\\left(e^{x}-e^{-x}\\right)\\left(e^{x}-e^{-x}\\right)}{\\left(e^{x}+e^{-x}\\right)^2}\\\\ &=1-\\frac{\\left(e^{x}-e^{-x}\\right)^2}{\\left(e^{x}+e^{-x}\\right)^2}\\\\[14 pt] &=1-\\tanh^2\\left(x\\right)\\end{align*}\n\n<p><img data-src=\"assets/image-20230717194431-poh9mfm.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717195121-xjohlc5.png\" alt=\"image\" /></p>\n<h2 id=\"relu\"><a class=\"anchor\" href=\"#relu\">#</a> ReLU</h2>\n<p>全称：Rectified Linear Unit</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mrow><mo fence=\"true\">(</mo><mi>x</mi><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>for </mtext><mi>x</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>for </mtext><mi>x</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">f\\left(x\\right)=\\begin{cases}0 &amp; \\text{for }x&lt;0\\\\ x &amp; \\text{for }x\\ge0\\end{cases}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0000299999999998em;vertical-align:-1.25003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mrow><mo fence=\"true\">(</mo><mi>x</mi><mo fence=\"true\">)</mo></mrow><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>for </mtext><mi>x</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext>for </mtext><mi>x</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">f^{\\prime}\\left(x\\right)=\\begin{cases}0 &amp; \\text{for }x&lt;0\\\\ 1 &amp; \\text{for }x\\ge0\\end{cases}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.051892em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.801892em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0000299999999998em;vertical-align:-1.25003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for </span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p><img data-src=\"assets/image-20230717195705-3kwqi8y.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717195758-i3azhrz.png\" alt=\"image\" /></p>\n<h1 id=\"常见loss及其梯度\"><a class=\"anchor\" href=\"#常见loss及其梯度\">#</a> 常见 Loss 及其梯度</h1>\n<h2 id=\"mean-squared-error\"><a class=\"anchor\" href=\"#mean-squared-error\">#</a> Mean Squared Error</h2>\n<p>注意 loss 和 L2 范式的区别如下</p>\n<ul>\n<li>loss = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><msup><mrow><mo fence=\"true\">[</mo><mi>y</mi><mo>−</mo><msup><mrow><mo fence=\"true\">(</mo><mi>x</mi><mi>w</mi><mo>+</mo><mi>b</mi><mo fence=\"true\">)</mo></mrow><mrow></mrow></msup><mo fence=\"true\">]</mo></mrow><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sum\\left\\lbrack y-\\left(xw+b\\right)^{}\\right\\rbrack^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.204018em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5029em;\"><span style=\"top:-2.5029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954008em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></li>\n<li>L2-norm = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mo fence=\"true\">∥</mo><mi>y</mi><mo>−</mo><mrow><mo fence=\"true\">(</mo><mi>x</mi><mi>w</mi><mo>+</mo><mi>b</mi><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">∥</mo></mrow><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\left\\Vert y-\\left(xw+b\\right)\\right\\Vert_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.29969999999999997em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">∥</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">∥</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151408em;\"><span style=\"top:-2.4003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29969999999999997em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li>loss = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><msup><mrow><mo fence=\"true\">(</mo><mi>y</mi><mo>−</mo><mrow><mo fence=\"true\">(</mo><mi>x</mi><mi>w</mi><mo>+</mo><mi>b</mi><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">norm\\left(y-\\left(xw+b\\right)\\right)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.204008em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954008em;\"><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n<p>用  <code>torch.autograd.grad</code>  求参数的导数时，需要保证参数的 requires_grad 属性为 True，然后重新生成计算图</p>\n<p><img data-src=\"assets/image-20230717201351-ellt4to.png\" alt=\"image\" /></p>\n<p>也可以用  <code>backward</code>  方法自动计算所有标记为可以求导的参数，赋值到参数的 grad 属性上</p>\n<p><img data-src=\"assets/image-20230717201653-kvyjrpk.png\" alt=\"image\" /></p>\n<h2 id=\"cross-entropy-loss\"><a class=\"anchor\" href=\"#cross-entropy-loss\">#</a> Cross Entropy Loss</h2>\n<h3 id=\"softmax激活函数\"><a class=\"anchor\" href=\"#softmax激活函数\">#</a> Softmax 激活函数</h3>\n<p>和 Sigmoid 激活函数都可以返回 0-1 的近似概率值，但 Softmax 可以保证计算后的所有值的和为 1，同时会把大的值放的更大，小的值压缩到更小的空间～</p>\n<p><img data-src=\"assets/image-20230717202926-0gz0ppc.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717202943-ds34e3p.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717202950-w7ddcqj.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717203007-by7xfvm.png\" alt=\"image\" /></p>\n<h3 id=\"代码案例\"><a class=\"anchor\" href=\"#代码案例\">#</a> 代码案例</h3>\n<p><img data-src=\"assets/image-20230717203437-u3nvo4e.png\" alt=\"image\" /></p>\n<p>结论：当 i 和 j 相等时，导数为正，不等时，导数为负</p>\n<h1 id=\"感知机的梯度推导\"><a class=\"anchor\" href=\"#感知机的梯度推导\">#</a> 感知机的梯度推导</h1>\n<h2 id=\"单层感知机\"><a class=\"anchor\" href=\"#单层感知机\">#</a> 单层感知机</h2>\n<p><img data-src=\"assets/image-20230717204636-bx8mzx6.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717204651-239mcak.png\" alt=\"image\" /></p>\n<p>结论：损失函数对哪个参数求导，就和哪个参数有关，简洁美</p>\n<h3 id=\"代码示例\"><a class=\"anchor\" href=\"#代码示例\">#</a> 代码示例</h3>\n<p><img data-src=\"assets/image-20230717204801-5xg2ao7.png\" alt=\"image\" /></p>\n<h2 id=\"多层感知机\"><a class=\"anchor\" href=\"#多层感知机\">#</a> 多层感知机</h2>\n<p>在梯度推导过程中，很巧妙的消掉了没有对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{jk}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 产生影响的部分，只有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>O</mi><mi>k</mi></msub><mo>−</mo><msub><mi>t</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">O_{k}-t_{k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 才会对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>j</mi><mi>k</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{jk}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 产生影响，所以求和符号就去掉了</p>\n<p><img data-src=\"assets/image-20230717205627-qtzje7b.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717205642-vektqcf.png\" alt=\"image\" /></p>\n<p k=\"\">结论：可以看到和单层感知机的区别就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>O</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">O_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 变成了 O_</p>\n<h3 id=\"代码示例-2\"><a class=\"anchor\" href=\"#代码示例-2\">#</a> 代码示例</h3>\n<p><img data-src=\"assets/image-20230717205823-oezwytf.png\" alt=\"image\" /></p>\n<p>这里求损失函数时，应该写成 (1, 2)，为什么写成 (1, 1) 也不报错呢，因为符合 broadcasting，自动扩张了维度</p>\n<h1 id=\"链式法则\"><a class=\"anchor\" href=\"#链式法则\">#</a> 链式法则</h1>\n<h2 id=\"基本规则\"><a class=\"anchor\" href=\"#基本规则\">#</a> 基本规则</h2>\n<p><img data-src=\"assets/image-20230717210836-y4b05f2.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717210913-a2tlj32.png\" alt=\"image\" /></p>\n<h2 id=\"代码示例-3\"><a class=\"anchor\" href=\"#代码示例-3\">#</a> 代码示例</h2>\n<p>可以验证链式法则结果的正确性</p>\n<p><img data-src=\"assets/image-20230717210935-xg0bsgx.png\" alt=\"image\" /></p>\n<h2 id=\"反向传播推导\"><a class=\"anchor\" href=\"#反向传播推导\">#</a> 反向传播推导</h2>\n<p><img data-src=\"assets/image-20230717212759-crydor9.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717212836-j9q00ek.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717212954-zcnrw23.png\" alt=\"image\" /></p>\n<p>太优雅了，一环套一环的完成了反向传播</p>\n<p>‍# 优化小实例</p>\n<p><img data-src=\"assets/image-20230717214602-ifaopq1.png\" alt=\"image\" /></p>\n<p>四个最小解</p>\n<ul>\n<li>f(3.0, 2.0) = 0.0</li>\n<li>f(-2.805118, 3.131312) = 0.0</li>\n<li>f(-3.779310, -3.283186) = 0.0</li>\n<li>f(3.584428, -1.848126) = 0.0</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span>  numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span>    mpl_toolkits<span class=\"token punctuation\">.</span>mplot3d <span class=\"token keyword\">import</span> Axes3D</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span>    matplotlib <span class=\"token keyword\">import</span> pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span>  torch</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">himmelblau</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x,y range:'</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>X<span class=\"token punctuation\">,</span> Y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>meshgrid<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'X,Y maps:'</span><span class=\"token punctuation\">,</span> X<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Z <span class=\"token operator\">=</span> himmelblau<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>fig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token string\">'himmelblau'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ax <span class=\"token operator\">=</span> fig<span class=\"token punctuation\">.</span>add_subplot<span class=\"token punctuation\">(</span>projection <span class=\"token operator\">=</span> <span class=\"token string\">'3d'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ax<span class=\"token punctuation\">.</span>plot_surface<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ax<span class=\"token punctuation\">.</span>view_init<span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># [1., 0.], [-4, 0.], [4, 0.]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>x <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> requires_grad<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>optimizer <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>optim<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> lr<span class=\"token operator\">=</span><span class=\"token number\">1e-3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">for</span> step <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    pred <span class=\"token operator\">=</span> himmelblau<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    optimizer<span class=\"token punctuation\">.</span>zero_grad<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    pred<span class=\"token punctuation\">.</span>backward<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    optimizer<span class=\"token punctuation\">.</span>step<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">if</span> step <span class=\"token operator\">%</span> <span class=\"token number\">2000</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'step &#123;&#125;: x = &#123;&#125;, f(x) = &#123;&#125;'</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>               <span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>step<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pred<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230717/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230717/",
            "title": "PyTorch学习笔记（2）",
            "date_published": "2023-07-17T07:47:29.000Z",
            "content_html": "<h1 id=\"broadcasting\"><a class=\"anchor\" href=\"#broadcasting\">#</a> Broadcasting</h1>\n<p>自动扩展维度语法糖</p>\n<h2 id=\"关键点\"><a class=\"anchor\" href=\"#关键点\">#</a> 关键点</h2>\n<ul>\n<li>A 和 B 张量做 broadcasting，如果 B 前面缺失一个维度，则自动在前面插入一个维度</li>\n<li>插入的维度大小为 1，接下来会自动将其维度大小为 1 的维度扩张到和 A 张量相同位置维度一样的大小</li>\n<li>例子：Bias [32, 1, 1] -&gt; [1, 32, 1, 1] -&gt; [4, 32, 14, 14]</li>\n</ul>\n<p>所以 broadcasting 的本质就是 unsqueeze + expand</p>\n<h2 id=\"案例\"><a class=\"anchor\" href=\"#案例\">#</a> 案例</h2>\n<ul>\n<li>\n<p>for actual demanding</p>\n<ul>\n<li>[class, students, scores]</li>\n<li>Add bias for every students: +5 score</li>\n<li>[4, 32, 8] + [4, 32, 8]</li>\n<li>[4, 32, 8] + [5.0]</li>\n</ul>\n</li>\n<li>\n<p>boardcasting 会自动完成：[5.0].unsqueeze (0).unsqueeze (0).expand (A) 这个操作</p>\n</li>\n</ul>\n<h2 id=\"适用情况\"><a class=\"anchor\" href=\"#适用情况\">#</a> 适用情况</h2>\n<ul>\n<li>\n<p>Match from <strong><mark>Last</mark></strong> dim!</p>\n<ul>\n<li>If current dim = 1, expand to same</li>\n<li>If either has no dim, insert one dim and expand to same</li>\n<li>otherwise, NOT broadcasting-able</li>\n</ul>\n</li>\n</ul>\n<p>例如：[4, 32, 14, 14] + [2, 32, 14, 14] 不可以进行，因为</p>\n<ul>\n<li>Dim 0 has dim, can NOT insert and expand to same</li>\n<li>Dim 0 has distinct dim, NOT size 1</li>\n<li>So NOT broadcasting-able</li>\n</ul>\n<h2 id=\"理解\"><a class=\"anchor\" href=\"#理解\">#</a> 理解</h2>\n<p>从最后一个维度开始匹配 match from last dim</p>\n<p>因为人们相信高维的东西都是相同的，只有低维的才会针对不同的情况有不同的数据</p>\n<p>例如对于 [4, 3, 32, 32] +</p>\n<ul>\n<li>[32, 32]，表示在所有照片，所有通道上都叠加一个相同的 Map</li>\n<li>[3, 1, 1]，表示在所有照片，不同通道上叠加设定的值，例如 R 通道上都加 0.5，G 通道上都加 0.4，B 通道上都加 0.3</li>\n<li>[1]，表示在所有照片，所有通道，所有像素点上都叠加一个相同的值</li>\n</ul>\n<h1 id=\"合并与分割\"><a class=\"anchor\" href=\"#合并与分割\">#</a> 合并与分割</h1>\n<h2 id=\"cat\"><a class=\"anchor\" href=\"#cat\">#</a> cat</h2>\n<p>例如 a 是 [class1-4, students, scores]，b 是 [class5-9, students, scores]</p>\n<p><img data-src=\"assets/image-20230717015120-74ho2j1.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717015658-396h6ii.png\" alt=\"image\" /></p>\n<h2 id=\"stack\"><a class=\"anchor\" href=\"#stack\">#</a> stack</h2>\n<p>stack 和 cat 的区别是 stack 会创建一个新的维度</p>\n<p><img data-src=\"assets/image-20230717015906-ymafbbd.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717020037-tdezmc6.png\" alt=\"image\" /></p>\n<h2 id=\"split\"><a class=\"anchor\" href=\"#split\">#</a> split</h2>\n<p>按长度进行拆分，用 List 作为参数的话，可以指定拆分后的张量在指定维度的长度，不用 List 的话就表示根据参数进行均分</p>\n<p><img data-src=\"assets/image-20230717020251-rssnn7h.png\" alt=\"image\" /></p>\n<h2 id=\"chunk\"><a class=\"anchor\" href=\"#chunk\">#</a> chunk</h2>\n<p>按数量进行拆分，上面报错的例子，如果用 chunk 就不会报错，因为 chunk 里面的参数 2 指定了要拆分成两个块，而 split 里面的 2 指定了用长度为 2 进行拆分，而维度 0 一共就 2 个，所以用 split 指定 2 拆分后，就只能得到一个张量，不能用 aa, bb 两个张量进行接收，而用 chunk 就不会有这个问题</p>\n<p><img data-src=\"assets/image-20230717020910-aq9tpxs.png\" alt=\"image\" /></p>\n<h1 id=\"数学运算\"><a class=\"anchor\" href=\"#数学运算\">#</a> 数学运算</h1>\n<h2 id=\"加减乘除\"><a class=\"anchor\" href=\"#加减乘除\">#</a> 加减乘除</h2>\n<p>这里就用到了前面所讲的 broadcasting</p>\n<p><img data-src=\"assets/image-20230717021145-azg8c61.png\" alt=\"image\" /></p>\n<h2 id=\"矩阵乘法\"><a class=\"anchor\" href=\"#矩阵乘法\">#</a> 矩阵乘法</h2>\n<p>有三种方式</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL1RvcmNoLm1t\">Torch.mm</span></p>\n<ul>\n<li>只适用于二维张量</li>\n</ul>\n</li>\n<li>\n<p>Torch.matmul</p>\n</li>\n<li>\n<p>@</p>\n</li>\n</ul>\n<p><img data-src=\"assets/image-20230717021920-ev4ouy3.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717021518-vx4vtw9.png\" alt=\"image\" /></p>\n<p>高维矩阵乘法实际上也是对最后两维进行矩阵乘法运算，本质就是支持多个矩阵对并行相乘</p>\n<p><img data-src=\"assets/image-20230717022145-waqr7bm.png\" alt=\"image\" /></p>\n<p>注意，broadcasting 也在其中发挥了作用</p>\n<h2 id=\"次方运算\"><a class=\"anchor\" href=\"#次方运算\">#</a> 次方运算</h2>\n<p>log 运算默认以 e 为底，使用 log2 或 log10 进行其他底数的运算</p>\n<p><img data-src=\"assets/image-20230717022412-yb0lhtz.png\" alt=\"image\" /><img data-src=\"assets/image-20230717022516-g1j0bpe.png\" alt=\"image\" /></p>\n<h2 id=\"取近似运算\"><a class=\"anchor\" href=\"#取近似运算\">#</a> 取近似运算</h2>\n<p>floor 往下走，ceil 往上走，trunc 取整数部分，frac 取小数部分，round 四舍五入</p>\n<p><img data-src=\"assets/image-20230717022745-t69lqyh.png\" alt=\"image\" /></p>\n<h2 id=\"裁剪运算\"><a class=\"anchor\" href=\"#裁剪运算\">#</a> 裁剪运算</h2>\n<p>一个参数表示小于设定参数的变为设定参数，两个参数表示（min，max），不在这个区间的设置为参数值，如下</p>\n<p><img data-src=\"assets/image-20230717023119-5ankhqd.png\" alt=\"image\" /></p>\n<h1 id=\"属性统计\"><a class=\"anchor\" href=\"#属性统计\">#</a> 属性统计</h1>\n<h2 id=\"范数\"><a class=\"anchor\" href=\"#范数\">#</a> 范数</h2>\n<h3 id=\"vector-norm-vs-matrix-norm\"><a class=\"anchor\" href=\"#vector-norm-vs-matrix-norm\">#</a> vector norm vs. matrix norm</h3>\n<p><img data-src=\"assets/image-20230717023809-miekd8n.png\" alt=\"image\" /></p>\n<h3 id=\"norm-运算\"><a class=\"anchor\" href=\"#norm-运算\">#</a> norm 运算</h3>\n<p>对哪个维度计算范式，就会消掉哪个维度哦</p>\n<p><img data-src=\"assets/image-20230717023712-z8aez4q.png\" alt=\"image\" /></p>\n<h2 id=\"min-max-sum-mean-prod\"><a class=\"anchor\" href=\"#min-max-sum-mean-prod\">#</a> min / max / sum / mean / prod</h2>\n<p><img data-src=\"assets/image-20230717024404-2jmiohm.png\" alt=\"image\" /></p>\n<h2 id=\"argmin-argmax\"><a class=\"anchor\" href=\"#argmin-argmax\">#</a> argmin / argmax</h2>\n<p>注意，它会默认把所有维度都打平，如果不想被打平，需要指定 dim</p>\n<p><img data-src=\"assets/image-20230717024704-5rmdmq8.png\" alt=\"image\" /><img data-src=\"assets/image-20230717024715-v4dy7bf.png\" alt=\"image\" /></p>\n<h2 id=\"dim-和-keepdim\"><a class=\"anchor\" href=\"#dim-和-keepdim\">#</a> dim 和 keepdim</h2>\n<p>正常情况下，在哪个维度 dim 运算，就会消掉哪个维度。keepdim 设置 true 可以保证 dim 不被消掉</p>\n<p><img data-src=\"assets/image-20230717025144-3qh3gg8.png\" alt=\"image\" /></p>\n<h2 id=\"topk-和-kthvalue\"><a class=\"anchor\" href=\"#topk-和-kthvalue\">#</a> topk 和 kthvalue</h2>\n<p>topk 比 max 返回更多的数据</p>\n<p>kthvalue 返回的是第 k 小的数和索引</p>\n<p><img data-src=\"assets/image-20230717025724-y6rb2xx.png\" alt=\"image\" /></p>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> &gt;, &gt;=, &lt;, &lt;=, !=, ==</h2>\n<p><img data-src=\"assets/image-20230717025851-vbkhq4r.png\" alt=\"image\" /></p>\n<h1 id=\"高阶操作\"><a class=\"anchor\" href=\"#高阶操作\">#</a> 高阶操作</h1>\n<h2 id=\"where\"><a class=\"anchor\" href=\"#where\">#</a> where</h2>\n<p><img data-src=\"assets/image-20230717030230-vmk91mi.png\" alt=\"image\" /></p>\n<p><img data-src=\"assets/image-20230717030715-x1fuwf4.png\" alt=\"image\" /></p>\n<p>where 可以方便的将数据放到 GPU 上进行并行处理</p>\n<h2 id=\"gather\"><a class=\"anchor\" href=\"#gather\">#</a> gather</h2>\n<p><img data-src=\"assets/image-20230717030802-enmfyxg.png\" alt=\"image\" /></p>\n<p>简单来说就是查表操作，比如有 [dog, cat, whale] 标签表，因为 PyTorch 里不能用字符串，所以预测我们得到结果张量为 [1, 0, 1, 2]，如果我们想根据索引查到对应的 Label，即 [cat, dog, cat, whale] 这样的结果，gather 方法就可以帮我们完成这件事</p>\n<p><img data-src=\"assets/image-20230717031313-pvfqpca.png\" alt=\"image\" /></p>\n",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/pytorch/20230716/",
            "url": "https://blog.aayu.today/artificial-intelligence/pytorch/20230716/",
            "title": "PyTorch学习笔记（1）",
            "date_published": "2023-07-16T13:30:26.000Z",
            "content_html": "<h1 id=\"基本数据类型\"><a class=\"anchor\" href=\"#基本数据类型\">#</a> 基本数据类型</h1>\n<h2 id=\"基本数据类型-2\"><a class=\"anchor\" href=\"#基本数据类型-2\">#</a> 基本数据类型</h2>\n<p>​<img data-src=\"assets/image-20230716190309-ygom5bg.png\" alt=\"image\" />​</p>\n<h3 id=\"常用类型\"><a class=\"anchor\" href=\"#常用类型\">#</a> 常用类型</h3>\n<ul>\n<li>FloatTensor</li>\n<li>DoubleTensor</li>\n<li>ByteTensor</li>\n<li>IntTensor</li>\n<li>LongTensor</li>\n</ul>\n<h2 id=\"标量\"><a class=\"anchor\" href=\"#标量\">#</a> 标量</h2>\n<p>​<img data-src=\"assets/image-20230716190848-frb6mv3.png\" alt=\"image\" /></p>\n<p>​<img data-src=\"assets/image-20230716191001-ml42z6w.png\" alt=\"image\" />​</p>\n<p>常用来表示 Loss</p>\n<h2 id=\"一维张量\"><a class=\"anchor\" href=\"#一维张量\">#</a> 一维张量</h2>\n<p>​<img data-src=\"assets/image-20230716191212-mdzuggb.png\" alt=\"image\" /></p>\n<p>​<img data-src=\"assets/image-20230716192053-ejlcybg.png\" alt=\"image\" />​​</p>\n<p>有三种方式：</p>\n<ul>\n<li>给定内容生成一维张量</li>\n<li>给定维度大小生成一维张量</li>\n<li>从 np 中得到一维张量</li>\n</ul>\n<p>常用于 Bias 神经元的偏置，和 Linear Input</p>\n<h2 id=\"二维张量\"><a class=\"anchor\" href=\"#二维张量\">#</a> 二维张量</h2>\n<blockquote>\n<p>dim、size () 和 shape 的区分。对于一个维度为 [2, 2] 这样的张量，它的：</p>\n<ul>\n<li>dim 为 2，也就是数学上的 Rank，秩；</li>\n<li>size () 和 shape 则返回这个张量的形状，size () 是方法，shape 是属性；</li>\n</ul>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716192117-urv8vi5.png\" alt=\"image\" />​</p>\n<p>常用来表示带有 Batch 的 Linear Input，例如 [4, 784]</p>\n<h2 id=\"三维张量\"><a class=\"anchor\" href=\"#三维张量\">#</a> 三维张量</h2>\n<p>​<img data-src=\"assets/image-20230716192354-hmvm9vz.png\" alt=\"image\" />​</p>\n<p>常用来表示带有 Batch 的 RNN Input，例如 [10, 20, 100]，表示一句话有 10 个单词 W，我们送入 20 句话进行训练 Sentence，每个单词用个 100 长度的一维向量表示</p>\n<h2 id=\"四维张量\"><a class=\"anchor\" href=\"#四维张量\">#</a> 四维张量</h2>\n<p>​<img data-src=\"assets/image-20230716192836-nghlmls.png\" alt=\"image\" />​</p>\n<p>常用来表示 CNN，例如 [b, c, h, w]</p>\n<h2 id=\"获取张量的大小\"><a class=\"anchor\" href=\"#获取张量的大小\">#</a> 获取张量的大小</h2>\n<p>用 numel 方法，即 num of element</p>\n<p>​<img data-src=\"assets/image-20230716193056-suepu98.png\" alt=\"image\" />​</p>\n<h1 id=\"创建-tensor\"><a class=\"anchor\" href=\"#创建-tensor\">#</a> 创建 Tensor</h1>\n<h2 id=\"创建-tensor-2\"><a class=\"anchor\" href=\"#创建-tensor-2\">#</a> 创建 Tensor</h2>\n<p>用 torch.FloatTensor 创建 Tensor：</p>\n<ul>\n<li>当接收到一个 List，则根据现有数据创建 Tensor</li>\n<li>当接收到不是 List，则根据维度创建 Tensor</li>\n</ul>\n<p>​<img data-src=\"assets/image-20230716193929-bzu98nk.png\" alt=\"image\" />​</p>\n<h2 id=\"创建未初始化的-tensor\"><a class=\"anchor\" href=\"#创建未初始化的-tensor\">#</a> 创建未初始化的 Tensor</h2>\n<ul>\n<li>Torch.empty()</li>\n<li>Torch.FloatTensor(d1, d2, d3)</li>\n<li>Torch.IntTensor(d1, d2, d3)</li>\n</ul>\n<blockquote>\n<p>NOT torch.FloatTensor([1, 2]) = torch.tensor([1, 2])</p>\n<p>未初始化的数据会有很多极端值，如下，所以记得跟上后续步骤将数据覆盖掉</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716194243-1ii8xeb.png\" alt=\"image\" />​</p>\n<blockquote>\n<p>PyTorch 如果没有手动配置，默认会生成 FloatTensor</p>\n<p>可以使用  <code>torch.set_default_tensor_type(torch.DoubleTensor)</code> ​ 设置其他类型</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716194508-kmkmb3b.png\" alt=\"image\" />​</p>\n<h2 id=\"创建均匀分布的-tensor\"><a class=\"anchor\" href=\"#创建均匀分布的-tensor\">#</a> 创建均匀分布的 Tensor</h2>\n<ul>\n<li>\n<p>rand</p>\n<ul>\n<li>随机从 [0, 1] 分布中生成数据</li>\n</ul>\n</li>\n<li>\n<p>rand_like</p>\n<ul>\n<li>接收一个 tensor，读取 tensor 的 shape，再送到 rand 函数</li>\n</ul>\n</li>\n<li>\n<p>randint</p>\n<ul>\n<li>四个参数，例如 randint (1, 10, 3, 3)，生成 [1, 10) 范围内的 3 x 3 的张量</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>均匀采用 0 ~ 10 的 Tensor，要用 x = 10 * torch.rand (d1, d2)，randint 只能采样整数</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716195129-nzngd2q.png\" alt=\"image\" />​</p>\n<h2 id=\"创建正态分布的-tensor\"><a class=\"anchor\" href=\"#创建正态分布的-tensor\">#</a> 创建正态分布的 Tensor</h2>\n<p>​<img data-src=\"assets/image-20230716195458-8t05inp.png\" alt=\"image\" />​</p>\n<h2 id=\"创建指定值的-tensor\"><a class=\"anchor\" href=\"#创建指定值的-tensor\">#</a> 创建指定值的 Tensor</h2>\n<p>​<img data-src=\"assets/image-20230716195640-l31hjqv.png\" alt=\"image\" />​</p>\n<h2 id=\"创建递增递减的-tensor\"><a class=\"anchor\" href=\"#创建递增递减的-tensor\">#</a> 创建递增 / 递减的 Tensor</h2>\n<p>​<img data-src=\"assets/image-20230716195757-jkgjt0m.png\" alt=\"image\" />​</p>\n<h2 id=\"创建等间距的-tensor\"><a class=\"anchor\" href=\"#创建等间距的-tensor\">#</a> 创建等间距的 Tensor</h2>\n<blockquote>\n<p>注意，arange 参数范围是 [0, 10)，而 linspace 参数范围则是 [0, 10]</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716200057-4ahsti9.png\" alt=\"image\" />​</p>\n<blockquote>\n<p>logspace 默认是以 10 为底数，可以通过 base 参数设置为 2，10，e 等</p>\n</blockquote>\n<h2 id=\"创建特殊的-tensor\"><a class=\"anchor\" href=\"#创建特殊的-tensor\">#</a> 创建特殊的 Tensor</h2>\n<p>​<img data-src=\"assets/image-20230716200254-xf667vw.png\" alt=\"image\" />​</p>\n<p>​<img data-src=\"assets/image-20230716200303-zgqfsyq.png\" alt=\"image\" />​</p>\n<h2 id=\"创建随机打散的-tensor\"><a class=\"anchor\" href=\"#创建随机打散的-tensor\">#</a> 创建随机打散的 Tensor</h2>\n<p>​<img data-src=\"assets/image-20230716200623-nb5tzif.png\" alt=\"image\" />​</p>\n<p>​<img data-src=\"assets/image-20230716200636-xyusxhk.png\" alt=\"image\" />​</p>\n<p>‍</p>\n<h1 id=\"索引和切片\"><a class=\"anchor\" href=\"#索引和切片\">#</a> 索引和切片</h1>\n<blockquote>\n<p>关键知识： <code>0:28:2</code> ​ 对应  <code>start:end:step</code> ​，不包含 end</p>\n</blockquote>\n<h2 id=\"索引前后-n-个\"><a class=\"anchor\" href=\"#索引前后-n-个\">#</a> 索引前 / 后 N 个</h2>\n<p>​<img data-src=\"assets/image-20230716201125-v48tta8.png\" alt=\"image\" />​</p>\n<h2 id=\"隔行索引\"><a class=\"anchor\" href=\"#隔行索引\">#</a> 隔行索引</h2>\n<p>​<img data-src=\"assets/image-20230716201136-ck0tf6t.png\" alt=\"image\" />​</p>\n<h2 id=\"指定索引采样\"><a class=\"anchor\" href=\"#指定索引采样\">#</a> 指定索引采样</h2>\n<p>​ <code>data.index_select(0, torch.tensor([0, 2]))</code> ​，表示在第 0 个维度上，取 0 和 2 两个索引的数据</p>\n<p>​ <code>data.index_select(1, torch.tensor([1, 2]))</code> ​，表示在第 1 个维度上，取 1 和 2 两个索引的数据</p>\n<p>​<img data-src=\"assets/image-20230716202139-r09fgv1.png\" alt=\"image\" />​</p>\n<h2 id=\"的使用\"><a class=\"anchor\" href=\"#的使用\">#</a> ... 的使用</h2>\n<blockquote>\n<p>当有 ... 出现时，右边的索引需要理解为最右边的维度。意思就是 ... 必须能被推测出代表哪几个维度才行</p>\n<p>例如： <code>[0, ..., ::2]</code> ​ 和  <code>[0, :, :, ::2]</code> ​ 等价，... 只是简化写法罢了</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716203125-hygb8f9.png\" alt=\"image\" />​</p>\n<h2 id=\"根据掩码索引\"><a class=\"anchor\" href=\"#根据掩码索引\">#</a> 根据掩码索引</h2>\n<blockquote>\n<p>缺点是会将索引后的数据打平。</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716203444-w79s2d2.png\" alt=\"image\" />​</p>\n<p>​<img data-src=\"assets/image-20230716203453-siyr0j9.png\" alt=\"image\" />​</p>\n<h1 id=\"维度变换\"><a class=\"anchor\" href=\"#维度变换\">#</a> 维度变换</h1>\n<h2 id=\"view-reshape-维度变换\"><a class=\"anchor\" href=\"#view-reshape-维度变换\">#</a> view /reshape 维度变换</h2>\n<blockquote>\n<p>只要保证 numel () 一致即可</p>\n<p>数据的存储 / 维度顺序非常重要，需要时刻记住！</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716203958-veikihw.png\" alt=\"image\" />​</p>\n<h2 id=\"squeeze-unsqueeze-删减维度-增加维度\"><a class=\"anchor\" href=\"#squeeze-unsqueeze-删减维度-增加维度\">#</a> squeeze /unsqueeze 删减维度 / 增加维度</h2>\n<h3 id=\"unsqueeze-增加维度\"><a class=\"anchor\" href=\"#unsqueeze-增加维度\">#</a> unsqueeze 增加维度</h3>\n<blockquote>\n<p>正数增加维度是在指定索引的前面增加；负数增加维度是在指定索引的后面增加</p>\n<p>尽量不要使用负数增加维度，易混淆</p>\n<p>参数取值在 [-a.dim () - 1, a.dim ()]，即 [-5, 4]</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716204913-uu5bgp0.png\" alt=\"image\" /></p>\n<p>​​<img data-src=\"assets/image-20230716205718-565dmmo.png\" alt=\"image\" />​</p>\n<blockquote>\n<p>配合扩张 Broadcasting 操作，就可以很方便的给图像上的每个像素添加一个偏置了</p>\n</blockquote>\n<h3 id=\"squeeze-删减维度\"><a class=\"anchor\" href=\"#squeeze-删减维度\">#</a> squeeze 删减维度</h3>\n<p>不指定参数就将所有 dim 为 1 的维度删除</p>\n<p>​<img data-src=\"assets/image-20230716210148-vud9omj.png\" alt=\"image\" />​</p>\n<h2 id=\"transpose-t-permute-维度转置\"><a class=\"anchor\" href=\"#transpose-t-permute-维度转置\">#</a> transpose /t/permute 维度转置</h2>\n<blockquote>\n<p>t () 只能用于二维张量</p>\n<p>transpose () 可以指定参数交换指定维度</p>\n<p>view 会导致维度顺序关系变得模糊，所以需要人为跟踪</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716211935-1njjwp7.png\" alt=\"image\" />​</p>\n<p>​<img data-src=\"assets/image-20230716211945-mk5ubc8.png\" alt=\"image\" /></p>\n<blockquote>\n<p>[b, h, w, c] 是 Numpy 存储图片的格式，所以需要这一步才能到处 Numpy</p>\n<p>permute 可以一步到位，直接调整多个维度的顺序</p>\n</blockquote>\n<p>​<img data-src=\"assets/image-20230716212019-d9gcs5j.png\" alt=\"image\" />​</p>\n<h2 id=\"expand-repeat-维度扩展\"><a class=\"anchor\" href=\"#expand-repeat-维度扩展\">#</a> expand /repeat 维度扩展</h2>\n<ul>\n<li>\n<p>expand：broadcasting</p>\n<ul>\n<li>不会主动复制数据，只有维度为 1 的才能扩张成其他维度</li>\n</ul>\n</li>\n<li>\n<p>repeat：memory copied</p>\n<ul>\n<li>会发生实实在在的内存拷贝</li>\n<li>和 expand 参数区别是，repeat 参数指的是每一个维度要拷贝的次数</li>\n</ul>\n</li>\n</ul>\n<p>​<img data-src=\"assets/image-20230716211156-d736yk5.png\" alt=\"image\" />​</p>\n<p>​<img data-src=\"assets/image-20230716211419-8k254ub.png\" alt=\"image\" />​</p>\n<p>‍</p>\n",
            "tags": [
                "人工智能",
                "机器学习修炼之PyTorch",
                "PyTorch"
            ]
        },
        {
            "id": "https://blog.aayu.today/english/spoken/20230709/",
            "url": "https://blog.aayu.today/english/spoken/20230709/",
            "title": "常用口语-海关",
            "date_published": "2023-07-09T15:34:59.000Z",
            "content_html": "<h2 id=\"常见词汇\"><a class=\"anchor\" href=\"#常见词汇\">#</a> 常见词汇</h2>\n<h3 id=\"border-国界边界\"><a class=\"anchor\" href=\"#border-国界边界\">#</a> Border 国界；边界</h3>\n<p>cross the border 过了边界</p>\n<p>You should never try to illegally cross the board into a different country.</p>\n<h3 id=\"declaration-card-form-海关申报书\"><a class=\"anchor\" href=\"#declaration-card-form-海关申报书\">#</a> Declaration card /form 海关申报书</h3>\n<p>Most countries require you to fill in a declaration card.</p>\n<h3 id=\"arrival-card-form-入境卡\"><a class=\"anchor\" href=\"#arrival-card-form-入境卡\">#</a> Arrival card /form 入境卡</h3>\n<p>For China, foreigners just have to fill in a small arrival card.</p>\n<h3 id=\"fill-in-填\"><a class=\"anchor\" href=\"#fill-in-填\">#</a> Fill in 填</h3>\n<p>Make sure to fill in the form accurately. Otherwise you might get into trouble.</p>\n<h3 id=\"country-of-residence-居住国\"><a class=\"anchor\" href=\"#country-of-residence-居住国\">#</a> Country of residence 居住国</h3>\n<p>What is your country of residence? —— Canada.</p>\n<h3 id=\"currency-货币\"><a class=\"anchor\" href=\"#currency-货币\">#</a> Currency 货币</h3>\n<p>Are you traveling with any foreign currency?</p>\n<h3 id=\"resident-visitor-住户-访客\"><a class=\"anchor\" href=\"#resident-visitor-住户-访客\">#</a> Resident / Visitor 住户 / 访客</h3>\n<p>Residents line up on the left, visitors line up on the right.</p>\n<h3 id=\"nationality-国籍\"><a class=\"anchor\" href=\"#nationality-国籍\">#</a> Nationality 国籍</h3>\n<p>What is your nationality? —— Chinese.</p>\n<h3 id=\"citizenship-公民身份\"><a class=\"anchor\" href=\"#citizenship-公民身份\">#</a> Citizenship 公民身份</h3>\n<p>What is your citizenship? —— I have Chinese citizenship. / I am a citizen of China.</p>\n<h3 id=\"firearms-weapons-火器-武器\"><a class=\"anchor\" href=\"#firearms-weapons-火器-武器\">#</a> Firearms /weapons 火器 / 武器</h3>\n<p>It's generally a good idea to not travel with firearms or weapons.</p>\n<h3 id=\"duration-of-stay-停留时间\"><a class=\"anchor\" href=\"#duration-of-stay-停留时间\">#</a> Duration of stay 停留时间</h3>\n<p>What will be your duration of stay in Canada?</p>\n<h3 id=\"business-pleasure-study-商务-娱乐-学习\"><a class=\"anchor\" href=\"#business-pleasure-study-商务-娱乐-学习\">#</a> Business /pleasure/study 商务 / 娱乐 / 学习</h3>\n<p>What is your purpose of traveling? Business, pleasure, or study? —— I'm traveling for business.</p>\n<h3 id=\"border-agent-边境官员\"><a class=\"anchor\" href=\"#border-agent-边境官员\">#</a> Border agent 边境官员</h3>\n<p>The border agent will sometimes ask you a few questions.</p>\n<h3 id=\"kiosk-自助服务亭\"><a class=\"anchor\" href=\"#kiosk-自助服务亭\">#</a> kiosk 自助服务亭</h3>\n<p>Canadian citizens or permanent residents can use the automatic kiosks at customs and immigration.</p>\n<h3 id=\"prohibited-禁止\"><a class=\"anchor\" href=\"#prohibited-禁止\">#</a> Prohibited 禁止</h3>\n<p>Certain items like firearms or weapons are prohibited to travel with.</p>\n<h2 id=\"question\"><a class=\"anchor\" href=\"#question\">#</a> Question</h2>\n<ol>\n<li>Have you ever been questioned by airport security? What did they ask you?</li>\n<li>Have you ever been caught with prohibited items?</li>\n</ol>\n<h2 id=\"homework\"><a class=\"anchor\" href=\"#homework\">#</a> Homework</h2>\n<p>Write a dialog going through customs.</p>\n<p>You should say:</p>\n<ul>\n<li>what is your purpose of travel?</li>\n<li>How long are you staying?</li>\n<li>What is the value of goods you are traveling with?</li>\n</ul>\n<blockquote>\n<p>Agent: Hi there, can I see your passport?</p>\n<p>Me: Yes, here you go.</p>\n<p>A: And where is your final destination?</p>\n<p>M: Vancouver.</p>\n<p>A: Okay, what is your purpose of travel?</p>\n<p>M: I'm visiting my family.</p>\n<p>A: How long will you be staying in Canada?</p>\n<p>M: For 1 month.</p>\n<p>A: What is the value of goods you are traveling with?</p>\n<p>M: Just 500$. I'm bringing some gifts for my family.</p>\n<p>A: Okay. You're good to go. Move along.</p>\n<p>M: Thank you.</p>\n</blockquote>\n",
            "tags": [
                "英语学习之路",
                "口语",
                "英语"
            ]
        },
        {
            "id": "https://blog.aayu.today/english/spoken/20230706/",
            "url": "https://blog.aayu.today/english/spoken/20230706/",
            "title": "常用口语-机场",
            "date_published": "2023-07-06T13:57:05.000Z",
            "content_html": "<h2 id=\"常见词汇\"><a class=\"anchor\" href=\"#常见词汇\">#</a> 常见词汇</h2>\n<h3 id=\"terminal-航站楼\"><a class=\"anchor\" href=\"#terminal-航站楼\">#</a> Terminal 航站楼</h3>\n<p>I need to go to terminal 1.</p>\n<h3 id=\"airline-航空公司\"><a class=\"anchor\" href=\"#airline-航空公司\">#</a> Airline 航空公司</h3>\n<p>What airline are you flying with?</p>\n<p>I'm flying with Air China / Air Canada.</p>\n<h3 id=\"international-flight-国际航班\"><a class=\"anchor\" href=\"#international-flight-国际航班\">#</a> International flight 国际航班</h3>\n<p>It's an international flight, so it should be in terminal 3.</p>\n<h3 id=\"domestic-flight-国内航班\"><a class=\"anchor\" href=\"#domestic-flight-国内航班\">#</a> Domestic flight 国内航班</h3>\n<p>I'm just taking a domestic flight.</p>\n<h3 id=\"departure-出发\"><a class=\"anchor\" href=\"#departure-出发\">#</a> Departure 出发</h3>\n<p>The departures are upstairs.</p>\n<h3 id=\"arrival-到达\"><a class=\"anchor\" href=\"#arrival-到达\">#</a> Arrival 到达</h3>\n<p>I'm picking someone up, so I need to go to the arrivals.</p>\n<h3 id=\"check-in-登记\"><a class=\"anchor\" href=\"#check-in-登记\">#</a> Check-in 登记</h3>\n<p>I have to check-in 2 hours before my flight. 我必须在起飞前 2 小时办理登机手续</p>\n<p>What do you use to check in?</p>\n<h3 id=\"passport-护照\"><a class=\"anchor\" href=\"#passport-护照\">#</a> Passport 护照</h3>\n<p>To check-in, you need to hand them your passport (hand somebody something. hand something to somebody. 一般不用 give，因为 passport 登记完后会还给我们，所以一般用 hand).</p>\n<h3 id=\"boarding-pass-登机牌\"><a class=\"anchor\" href=\"#boarding-pass-登机牌\">#</a> Boarding pass 登机牌</h3>\n<p>When you check-in you will receive your boarding pass.</p>\n<p>Many boarding passes are on your phone now.</p>\n<p>I need to buy a plane ticket when I arrive the airport.</p>\n<h3 id=\"aisle-window-seat-过道座位-靠窗座位\"><a class=\"anchor\" href=\"#aisle-window-seat-过道座位-靠窗座位\">#</a> Aisle / Window seat 过道座位 / 靠窗座位</h3>\n<p>I definitely prefer window seats. What about you?</p>\n<h3 id=\"safety-exit-row-安全出口那排\"><a class=\"anchor\" href=\"#safety-exit-row-安全出口那排\">#</a> Safety exit row 安全出口那排</h3>\n<p>Those are the best seats, because you get a lot of space.</p>\n<p>I don't like to be in between two people with someone on either side. I feel very squished.</p>\n<h3 id=\"boarding-time-departure-time-登机时间-出发时间\"><a class=\"anchor\" href=\"#boarding-time-departure-time-登机时间-出发时间\">#</a> Boarding time / Departure time 登机时间 / 出发时间</h3>\n<p>Looks like the boarding time is 10:30, and the departure time is 11:15.</p>\n<p>Your boarding pass will alse tell you your boarding time and departure time.</p>\n<p>The boarding time is usually half an hour to 45 min before the departure time.</p>\n<h3 id=\"priority-boarding-优先登机\"><a class=\"anchor\" href=\"#priority-boarding-优先登机\">#</a> Priority boarding 优先登机</h3>\n<p>Some airlines have priority boarding and the VIP at the same time. It depends on the airline. That all do it differert.</p>\n<h3 id=\"gate-登机口\"><a class=\"anchor\" href=\"#gate-登机口\">#</a> Gate 登机口</h3>\n<p>I'll be at gate 30 D.</p>\n<p>where is my gate? Look on the board to find your gate.</p>\n<h3 id=\"baggage不可数-luggage不可数-suitcase可数-行李\"><a class=\"anchor\" href=\"#baggage不可数-luggage不可数-suitcase可数-行李\">#</a> Baggage<sup> (不可数)</sup> / luggage<sup> (不可数)</sup> / suitcase<sup> (可数)</sup> 行李</h3>\n<p>I need to check 2 bags. I have to pay for the extra baggage (also called the baggage fee).</p>\n<p>Most airlines give you one free bag, but the 2nd bag you have to pay for.</p>\n<h3 id=\"baggage-claim-行李认领处\"><a class=\"anchor\" href=\"#baggage-claim-行李认领处\">#</a> Baggage claim 行李认领处</h3>\n<p>And then when you arrive, you must go to claim your baggage.</p>\n<h3 id=\"carry-on-bag-手提行李\"><a class=\"anchor\" href=\"#carry-on-bag-手提行李\">#</a> Carry-on bag 手提行李</h3>\n<p>I always carry my laptop in my carry-on bag.</p>\n<p>You can have a small suitcase and a personal bag, usually.</p>\n<h3 id=\"business-class-economy-class-公务舱-经济舱\"><a class=\"anchor\" href=\"#business-class-economy-class-公务舱-经济舱\">#</a> Business class /economy class 公务舱 / 经济舱</h3>\n<p>I fly economy because I like to save money, so I always fly economy class.</p>\n<p>If I had the money, I would fly business class.</p>\n<p>I have never flown business class. 我从来没有坐过商务舱┭┮﹏┭┮</p>\n<p>Business class, nice. I would if I could. but I can't, so I won't. 商务舱，好，我想坐如果我能的话，但是我不能，所以我不愿意 hh</p>\n<h3 id=\"air-sickness-barf-bag-晕机-呕吐袋\"><a class=\"anchor\" href=\"#air-sickness-barf-bag-晕机-呕吐袋\">#</a> Air sickness / Barf bag 晕机 / 呕吐袋</h3>\n<p>Don't worry, there is a barf bag in front of you.</p>\n<h2 id=\"common-phrases-常用短语\"><a class=\"anchor\" href=\"#common-phrases-常用短语\">#</a> Common phrases 常用短语</h2>\n<ul>\n<li>Excuse me, where is the Air China check-in desk? 对不起，请问中国航空公司在哪里</li>\n<li>How many bags can I check? 我可以托运几件行李</li>\n<li>Will my luggage go straight through to my final destination, or do I need to pick it up in Vancouver? 我的行李可以直接到达我的目的地吗，还是需要在温哥华取</li>\n<li>How much is the baggage fee? 行李费多少钱</li>\n<li>Please mark this bag as 'fragile' 请在这个行李上标明易碎</li>\n<li>Is the flight on time? 飞机会准时起飞吗？</li>\n</ul>\n<h2 id=\"discussion-questions-讨论问题\"><a class=\"anchor\" href=\"#discussion-questions-讨论问题\">#</a> Discussion Questions 讨论问题</h2>\n<ol>\n<li>\n<p><strong>How often do you travel by plane?</strong></p>\n<ol>\n<li>I have never been on a plane.</li>\n</ol>\n</li>\n<li>\n<p><strong>Do you like flying?</strong></p>\n<ol>\n<li>I don't like flying compared to traveling by train. I can see beautiful scenery on the train. And I can alse walk around and talk to people.</li>\n</ol>\n</li>\n<li>\n<p><strong>What was the first flight you ever took?</strong></p>\n<ol>\n<li>I remember, it was my first flight that I have. I went to ShangHai. It's a city in the south of China. And it's famous for the economy and the leisure time of the people.</li>\n</ol>\n</li>\n<li>\n<p><strong>Do you prefer the window seat or aisle seat?</strong></p>\n<ol>\n<li>I prefer the window seat, because when the plane is taking off or landing, I can look out of the window to enjoy the scenery.</li>\n<li>But for the long trip, I pray for the aisle seat, because it's convenient for you. I mean, to go to the bathroom.</li>\n<li>I enjoy the birds eye view from the window seat.</li>\n</ol>\n</li>\n<li>\n<p><strong>How early to you arrive at the airport for your flight?</strong></p>\n</li>\n<li>\n<p><strong>Do you usually fly economy class or business class?</strong></p>\n<ol>\n<li>I super wish I could fly business class on long flights, but I cannot afford business class, so I would if I could, but I can't, so I won't.</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"homework\"><a class=\"anchor\" href=\"#homework\">#</a> Homework</h2>\n<p>Write a dialog at the check-in counter at the airport. You should say:</p>\n<ul>\n<li>What kind of seat do you want?</li>\n<li>How many bags you are checking?</li>\n<li>whether or not your bag is overweight.</li>\n</ul>\n<blockquote>\n<p>Agent: Hi there, can I see your passport?</p>\n<p>Me: Yes, here you go.</p>\n<p>A: And where are you flying today?</p>\n<p>M: I'm flying to Beijing.</p>\n<p>A: Okay, you're flying economy right?</p>\n<p>M: Yes.</p>\n<p>A: Would you like an aisle seat or window seat.</p>\n<p>M: A window seat for sure!</p>\n<p>A: How many bags are you checking today?</p>\n<p>M: 2.</p>\n<p>A: Okay, please put them on the scale for measurement.</p>\n<p>So, the first bag is free, but there will be a $75 charge for the second bag. How will you be paying for that?</p>\n<p>M: I'll pay on credit card.</p>\n<p>A: Great, so here are your boarding pass. Your gate is 60D, and the boarding time is 11:15. You should have plenty of time to make it through security.</p>\n<p>Also, here are your baggage tags. Hold on to those in case your luggage gets lost.</p>\n<p>M: Wonderful, thank you.</p>\n<p>A: You're welcome. Have a great flight.</p>\n</blockquote>\n",
            "tags": [
                "英语学习之路",
                "口语",
                "英语"
            ]
        },
        {
            "id": "https://blog.aayu.today/skill/miscellaneous/20230702/",
            "url": "https://blog.aayu.today/skill/miscellaneous/20230702/",
            "title": "机械臂学习笔记",
            "date_published": "2023-07-02T13:31:45.000Z",
            "content_html": "<h2 id=\"临摹相同尺寸草图图片\"><a class=\"anchor\" href=\"#临摹相同尺寸草图图片\">#</a> 临摹相同尺寸草图图片</h2>\n<p>在草图编辑状态，点击「 工具 」-&gt;「 草图工具 」-&gt;「 草图图片 」即可导入草图，然后根据尺寸确定缩放关系，将草图移至原点即可</p>\n<h2 id=\"尺寸链\"><a class=\"anchor\" href=\"#尺寸链\">#</a> 尺寸链</h2>\n<p>水平尺寸链或竖直尺寸链，先点击构造线确定原点，再点击其他线确定尺寸。</p>\n<p>右击添加到尺寸链，可以再次打开上次的尺寸链继续添加</p>\n<h2 id=\"尺寸圆弧条件修改\"><a class=\"anchor\" href=\"#尺寸圆弧条件修改\">#</a> 尺寸圆弧条件修改</h2>\n<p>先点击圆弧尺寸，左侧属性栏选择第二栏「 引线 」，在下方修改圆弧条件即可</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/07/02/202307022133282.png\" alt=\"\" /></p>\n<h2 id=\"鼠标笔势由-4-笔势改为-8-笔势\"><a class=\"anchor\" href=\"#鼠标笔势由-4-笔势改为-8-笔势\">#</a> 鼠标笔势由 4 笔势改为 8 笔势</h2>\n<p>点击「 工具 」-&gt; 「 自定义 」-&gt;「 鼠标笔势 」即可切换 4 笔势或 8 笔势，左侧功能列表直接拖拽到右侧即可自定义笔势功能。</p>\n<h2 id=\"制作草图块\"><a class=\"anchor\" href=\"#制作草图块\">#</a> 制作草图块</h2>\n<p>点击「 工具 」-&gt;「 块 」-&gt;「 制作 」，将草图线段框选，即可做成草图块。按住 Ctrl 键拖动块，即可复制一份块</p>\n<h2 id=\"给草图块添加颜色\"><a class=\"anchor\" href=\"#给草图块添加颜色\">#</a> 给草图块添加颜色</h2>\n<p>点击「 编辑 」-&gt;「 外观 」-&gt;「 草图 / 曲线颜色 」</p>\n<h2 id=\"快速完成定义草图\"><a class=\"anchor\" href=\"#快速完成定义草图\">#</a> 快速完成定义草图</h2>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/07/02/202307022134230.png\" alt=\"\" /></p>\n<h2 id=\"分割零件并另存为\"><a class=\"anchor\" href=\"#分割零件并另存为\">#</a> 分割零件并另存为</h2>\n<p>点击「 插入 」-&gt;「 特征 」-&gt;「 分割 」，选择切割线，点击被切割的两个实体，确认即可</p>\n<p>在实体上右击，选择「 删除 / 保留实体 」，对两个零件进行另存为</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/07/02/202307022134252.png\" alt=\"\" /></p>\n<h2 id=\"装配体插入零件时的固定与浮动\"><a class=\"anchor\" href=\"#装配体插入零件时的固定与浮动\">#</a> 装配体插入零件时的固定与浮动</h2>\n<p>插入第一个零件时，直接点击确定键，这样可以使第一个零件的坐标系与装配体坐标系一致，零件会被固定且无法移动</p>\n<p>插入第二个零件直接选中零件再拖动到装配体视窗中，这样插入的零件就是浮动的，即可以被拖动</p>\n<p>持续更新中...</p>\n",
            "tags": [
                "不看会后悔的实用技巧分享",
                "杂七杂八",
                "SolidWorks"
            ]
        },
        {
            "id": "https://blog.aayu.today/skill/tools/20230523/",
            "url": "https://blog.aayu.today/skill/tools/20230523/",
            "title": "Docker部署chatgpt_academic",
            "date_published": "2023-05-23T14:26:38.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>如果你是一个搞学术的人，相信你一定会爱上这款大杀器～</p>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>一键润色</td>\n<td>支持一键润色、一键查找论文语法错误</td>\n</tr>\n<tr>\n<td>一键中英互译</td>\n<td>一键中英互译</td>\n</tr>\n<tr>\n<td>一键代码解释</td>\n<td>显示代码、解释代码、生成代码、给代码加注释</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTRzNHkxRTdqTg==\">自定义快捷键</span></td>\n<td>支持自定义快捷键</td>\n</tr>\n<tr>\n<td>模块化设计</td>\n<td>支持自定义强大的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9jaGF0Z3B0X2FjYWRlbWljL3RyZWUvbWFzdGVyL2NyYXp5X2Z1bmN0aW9ucw==\">函数插件</span>，插件支持<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9jaGF0Z3B0X2FjYWRlbWljL3dpa2kvJUU1JTg3JUJEJUU2JTk1JUIwJUU2JThGJTkyJUU0JUJCJUI2JUU2JThDJTg3JUU1JThEJTk3\">热更新</span></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWNqNDExQTdWVw==\">自我程序剖析</span></td>\n<td>[函数插件] <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9jaGF0Z3B0X2FjYWRlbWljL3dpa2kvY2hhdGdwdC1hY2FkZW1pYyVFOSVBMSVCOSVFNyU5QiVBRSVFOCU4NyVBQSVFOCVBRiU5MSVFOCVBNyVBMyVFNiU4QSVBNSVFNSU5MSU4QQ==\">一键读懂</span>本项目的源代码</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWNqNDExQTdWVw==\">程序剖析</span></td>\n<td>[函数插件] 一键可以剖析其他 Python/C/C++/Java/Lua/... 项目树</td>\n</tr>\n<tr>\n<td>读论文、<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUtUNDExeDdXbg==\">翻译</span>论文</td>\n<td>[函数插件] 一键解读 latex/pdf 论文全文并生成摘要</td>\n</tr>\n<tr>\n<td>Latex 全文<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW5rNHkxWTdKcy8=\">翻译</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUZUNDExSDdjNS8=\">润色</span></td>\n<td>[函数插件] 一键翻译或润色 latex 论文</td>\n</tr>\n<tr>\n<td>批量注释生成</td>\n<td>[函数插件] 一键批量生成函数注释</td>\n</tr>\n<tr>\n<td>Markdown<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXlvNHkxNTdqVi8=\"> 中英互译</span></td>\n<td>[函数插件] 看到上面 5 种语言的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9jaGF0Z3B0X2FjYWRlbWljL2Jsb2IvbWFzdGVyL2RvY3MvUkVBRE1FX0VOLm1k\"> README</span> 了吗？</td>\n</tr>\n<tr>\n<td>chat 分析报告生成</td>\n<td>[函数插件] 运行后自动生成总结汇报</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUtUNDExeDdXbg==\">PDF 论文全文翻译功能</span></td>\n<td>[函数插件] PDF 论文提取题目 &amp; 摘要 + 翻译全文（多线程）</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUxNNHkxMjc5WA==\">Arxiv 小助手</span></td>\n<td>[函数插件] 输入 arxiv 文章 url 即可一键翻译摘要 + 下载 PDF</td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTlMNDExVTdpYQ==\">谷歌学术统合小助手</span></td>\n<td>[函数插件] 给定任意谷歌学术搜索页面 URL，让 gpt 帮你<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUdQNDExVTdBei8=\">写 relatedworks</span></td>\n</tr>\n<tr>\n<td>互联网信息聚合 + GPT</td>\n<td>[函数插件] 一键<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW9tNHkxMjdjaw==\">让 GPT 先从互联网获取信息</span>，再回答问题，让信息永不过时</td>\n</tr>\n<tr>\n<td>公式 / 图片 / 表格显示</td>\n<td>可以同时显示公式的<span class=\"exturl\" data-url=\"aHR0cHM6Ly91c2VyLWltYWdlcy5naXRodWJ1c2VyY29udGVudC5jb20vOTYxOTIxOTkvMjMwNTk4ODQyLTFkN2ZjZGRkLTgxNWQtNDBlZS1hZjYwLWJhZjQ4OGExOTlkZi5wbmc=\"> tex 形式和渲染形式</span>，支持公式、代码高亮</td>\n</tr>\n<tr>\n<td>多线程函数插件支持</td>\n<td>支持多线调用 chatgpt，一键处理<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUZUNDExSDdjNS8=\">海量文本</span>或程序</td>\n</tr>\n<tr>\n<td>启动暗色 gradio<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9jaGF0Z3B0X2FjYWRlbWljL2lzc3Vlcy8xNzM=\"> 主题</span></td>\n<td>在浏览器 url 后面添加 <code>/?__theme=dark</code>  可以切换 dark 主题</td>\n</tr>\n</tbody>\n</table>\n<p>详细介绍参见官方仓库：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9ncHRfYWNhZGVtaWM=\">binary-husky/chatgpt_academic</span></p>\n<h2 id=\"极空间部署\"><a class=\"anchor\" href=\"#极空间部署\">#</a> 极空间部署</h2>\n<h3 id=\"下载镜像\"><a class=\"anchor\" href=\"#下载镜像\">#</a> 下载镜像</h3>\n<p>在仓库中搜索我的用户名 <code>ylsislove</code> ，选择 <code>gpt_academic</code> ，下载最新版本即可</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/05/23/202305232159957.png\" alt=\"\" /></p>\n<h3 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h3>\n<p class=\"gallery\" data-height=\"240\"><img data-src=\"https://image.aayu.today/uploads/2023/05/23/202305232200256.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/05/23/202305232201849.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/05/23/202305232202385.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/05/23/202305232203871.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/05/23/202305232205799.png\" alt=\"\" /></p>\n<ul>\n<li><code>API_EKY</code> ：你的 OpenAI API Key，可同时填写多个 API-KEY，用英文逗号分割，例如 sk-openaikey1,sk-openaikey2,fkxxxx-api2dkey1,fkxxxx-api2dkey2</li>\n<li><code>DEFAULT_WORKER_NUM</code> ：多线程函数插件中，默认允许多少路线程同时访问 OpenAI。Free trial users 的限制是每分钟 3 次，Pay-as-you-go users 的限制是每分钟 3500 次。一言以蔽之：免费用户填 3，OpenAI 绑了信用卡的用户可以填 16 或者更高。提高限制请查询：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvZ3VpZGVzL3JhdGUtbGltaXRzL292ZXJ2aWV3\">https://platform.openai.com/docs/guides/rate-limits/overview</span></li>\n<li><code>LAYOUT</code> ：LEFT-RIGHT（左右布局）TOP-DOWN（上下布局）</li>\n<li><code>WEB_PORT</code> ：网页的端口，注意要和端口配置里的容器端口相同</li>\n<li><code>AUTHENTICATION</code> ：设置用户名和密码，例如 <code>[(&quot;root&quot;, &quot;123456&quot;)]</code> ，可配置多个</li>\n<li https:api.openai.comv1chatcompletions:在这里填写重定向的api.openai.com的URL=\"\"><code>API_URL_REDIRECT</code> ：重新 URL 重新定向，实现更换 API_URL 的作用。例如：</li>\n</ul>\n<p>更多参数配置参见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9ncHRfYWNhZGVtaWMvYmxvYi9tYXN0ZXIvY29uZmlnLnB5\">gpt_academic/config.py</span></p>\n<p>例如，如果你有自己的网络代理，那么就可以不用配置 <code>API_URL_REDIRECT</code> ，直接配置 <code>USE_PROXY</code>  为 <code>True</code> ，然后配置 <code>proxies</code>  为你的代理地址即可，如 <code>&#123; &quot;http&quot;: &quot;socks5h://localhost:10880&quot;, &quot;https&quot;: &quot;socks5h://localhost:10880&quot;, &#125;</code> ，参见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9ncHRfYWNhZGVtaWMvYmxvYi9tYXN0ZXIvZG9ja2VyLWNvbXBvc2UueW1s\">gpt_academic/docker-compose.yml</span></p>\n<p>完成以上配置后，直接点击运行即可～</p>\n<h3 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h3>\n<p>在浏览器输入 <code>http://极空间IP地址:28890</code> ，出现如下界面，配置成功～</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/05/23/202305232217181.png\" alt=\"\" /></p>\n<p>输入配置的用户名和密码，即可进入主界面，试用下 <code>[插件demo] 历史上的今天</code> ，完美运行～</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/05/23/202305232220615.png\" alt=\"\" /></p>\n<p>接下来愉快的玩耍吧～</p>\n<h2 id=\"局限性\"><a class=\"anchor\" href=\"#局限性\">#</a> 局限性</h2>\n<p>Docker 部署因为没有高性能显卡的支持，所以只能使用 <code>chatgpt</code> ， <code>newbing</code>  等远程服务，不支持官方仓库里的 <code>ChatGLM</code> 、 <code>LLAMA</code> 、 <code>盘古</code> 、 <code>RWKV</code>  等本地模型。</p>\n<h2 id=\"致谢\"><a class=\"anchor\" href=\"#致谢\">#</a> 致谢</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JpbmFyeS1odXNreS9ncHRfYWNhZGVtaWM=\">gpt_academic</span></li>\n</ul>\n",
            "tags": [
                "不看会后悔的实用技巧分享",
                "工具篇",
                "ChatGPT"
            ]
        },
        {
            "id": "https://blog.aayu.today/skill/code-analysis/siyuan/20230406-7/",
            "url": "https://blog.aayu.today/skill/code-analysis/siyuan/20230406-7/",
            "title": "思源笔记源码解析之kernel篇（十）model",
            "date_published": "2023-04-06T13:28:36.000Z",
            "content_html": "<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>根据以上你自己的分析，对程序的整体功能和构架做出概括。然后用一张 markdown 表格整理每个文件的功能</p>\n<p>SiYuan 是一款知识管理笔记软件，用户可以使用它来制作 Markdown 笔记、管理知识图谱以及进行 OCR 扫描等操作。系统通过分块、分组等方式实现了一些特色功能，如闪卡复习、块级内联属性、虚拟引用等，同时支持多端同步（包括云同步和局域网同步）。</p>\n<p>以下是 model 目录下各个文件的功能列表：</p>\n<table>\n<thead>\n<tr>\n<th>文件名</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ai.go</td>\n<td>识别文字中的自然语言问题，并返回问题答案</td>\n</tr>\n<tr>\n<td>appearance.go</td>\n<td>更新程序外观</td>\n</tr>\n<tr>\n<td>assets.go</td>\n<td>删除未使用的图片资源</td>\n</tr>\n<tr>\n<td>assets_watcher.go</td>\n<td>启动监听资源文件夹的 Goroutine</td>\n</tr>\n<tr>\n<td>assets_watcher_darwin.go</td>\n<td>Darwin 平台上资源文件夹的监听器</td>\n</tr>\n<tr>\n<td>attribute_view.go</td>\n<td>处理属性视图</td>\n</tr>\n<tr>\n<td>backlink.go</td>\n<td>实现笔记本和笔记的链接、反链、提及等功能</td>\n</tr>\n<tr>\n<td>bazzar.go</td>\n<td>集成程序的更新和发布等管理功能</td>\n</tr>\n<tr>\n<td>block.go</td>\n<td>处理文本块相关逻辑</td>\n</tr>\n<tr>\n<td>blockial.go</td>\n<td>处理块级内联属性</td>\n</tr>\n<tr>\n<td>blockinfo.go</td>\n<td>处理块的信息</td>\n</tr>\n<tr>\n<td>bookmark.go</td>\n<td>处理书签相关逻辑</td>\n</tr>\n<tr>\n<td>box.go</td>\n<td>实现笔记本的相关功能</td>\n</tr>\n<tr>\n<td>conf.go</td>\n<td>程序配置相关的函数和结构体</td>\n</tr>\n<tr>\n<td>css.go</td>\n<td>用于管理 CSS 相关处理</td>\n</tr>\n<tr>\n<td>export.go</td>\n<td>处理笔记数据的导出</td>\n</tr>\n<tr>\n<td>export_katex.go</td>\n<td>处理数学公式的导出</td>\n</tr>\n<tr>\n<td>export_merge.go</td>\n<td>合并导出文档</td>\n</tr>\n<tr>\n<td>file.go</td>\n<td>对文档的计数</td>\n</tr>\n<tr>\n<td>flashcard.go</td>\n<td>处理闪卡复习相关逻辑</td>\n</tr>\n<tr>\n<td>format.go</td>\n<td>处理笔记数据的格式化</td>\n</tr>\n<tr>\n<td>graph.go</td>\n<td>绘制笔记之间的关系图</td>\n</tr>\n<tr>\n<td>heading.go</td>\n<td>标题块和文档块相互转换</td>\n</tr>\n<tr>\n<td>history.go</td>\n<td>处理笔记数据的历史记录</td>\n</tr>\n<tr>\n<td>import.go</td>\n<td>数据导入处理逻辑</td>\n</tr>\n<tr>\n<td>index.go</td>\n<td>处理笔记文档的检索</td>\n</tr>\n<tr>\n<td>index_fix.go</td>\n<td>订正索引</td>\n</tr>\n<tr>\n<td>liandi.go</td>\n<td>处理 Liandi 同步相关逻辑</td>\n</tr>\n<tr>\n<td>listitem.go</td>\n<td>将列表项转化为文档</td>\n</tr>\n<tr>\n<td>mount.go</td>\n<td>处理笔记本的一些基本操作</td>\n</tr>\n<tr>\n<td>ocr.go</td>\n<td>处理 OCR 相关功能</td>\n</tr>\n<tr>\n<td>outline.go</td>\n<td>处理文档的大纲模式</td>\n</tr>\n<tr>\n<td>path.go</td>\n<td>处理文件路径相关的操作</td>\n</tr>\n<tr>\n<td>process.go</td>\n<td>处理运行时进程的相关信息</td>\n</tr>\n<tr>\n<td>render.go</td>\n<td>将块中的块引用和嵌入 SQL 查询转换为 Markdown 字符串</td>\n</tr>\n<tr>\n<td>repository.go</td>\n<td>处理笔记相关的快照、数据同步、快照恢复</td>\n</tr>\n<tr>\n<td>search.go</td>\n<td>处理块节点树</td>\n</tr>\n<tr>\n<td>session.go</td>\n<td>处理用户登录相关逻辑</td>\n</tr>\n<tr>\n<td>snippet.go</td>\n<td>处理片段相关逻辑</td>\n</tr>\n<tr>\n<td>storage.go</td>\n<td>线程安全的本地存储逻辑</td>\n</tr>\n<tr>\n<td>sync.go</td>\n<td>处理同步相关逻辑</td>\n</tr>\n<tr>\n<td>tag.go</td>\n<td>处理标签相关逻辑</td>\n</tr>\n<tr>\n<td>template.go</td>\n<td>添加块级内联属性节点</td>\n</tr>\n<tr>\n<td>transaction.go</td>\n<td>实现事务处理</td>\n</tr>\n<tr>\n<td>tree.go</td>\n<td>处理笔记本树形结构相关逻辑</td>\n</tr>\n<tr>\n<td>updater.go</td>\n<td>处理程序更新相关逻辑</td>\n</tr>\n<tr>\n<td>upload.go</td>\n<td>用于请求中解析 multipart 表单，接收键值对或具有一个或多个文件的部分</td>\n</tr>\n<tr>\n<td>virtualref.go</td>\n<td>实现虚拟引用</td>\n</tr>\n<tr>\n<td>widget.go</td>\n<td>处理块级小部件</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"049-aigo\"><a class=\"anchor\" href=\"#049-aigo\">#</a> [0/49] ai.go</h2>\n<p>该程序文件实现了 model 包中的 ChatGPT 和 ChatGPTWithAction 函数，这两个函数用于调用 GPT 模型来进行对话。ChatGPT 函数用于一般情况的对话，ChatGPTWithAction 函数用于针对某个动作的对话。</p>\n<p>程序中还定义了一个 ChatGPTContinueWrite 函数，用于依次发送多次请求，最终得到所有生成文字的整合结果。在具体实现上，程序通过判断是否开启了 GPT 的 API，来决定是否进行对话。</p>\n<p>如果开启了 GPT 的 API，程序接着根据消息和前几次对话内容，调用 GPT 模型得到生成文字。另外还包括了一些辅助函数，用于从给定的区块 ID 中获取对应区块的内容，并将其转换为标准化的 Markdown 文本。</p>\n<h2 id=\"149-appearancego\"><a class=\"anchor\" href=\"#149-appearancego\">#</a> [1/49] appearance.go</h2>\n<p>该文件是 SiYuan 笔记的一个模块，用于程序外观的管理和初始化。程序在初始化时，会创建必要的外观相关文件夹，并将资源文件等拷贝到这些文件夹下。</p>\n<p>程序还会加载已经存在的主题（包括 UI 和图标），并启动文件监测。如果检测到主题或 UI 有变动，程序会重新加载相应的主题或 UI 文件，并刷新程序外观。</p>\n<h2 id=\"249-assetsgo\"><a class=\"anchor\" href=\"#249-assetsgo\">#</a> [2/49] assets.go</h2>\n<p>该文件定义了一系列与 SiYuan 笔记的图片资源处理相关的函数，主要包括将网络图片转换为本地图片、搜索图片资源、获取图片的绝对路径等等。其中</p>\n<ul>\n<li><code>NetImg2LocalAssets</code>  函数用于将指定笔记的网络图片转换为本地图片，并将转换后的图片的链接在笔记中进行替换。</li>\n<li><code>DocImageAssets</code>  函数用于从指定笔记中获取所有的图片资源的链接。</li>\n<li><code>GetAssetAbsPath</code>  函数用于获取指定图片资源的绝对路径。</li>\n<li><code>UploadAssets2Cloud</code>  函数用于将指定笔记中的所有图片资源上传至云端图床。</li>\n<li><code>RemoveUnusedAssets</code>  函数用于删除未使用的图片资源。</li>\n</ul>\n<h2 id=\"349-assets_watchergo\"><a class=\"anchor\" href=\"#349-assets_watchergo\">#</a> [3/49] assets_watcher.go</h2>\n<p>该程序文件是一个 Go 语言的代码文件，文件名为  <code>assets_watcher.go</code> ，位于  <code>model.zip.extract\\model</code>  目录下。</p>\n<p>该文件实现了  <code>model</code>  包中的  <code>WatchAssets()</code>  函数和  <code>CloseWatchAssets()</code>  函数，用于监控系统中的资源文件夹的变化并进行处理。具体包括以下内容：</p>\n<ol>\n<li>\n<p>该文件使用了  <code>fsnotify</code>  包，创建了一个  <code>fsnotify.Watcher</code>  实例，用于监听系统中资源文件夹的变化。如果监听出错，会打印日志。</p>\n</li>\n<li>\n<p>通过  <code>watchAssets()</code>  函数开启一个 goroutine 来监听资源文件夹的变化。具体包括以下内容：</p>\n<ol>\n<li>创建  <code>timer</code>  实例和  <code>lastEvent</code>  变量。</li>\n<li>通过  <code>select</code>  语句监听事件和错误的 channel，实现事件和错误的处理。</li>\n<li>当接收到事件时，通过  <code>timer</code>  延迟 100ms 再处理事件。如果在延迟期间又接收到新事件，会重新计时。</li>\n<li>如果事件的操作类型为  <code>fsnotify.Write</code> ，说明有文件被修改了，则调用  <code>IncSync()</code>  函数将修改添加到云端同步。</li>\n<li>重新缓存资源文件，以便使用  <code>/资源</code>  搜索。</li>\n</ol>\n</li>\n<li>\n<p><code>WatchAssets()</code>  函数用于启动监听资源文件夹的 goroutine。</p>\n</li>\n<li>\n<p><code>CloseWatchAssets()</code>  函数用于关闭资源文件夹的监听器。</p>\n</li>\n</ol>\n<h2 id=\"449-assets_watcher_darwingo\"><a class=\"anchor\" href=\"#449-assets_watcher_darwingo\">#</a> [4/49] assets_watcher_darwin.go</h2>\n<p>该程序文件名为 assets_watcher_darwin.go，属于 Go 语言编写的 SiYuan 笔记的资产监视器模块。</p>\n<p>它通过使用观察器实现对 SiYuan 笔记资产目录（assets）的监视，当文件发生更改时自动进行同步，同时重新缓存资源文件，以便使用 / 资源 搜索。</p>\n<p>该模块通过使用 watcher 包和 filepath 包实现对资产目录的监视，启动和关闭资产监视器等相关操作。 该模块只对 Darwin 系统版本（如 macOS）有效，因此包含了  <code>//go:build darwin</code>  编译指令。</p>\n<h2 id=\"549-attribute_viewgo\"><a class=\"anchor\" href=\"#549-attribute_viewgo\">#</a> [5/49] attribute_view.go</h2>\n<p>该程序文件主要实现了一个笔记应用中的属性视图相关功能。其中涉及到的函数包括：</p>\n<ol>\n<li>RenderAttributeView：渲染属性视图，返回对应的 DOM 结构。</li>\n<li>doInsertAttrViewBlock：向属性视图中添加块。</li>\n<li>doRemoveAttrViewBlock：从属性视图中删除块。</li>\n<li>doAddAttrViewColumn：向属性视图中添加属性列。</li>\n<li>doRemoveAttrViewColumn：从属性视图中删除属性列。</li>\n<li>addAttributeViewColumn：向属性视图中添加指定类型的属性列。</li>\n<li>removeAttributeViewColumn：从属性视图中删除指定属性列。</li>\n<li>removeAttributeViewBlock：从属性视图中删除指定块。</li>\n<li>addAttributeViewBlock：向属性视图中添加指定块，并为块添加属性。</li>\n</ol>\n<p>其中的 av 包提供了属性视图的解析、序列化和持久化等功能。文件中还引用了其他的包和库，如 lute、parse、treenode、sql 等。</p>\n<p>总的来说，该程序文件实现了属性视图相关的操作，为笔记应用提供了可供使用的功能。</p>\n<h2 id=\"649-backlinkgo\"><a class=\"anchor\" href=\"#649-backlinkgo\">#</a> [6/49] backlink.go</h2>\n<p>该程序文件为 siyuan-note 中的一个后端代码文件，主要包含 RefreshBacklink、GetBackmentionDoc、GetBacklinkDoc、GetBacklink2 和 GetBacklink 等函数。</p>\n<p>其中，RefreshBacklink 主要用于更新引用关系，GetBackmentionDoc 和 GetBacklinkDoc 函数用于获取提及关系和引用关系，GetBacklink2 和 GetBacklink 函数用于获取链接和反链关系。这些函数都涉及到 sql 操作和解析树操作，主要是用于在 siyuan-note 中实现笔记本和笔记的链接、反链、提及等功能。</p>\n<h2 id=\"749-bazzargo\"><a class=\"anchor\" href=\"#749-bazzargo\">#</a> [7/49] bazzar.go</h2>\n<p>该程序文件是一个实现了一系列从社区中心获取插件的功能函数集合，函数包括获取插件 README、获取插件组件、安装插件组件、卸载插件组件等。</p>\n<p>其中调用了一些已有的函数库以实现具体功能。同时，该程序文件基于开源协议发布。</p>\n<h2 id=\"849-blockgo\"><a class=\"anchor\" href=\"#849-blockgo\">#</a> [8/49] block.go</h2>\n<p>该文件实现了一个名为  <code>Block</code>  的结构体和这个结构体的一些操作函数。这个结构体描述了一个特定  <code>content block</code> （即 siyuan 笔记中的一个块）。它有许多字段，包括路径、id、名字、别名、内容和子结构等。</p>\n<p>同时，这个文件还实现了一些函数，如  <code>RecentUpdatedBlocks()</code> ，它可以返回最近更新的 30 个块的信息，可以用来供笔记首页的构建； <code>GetBlock(id string, tree *parse.Tree)</code> ，它可以根据一个块的 id 来导出这个块的具体内容和信息。</p>\n<h2 id=\"949-blockialgo\"><a class=\"anchor\" href=\"#949-blockialgo\">#</a> [9/49] blockial.go</h2>\n<p>该程序文件是在 model 目录下，文件名为 blockial.go。它实现了处理 SiYuan 笔记块属性的相关函数，包括设置和获取笔记块的属性、清除笔记块的属性等，其中还包括处理笔记块提醒事件的函数等。具体实现过程中，该文件引入了多个第三方库和其他模块中的函数。</p>\n<h2 id=\"1049-blockinfogo\"><a class=\"anchor\" href=\"#1049-blockinfogo\">#</a> [10/49] blockinfo.go</h2>\n<p>该程序文件是一个 Go 语言编写的模块，它定义了 BlockInfo 结构体，用于存储块的元信息。它还定义了若干个函数用于获取块信息、块路径信息等。</p>\n<p>其中获取块信息的函数是 GetDocInfo，它调用 loadTreeByBlockID 方法获取给定 ID 的块的 Tree，然后从 Tree 中取得块的相应属性（如 Name、RefCount、SubFileCount、RefIDs 等）并构造 BlockInfo 结构体。</p>\n<p>其他函数则都是从给定的块或节点信息中提取块的相关信息，例如 GetBlockRefText 用于获取块的引用文本，GetBlockIndex 用于获取块在文档中的索引位置，BuildBlockBreadcrumb 用于构造块的面包屑路径。</p>\n<h2 id=\"1149-bookmarkgo\"><a class=\"anchor\" href=\"#1149-bookmarkgo\">#</a> [11/49] bookmark.go</h2>\n<p>该文件是一个 Go 语言编写的模型文件，主要包含了关于标签的数据操作，如删除标签、修改标签、获取标签等。</p>\n<p>其中包含了多个函数，如  <code>RemoveBookmark</code>  用于删除标签，  <code>RenameBookmark</code>  用于修改标签， <code>BookmarkLabels</code>  用于获取现有的标签， <code>BuildBookmark</code>  用于构建标签。该文件还引用了其他 Go 语言库，如  <code>github.com/88250/lute/parse</code>  和  <code>github.com/siyuan-note/siyuan/kernel/cache</code>  等。</p>\n<h2 id=\"1249-boxgo\"><a class=\"anchor\" href=\"#1249-boxgo\">#</a> [12/49] box.go</h2>\n<p>这是一个 Go 语言程序文件，名为 box.go，位于 model 文件夹下。该文件实现了笔记本 Box 的各种操作，如获取笔记本列表、获取或保存笔记本配置、列出或操作笔记本中的文件等。实现了 StatJob 函数用于自动记录笔记本的统计信息，如笔记数、块数、数据大小和资产大小，并推送桌面端可用磁盘空间不足的警告消息。</p>\n<p>同时，程序中也实现了一些工具函数用于处理树形结构。</p>\n<h2 id=\"1349-confgo\"><a class=\"anchor\" href=\"#1349-confgo\">#</a> [13/49] conf.go</h2>\n<p>该程序文件是一个 Go 语言源文件，文件名为 conf.go，位于 model 目录下。程序定义了一个名为 AppConf 的结构体类型，用于存储应用程序的各种配置选项。其中包括日志级别、界面语言列表、文件树、标签、编辑器、导出、关系图、界面布局等。</p>\n<p>程序在初始化时从配置文件中读取这些选项的值，并进行一些修正和初始化工作，最终将 AppConf 对象输出。程序的初始化过程中还进行了语言初始化、本地 IP 获取、网络代理设置等操作。程序依赖于一些第三方库，包括 gulu、lute、locale 等。</p>\n<h2 id=\"1449-cssgo\"><a class=\"anchor\" href=\"#1449-cssgo\">#</a> [14/49] css.go</h2>\n<p>该程序文件是一个模型文件，可以在处理和获取自定义 CSS 颜色方案时使用。代码将自定义颜色方案值写入到全局变量中，以便在其他地方使用。</p>\n<p>主要包含一些读取和写入 CSS 的功能，以及一些与颜色有关的函数等。文件中定义了许多常量和变量，包括颜色的数组以及一个颜色映射。</p>\n<p>该文件主要用于处理主题中的颜色设置，以及在输出 HTML 页面等情况下使用 CSS 策略的基础代码。</p>\n<h2 id=\"1549-exportgo\"><a class=\"anchor\" href=\"#1549-exportgo\">#</a> [15/49] export.go</h2>\n<p>该程序文件是 Go 语言编写的代码，名称为 export.go。包含了 Siyuan 的导出相关功能。</p>\n<p>其中 ExportData () 函数用于将数据导出并压缩成.zip 文件，Export2Liandi () 函数用于将当前文档导出到 Liandi 笔记中，ExportSY (id string)<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1zaXF1aGoxaGthNTFiejM5YjdiMjg4YW1tcHlnYTcxMWF3bjViLlNZ\"> 函数用于将当前文档导出为.SY</span> 文件并压缩成.zip 文件，ExportDocx (id, savePath string, removeAssets, merge bool) 函数用于将当前文档导出为 Word 文档，Preview (id string) 函数用于预览当前文档的 HTML 输出。</p>\n<p>此外，文件还包含了其他导出相关的函数。</p>\n<h2 id=\"1649-export_katexgo\"><a class=\"anchor\" href=\"#1649-export_katexgo\">#</a> [16/49] export_katex.go</h2>\n<p>该程序文件是一个 Go 语言编写的 Katex 导出函数。函数主要做的是提取数学表达式中使用的宏，并将其替换为一些占位符。</p>\n<p>此外，该程序还定义了一个字符串切片数组，该数组包含 Katex 支持的函数和操作符列表。函数和操作符列表主要用于判断和处理数学表达式中的函数和操作符。</p>\n<h2 id=\"1749-export_mergego\"><a class=\"anchor\" href=\"#1749-export_mergego\">#</a> [17/49] export_merge.go</h2>\n<p>该程序文件是 Siyuan 笔记应用的一个模块，主要实现了将多个子文档合并成一个文档的功能。</p>\n<p>首先根据根结点生成一个 Block（即文档），然后遍历 Block 的所有子节点，将每个子节点代表的子文档加载成一棵 parse.Tree，然后将子文档中的所有节点插入到根结点指定的插入点之后。</p>\n<p>其中涉及到了 Lute 引擎的使用，以及对文件系统中文档的读取，文档节点的创建和插入等操作。</p>\n<h2 id=\"1849-filego\"><a class=\"anchor\" href=\"#1849-filego\">#</a> [18/49] file.go</h2>\n<p>该程序文件是 siyuan-note 应用的 model 包下的 file.go 文件。该文件实现了一些与文件相关操作的函数，包括获取文件列表、获取文件详情信息、统计文件内容等。</p>\n<p>其中，ListDocTree 函数可以列出指定目录下的所有文档，ContentStat 函数可以统计指定文档的字符数、单词数、图片数、链接数和引用数，BlocksWordCount 函数可以统计指定文档块的字符数、单词数、图片数、链接数和引用数，StatTree 函数可以统计指定文档树的字符数、单词数、图片数、链接数和引用数。</p>\n<h2 id=\"1949-flashcardgo\"><a class=\"anchor\" href=\"#1949-flashcardgo\">#</a> [19/49] flashcard.go</h2>\n<p>该程序文件是 Siyuan 的卡片记忆功能相关代码，主要功能包括卡包的增删改查、卡片的复习、跳过和显示等。</p>\n<p>其中，程序中维护了一个 Decks 变量，它包含了所有卡包，每个卡包有自己的 ID，包含了它所管理的卡片的信息。</p>\n<p>GetNotebookFlashcards 获取某个笔记本中的所有笔记的闪卡记录，GetTreeFlashcards 获取一棵子树中的所有闪卡，GetFlashcards 获取全部卡包中的所有闪卡信息。</p>\n<p>ReviewFlashcard 对应闪卡复习功能，SkipReviewFlashcard 则是记录卡片跳过操作的函数。GetDueFlashcards 函数用于获取所有未复习的卡片，RemoveFlashcardsByCardIDs 用于移除指定卡包中的指定卡片的闪卡历史记录。</p>\n<h2 id=\"2049-formatgo\"><a class=\"anchor\" href=\"#2049-formatgo\">#</a> [20/49] format.go</h2>\n<p>该文件是 SiYuan 笔记应用程序的一部分，文件名为 format.go。</p>\n<p>该文件提供了一个函数用于自动添加空格。它引用了一些来自其他库的函数、变量和结构体，如 Github 上的 gulu、lute 和 render 等。</p>\n<p>具体来说，该文件可以读取一棵树的 JSON 表示，然后合并相邻的同类行级节点，并使用 Lute 引擎将树渲染成 Markdown 格式。然后它启用自动空格，然后使用 Lute 引擎重新格式化树，并将结果保存在一个 JSON 文件中。该代码还实现了一个函数，用于生成历史记录。</p>\n<h2 id=\"2149-graphgo\"><a class=\"anchor\" href=\"#2149-graphgo\">#</a> [21/49] graph.go</h2>\n<p>该文件是 SiYuan 笔记应用程序的一部分。该程序使用 golang 语言编写，主要负责建立笔记关系图。笔记是通过树形结构来管理的，每个节点都表示一个笔记块。</p>\n<p>该程序使用从 SQL 中检索的块数据构建笔记关系图，并链接相关笔记。在此过程中使用了多个结构体，如 “GraphNode”，“GraphLink” 等，它们表示了笔记关系图中的节点和连接线。</p>\n<p>此文件中的函数将 SQL 块数据转换为相应的结构体，并在处理过程中调用其他函数来构建笔记关系图。</p>\n<h2 id=\"2249-headinggo\"><a class=\"anchor\" href=\"#2249-headinggo\">#</a> [22/49] heading.go</h2>\n<p>该程序文件是一个 Go 语言编写的模块，文件名为 heading.go，包含了从标题折叠到文档块之间的转换函数，以及一些与标题、文档块相关的函数。</p>\n<p>文件中包含函数  <code>doFoldHeading</code>  和  <code>doUnfoldHeading</code>  分别用于折叠和展开标题。还包含了函数  <code>Doc2Heading</code>  用于将文档块转换为标题块，函数  <code>Heading2Doc</code>  用于将标题块转换为文档块，以及一些辅助函数。</p>\n<p>这个程序文件实现了标题块与文档块的相互转换。</p>\n<h2 id=\"2349-historygo\"><a class=\"anchor\" href=\"#2349-historygo\">#</a> [23/49] history.go</h2>\n<p>本程序文件主要实现了 siyuan 中文笔记软件中文档历史记录相关的功能，包括自动生成文档历史记录、获取文档历史记录内容、文档历史记录回滚等功能。</p>\n<p>其中，AutoGenerateDocHistory 函数实现了自动生成文档历史记录的功能，该函数会在一定的时间间隔内自动调用 generateDocHistory 函数，对打开的文档生成历史记录。</p>\n<p>generateDocHistory 函数则实现了生成文档历史记录的具体逻辑，包括清除过期的历史记录、对文档生成历史记录并保存到本地等。其他函数则实现了获取与回滚文档历史记录的相关功能。</p>\n<h2 id=\"2449-importgo\"><a class=\"anchor\" href=\"#2449-importgo\">#</a> [24/49] import.go</h2>\n<p>该程序文件主要实现了一些 SiYuan 笔记系统中的数据导入处理逻辑，包含了以下函数：</p>\n<ul>\n<li>HTML2Markdown：将 HTML 字符串转换为 Markdown 字符串。</li>\n<li>ImportSY：将 SiYuan 笔记系统.SY.zip 文件导入到指定位置。</li>\n<li>ImportData：将 SiYuan 笔记系统.Data.zip 文件导入到默认位置。</li>\n</ul>\n<p>其中，ImportSY 函数主要实现处理 .sy.zip 文件导入的逻辑，具体如下：</p>\n<ul>\n<li>解压 zip 文件到一个临时目录；</li>\n<li>读取临时目录下的所有 .sy 文件，解析出它们所对应的树结构，并重新生成每个节点的 ID；</li>\n<li>修改导入后各个 .sy 文件中引用和嵌入的节点 ID；</li>\n<li>重命名临时目录下的 .sy 文件到指定的目标路径，并拷贝其中所包含的资源文件到 data/assets/ 目录下；</li>\n<li>读取 sort.json 文件，合并其中的排序规则，并将其写回到 .siyuan/sort.json 中；</li>\n<li>拷贝所有解析出的 .sy 文件到指定位置，并上传到 SQL 中。</li>\n</ul>\n<p>总的来说，该文件实现了 SiYuan 笔记系统的数据导入处理逻辑。</p>\n<h2 id=\"2549-indexgo\"><a class=\"anchor\" href=\"#2549-indexgo\">#</a> [25/49] index.go</h2>\n<p>该程序文件是 SiYuan 笔记软件的一部分，其中包含了若干函数用于处理笔记的索引和查询。文件中的函数包括：</p>\n<ol>\n<li>Unindex ()：从数据库中删除当前笔记盒的相关索引。</li>\n<li>Index ()：为当前笔记盒创建索引。</li>\n<li>index (boxID string)：实现 Index () 函数的具体过程，从笔记盒中读取所有的 .sy 文件，对每一个文件进行解析，得到笔记树，并对笔记树建立相关索引。</li>\n<li>IndexRefs ()：对笔记牌中所有的引用节点进行处理，创建相应的引用索引。</li>\n<li>IndexEmbedBlockJob ()：对所有的嵌入块进行处理，为嵌入块的查询结果建立相应的索引。</li>\n<li>autoIndexEmbedBlock (embedBlocks []*sql.Block)：实现 IndexEmbedBlockJob () 的具体过程，遍历所有的嵌入块，执行嵌入块的查询操作，并将查询结果建立索引。</li>\n<li>updateEmbedBlockContent (embedBlockID string, queryResultBlocks []*EmbedBlock)：更新嵌入块的内容。</li>\n<li>init ()：订阅一些事件，用于显示程序运行状态。</li>\n</ol>\n<h2 id=\"2649-index_fixgo\"><a class=\"anchor\" href=\"#2649-index_fixgo\">#</a> [26/49] index_fix.go</h2>\n<p>该程序文件主要实现了自动校验数据库索引的功能。包含以下函数：</p>\n<ul>\n<li>FixIndexJob：自动校验与订正数据库索引的入口函数。</li>\n<li>removeDuplicateDatabaseIndex：删除重复的数据库索引。</li>\n<li>resetDuplicateBlocksOnFileSys：重置重复 ID 的块。</li>\n<li>fixBlockTreeByFileSys：通过文件系统订正块树。</li>\n<li>fixDatabaseIndexByBlockTree：通过块树订正数据库索引。</li>\n<li>reindexTreeByUpdated：根据更新时间，重新索引笔记本块树。</li>\n<li>reindexTreeByPath：根据文件 .sy 文件路径，重新索引笔记本块树。</li>\n<li>reindexTree：根据块树 ID，重新索引笔记本块树。</li>\n</ul>\n<p>主要流程是先删除重复的数据库索引，然后通过文件系统订正块树，再通过块树订正数据库索引。通过  <code>reindexTreeByUpdated</code> 、 <code>reindexTreeByPath</code> 、 <code>reindexTree</code>  函数，实现读取块树文件并订正索引的功能。</p>\n<h2 id=\"2749-liandigo\"><a class=\"anchor\" href=\"#2749-liandigo\">#</a> [27/49] liandi.go</h2>\n<p>该程序文件名为 liandi.go，位于 model 文件夹下。该程序提供了与云端相关的一些操作，包括调用机器人进行对话、开始试用、设置云端提醒等等，其中部分涉及到网络请求。</p>\n<p>同时，该程序文件中还包含一些变量的定义、判断是否是订阅用户、获取基础用户信息等功能。</p>\n<h2 id=\"2849-listitemgo\"><a class=\"anchor\" href=\"#2849-listitemgo\">#</a> [28/49] listitem.go</h2>\n<p>该程序文件是一个 Go 语言程序文件，文件名为 listitem.go，位于 model 包下。</p>\n<p>程序导入了一些库文件，例如  <code>path</code> 、 <code>github.com</code>  等。程序定义了一个函数  <code>ListItem2Doc</code> ，该函数会将一个列表项转化为文档，具体实现过程如下：</p>\n<ul>\n<li><code>loadTreeByBlockID</code>  函数用于加载指定的  <code>srcListItemID</code>  所在的文档树。</li>\n<li><code>treenode.GetNodeInTree</code>  函数用于获取指定节点 ID（在此为 srcListItemID）在文档树中的节点对象。</li>\n<li>根据传递进来的  <code>targetBoxID</code>  和  <code>targetPath</code> ，确定目标位置。如果  <code>targetPath</code>  等于  <code>/</code> ，则将列表项移动到目标文件夹的根目录下，否则将列表项移动到所在目标文件夹的指定目录下。</li>\n<li>将列表项中的子节点全部分离出来，并按顺序添加到新文档树上。如果列表项中没有子节点，则添加一个新段落节点。</li>\n<li>设置新文档树的一些属性，例如根节点的 IAL 属性，路径等。</li>\n<li>设置源列表项节点的一些 IAL 属性，例如节点类型为文档、ID、标题等，移除  <code>fold</code>  属性，并且设置 Kramdown IAL（Informal Attributes Language）。</li>\n<li>将源列表项节点从原文档树中删除，并删除其父节点，如果其父节点已没有子节点。</li>\n<li>根据源文档树和新文档树的各自 ID、路径等属性设置其它相关属性，然后写入更新队列。</li>\n<li>对文档树进行索引，并存放到数据库中。</li>\n<li>调用  <code>RefreshBacklink</code>  函数刷新其它相关的链接关系。</li>\n</ul>\n<p>总之，该程序实现了将一个列表项转化为文档的功能，通过分离子节点、设置节点的 IAL 属性等步骤，将列表项转化为具备文档特性的节点，并最终存储于数据库中。</p>\n<h2 id=\"2949-mountgo\"><a class=\"anchor\" href=\"#2949-mountgo\">#</a> [29/49] mount.go</h2>\n<p>该文件是 Siyuan 笔记的一个 Go 程序，主要包含了许多操作笔记本的函数，例如创建笔记本、重命名笔记本、删除笔记本、挂载和卸载笔记本等。</p>\n<p>其中的函数实现了对笔记本的各种操作，具体包括所涉及到的函数有：CreateBox、RenameBox、RemoveBox、Unmount、unmount0、Mount、IsUserGuide 等。它们的作用分别是：创建一个新的笔记本，重命名一个笔记本，删除一个笔记本，卸载某个笔记本以及挂载某个笔记本，判断是否为用户指南。</p>\n<p>文件中的函数还涉及到一些 Go 开发的基础知识，比如字符串处理、目录管理、文件的读写和操作等。</p>\n<p>例如，函数中用到了操作系统的 path/filepath 包，处理文件路径；使用了 Go 自带的 errors 包，生成了错误信息；使用了 gulu 库处理字符串，以及监听器监听某些事件等。</p>\n<p>该文件是 Siyuan 笔记的一个重要组成部分，负责笔记本本身的相关功能。它所提供的各个函数能够帮助用户更加方便、精准地管理和处理笔记本。</p>\n<h2 id=\"3049-ocrgo\"><a class=\"anchor\" href=\"#3049-ocrgo\">#</a> [30/49] ocr.go</h2>\n<p>该文件是一个 Go 语言的程序文件，文件名为 ocr.go。</p>\n<p>该文件声明了一些函数用于 OCR（Optical Character Recognition，光学字符识别）相关的操作，包括对图像进行 OCR 处理、将 OCR 处理结果存储到缓存中，以及从缓存中读取 OCR 处理结果等。其中，autoOCRAssets () 函数是一个主要的函数，用于自动对未处理的图像进行 OCR 处理并将结果存储到缓存中。</p>\n<p>此外，还包括其它一些函数，如 cleanNotExistAssetsTexts ()、FlushAssetsTextsJob ()、LoadAssetsTexts ()、SaveAssetsTexts () 等，用于一些 OCR 处理相关的后续工作。</p>\n<h2 id=\"3149-outlinego\"><a class=\"anchor\" href=\"#3149-outlinego\">#</a> [31/49] outline.go</h2>\n<p>该程序文件是一个 Go 语言编写的模块，文件名是 outline.go。其主要实现了一个名为 Outline 的函数，该函数被调用时，会传入一个 rootID 作为参数。</p>\n<p>函数主要作用是在树形结构中提取出标题节点，然后将这些标题节点拼接成为一个平铺的树形结构。</p>\n<p>在该函数中，会首先调用 loadTreeByBlockID 函数加载树形结构。然后使用 ast.Walk 遍历该树节点，提取出标题节点，并将这些节点组成一个块，每个块包含了标题节点的详细信息。然后使用 linkedliststack.New 实现堆栈的操作，将相同深度的标题块放入到子块的列表中。最终，使用 toFlatTree 将其组装为一个平铺的树形结构后返回。</p>\n<h2 id=\"3249-pathgo\"><a class=\"anchor\" href=\"#3249-pathgo\">#</a> [32/49] path.go</h2>\n<p>该文件是 SiYuan 笔记应用的模型包，实现了笔记的增删改查等功能。主要包含以下函数：</p>\n<ul>\n<li>createDocsByHPath：根据传入的 boxID、hPath 和 content 创建一个文档。</li>\n<li>toFlatTree：构造传入的列表中子块的树结构，并返回生成的树形结构。</li>\n<li>toSubTree：根据关键字构造子树。</li>\n<li>getBlockIn：在传入的 blocks 列表中根据 id 查找是否存在一个 Block 对象。</li>\n</ul>\n<p>其中，每个函数的内部实现复杂度各自不同。</p>\n<h2 id=\"3349-processgo\"><a class=\"anchor\" href=\"#3349-processgo\">#</a> [33/49] process.go</h2>\n<p>该文件为 process.go，主要实现了处理信号和钩子桌面 UI 进程的功能。</p>\n<p>函数 HandleSignal 用于接收系统相关的信号（如中断、退出等），并在接收到信号时关闭相关的进程。</p>\n<p>函数 HookDesktopUIProcJob 用于挂钩桌面 UI 进程的作业，并在发现 UI 进程没有活动时退出。该函数首先检查是否存在活动的会话，如果存在则说明 UI 进程仍在运行，如果不存在则检测已经附加的 UI 进程数，如果大于 0，则说明 UI 进程仍在运行，如果等于 0，则检测所有进程中的 UI 进程数，如果大于 0，则说明 UI 进程仍在运行，否则退出。</p>\n<p>变量 uiProcNames 定义了 UI 进程的名称列表。函数 getAttachedUIProcCount 用于获取已经附加的 UI 进程数，函数 getUIProcCount 用于获取 UI 进程数。</p>\n<h2 id=\"3449-rendergo\"><a class=\"anchor\" href=\"#3449-rendergo\">#</a> [34/49] render.go</h2>\n<p>该文件为 SiYuan（思源笔记）中的一个 Go 语言源代码文件，包含多个函数用于渲染编辑器中的笔记内容。其中涉及到 Lute、ast、parse、html、render 等 Go 语言包，以及 SiYuan 自身定义的一些包和类型。具体函数如下：</p>\n<ol>\n<li>renderOutline 函数：渲染大纲面板，将指定的 ast.Node 转换成大纲字符串。</li>\n<li>renderBlockText 函数：将指定的 ast.Node 转换为一个字符串，该字符串包含了块中所有文本内容。</li>\n<li>renderBlockDOMByNodes 函数：将指定的多个 ast.Node 转换为 HTML 字符创，这些 ast.Node 可以是同一个文档中的不同块。</li>\n<li>renderBlockContentByNodes 函数：将指定的多个 ast.Node 转换为一个字符串，该字符串包含了这些 ast.Node 中所有文本内容。</li>\n<li>renderBlockMarkdownR 函数：在渲染指定 ID 对应的块时，将该块中的块引用和嵌入 SQL 查询转换为对应的 Markdown 字符串，以便明文存储和分享。</li>\n</ol>\n<h2 id=\"3549-repositorygo\"><a class=\"anchor\" href=\"#3549-repositorygo\">#</a> [35/49] repository.go</h2>\n<p>该程序文件是 model 的子模块文件夹 model 中的 repository.go 文件，代码如下：</p>\n<p>函数代码包括：</p>\n<ol>\n<li>OpenRepoSnapshotDoc；</li>\n<li>LeftRightDiff 和 DiffFile；</li>\n<li>parseTitleInSnapshot、parseTreeInSnapshot 和 buildSnapshots；</li>\n<li>ImportRepoKey 和 ResetRepo；</li>\n<li>InitRepoKeyFromPassphrase 和 InitRepoKey；</li>\n<li>CheckoutRepo。</li>\n</ol>\n<p>该文件中定义了许多的子函数，包括存储快照、数据同步、快照恢复，同时还有其他一些与快照或数据同步相关的函数。</p>\n<h2 id=\"3649-searchgo\"><a class=\"anchor\" href=\"#3649-searchgo\">#</a> [36/49] search.go</h2>\n<p>本文介绍了程序文件  <code>search.go</code>  的作用。该文件定义了搜索相关的功能函数，包括全文搜索、查询语法、SQL 以及正则表达式等方法。</p>\n<p>同时，还实现了嵌入块的搜索和替换功能，以及查找与引用块相关的块。本文件还包含处理块节点树的一些函数。</p>\n<h2 id=\"3749-sessiongo\"><a class=\"anchor\" href=\"#3749-sessiongo\">#</a> [37/49] session.go</h2>\n<p>该文件为 SiYuan（私远笔记）的认证授权模块，定义了包括登出、登录、验证码、接口访问授权等功能函数。其中</p>\n<ul>\n<li>LoginAuth 函数为登录认证核心函数，对输入的验证码、认证码进行验证，若通过则将认证码写入 Session 并返回成功信息；</li>\n<li>LogoutAuth 函数为登出函数，从 Session 中移除 WorkspaceSession 信息；</li>\n<li>GetCaptcha 函数为生成验证码函数，生成验证码并将其存入 WorkspaceSession；</li>\n<li>CheckAuth 和 CheckReadonly 为接口访问授权和只读状态检查，分别需要登录认证和只读状态为 false 才可访问 API。</li>\n</ul>\n<p>函数中还用到了第三方库 gin 和 steambap/captcha 等。</p>\n<h2 id=\"3849-snippetgo\"><a class=\"anchor\" href=\"#3849-snippetgo\">#</a> [38/49] snippet.go</h2>\n<p>该程序文件实现了在思源笔记中加载、保存、删除代码片段的功能。其中，代码片段保存在 conf.json 文件中，并且实现了线程锁保证多个线程同时访问时的线程安全。</p>\n<p>程序使用了 gulu、Lute、filelock、logging 等库来实现文件读写、日志输出、锁机制等操作。本文件遵循 GNU Affero General Public License 许可证。</p>\n<h2 id=\"3949-storagego\"><a class=\"anchor\" href=\"#3949-storagego\">#</a> [39/49] storage.go</h2>\n<p>该程序文件是 SiYuan 笔记的模型模块的源代码。程序的主要作用是提供 SiYuan 笔记程序的模型方法，完成 SiYuan 笔记程序的搜索、文档编辑等功能。</p>\n<p>具体方法包括：管理最近文档、文档搜索条件筛选、本地存储、读取。方法实现中使用了 sync 包实现了对最近文档、搜索条件、本地存储的互斥锁，保证数据的线程安全。</p>\n<h2 id=\"4049-syncgo\"><a class=\"anchor\" href=\"#4049-syncgo\">#</a> [40/49] sync.go</h2>\n<p>该程序文件名为 sync.go，用于实现 SiYuan 的同步功能。程序实现了同步 SiYuan 笔记数据到云端和从云端同步数据到本地的功能，并提供了手动同步功能和自动同步功能。</p>\n<p>实现手动同步需要在 UI 上进行操作，而自动同步功能可定时同步或在打开软件时进行同步操作。同时该程序还实现了删除云同步目录、创建云同步目录、列表云同步目录等一些对同步功能的基本操作。</p>\n<h2 id=\"4149-taggo\"><a class=\"anchor\" href=\"#4149-taggo\">#</a> [41/49] tag.go</h2>\n<p>该程序文件名为 tag.go，主要包含了标签相关的功能函数。其中：</p>\n<ul>\n<li>RemoveTag (): 删除标签功能函数，会将所有该标签相关的文档和块中的标签删除。</li>\n<li>RenameTag (): 重命名标签功能函数，会将所有该标签相关的文档和块中的标签修改为新标签名称。</li>\n<li>BuildTags (): 构建所有标签树，返回一个 *Tags 类型的指针，用来表示最外层的所有标签。</li>\n<li>SearchTags (): 根据传入的关键字搜索标签，返回符合关键字的标签名称。</li>\n<li>labelBlocksByKeyword (): 根据关键字搜索所有包含该关键字的文档块，提取其中包含的标签，返回一个 map 类型，键为标签名称，值为包含该标签的所有文档块。</li>\n<li>labelTags (): 提取所有存在的标签名称，返回一个 map 类型，键为标签名称，值为空的 []*Tag 类型。</li>\n<li>sortTags (): 对标签进行排序。</li>\n<li>appendTagChildren () 和 appendChildren0 (): 用来将所有标签按照层级关系组织成树形结构。</li>\n</ul>\n<p>该程序文件主要实现了标签的增删改查等常见功能，并能够将所有标签组织成树形结构以方便用户查看和管理标签。</p>\n<h2 id=\"4249-templatego\"><a class=\"anchor\" href=\"#4249-templatego\">#</a> [42/49] template.go</h2>\n<p>文件名为 template.go，该程序文件包含了处理模板相关的函数和方法。其中</p>\n<ul>\n<li>RenderGoTemplate 函数用于渲染 Go 模板，</li>\n<li>RemoveTemplate 函数用于删除模板，</li>\n<li>SearchTemplate 函数用于搜索模板，</li>\n<li>DocSaveAsTemplate 函数用于将文档保存为模板，</li>\n<li>RenderTemplate 函数用于渲染模板，</li>\n<li>addBlockIALNodes 函数用于添加块级内联属性节点。</li>\n</ul>\n<h2 id=\"4349-transactiongo\"><a class=\"anchor\" href=\"#4349-transactiongo\">#</a> [43/49] transaction.go</h2>\n<p>该程序文件是一个 Go 语言编写的模块，包含了 SiYuan 笔记系统的事务处理相关功能。</p>\n<p>该模块主要负责实现 SiYuan 笔记系统中各种操作的事务处理，在每个操作执行之前，会将操作记录到队列中，随后统一进行事务提交。</p>\n<p>其中的  <code>FlushTxJob</code>  函数用于触发事务提交任务，程序模块的主要函数包括  <code>PerformTransactions</code>  、 <code>doMove</code>  等一系列操作执行函数，这些函数主要用于操作的执行与相应的记录与撤销。此程序文件还包含了一些扩展功能的辅助函数，如函数  <code>IsFoldHeading</code>  用于判断操作是否为对折叠标题的操作，函数  <code>waitforWritingFiles</code>  用于等待文件写入操作完成等。</p>\n<p>总之，该程序文件是 SiYuan 笔记系统的事务处理核心模块。</p>\n<h2 id=\"4449-treego\"><a class=\"anchor\" href=\"#4449-treego\">#</a> [44/49] tree.go</h2>\n<p>该程序文件是一个 Go 语言编写的包 model，主要提供了加载笔记树内容、重置笔记树内容、对多个笔记进行分页等功能。其中</p>\n<ul>\n<li>LoadTreeByID 函数可以通过笔记树的 ID 来加载笔记树内容，如果找不到笔记树则返回 ErrTreeNotFound 错误，如果正在进行索引则返回 ErrIndexing 错误；</li>\n<li>loadTreeByBlockID 函数可以通过文档块的 ID 来加载笔记树，如果未找到文档块则返回 ErrBlockNotFound 错误。</li>\n<li>resetTree 函数可以重置笔记树的一些属性，如标题和路径，并重置块 ID 和内部引用。</li>\n<li>pagedPaths 函数可以对指定路径下的多个笔记进行分页。</li>\n</ul>\n<h2 id=\"4549-updatergo\"><a class=\"anchor\" href=\"#4549-updatergo\">#</a> [45/49] updater.go</h2>\n<p>该文件名为 updater.go，位于 model 文件夹下。该程序主要实现了软件更新相关的功能，包括下载、安装、校验更新包等，实现了软件自动更新的功能。程序包含一些函数，主要包括：</p>\n<ol>\n<li>execNewVerInstallPkg：执行下载的新版本安装包进行安装。</li>\n<li>getNewVerInstallPkgPath：获取新版本安装包的路径。</li>\n<li>checkDownloadInstallPkg：检查下载的安装包并进行下载安装。</li>\n<li>getUpdatePkg：获取更新包的下载链接和 checksum 值。</li>\n<li>downloadInstallPkg：下载并保存更新包。</li>\n<li>sha256Hash：计算文件的 checksum 值。</li>\n<li>Announcement 结构体：包含更新通知的 id、title 和 url 属性。</li>\n<li>GetAnnouncements：获取更新通知。</li>\n<li>CheckUpdate：检查更新并进行提示。</li>\n</ol>\n<h2 id=\"4649-uploadgo\"><a class=\"anchor\" href=\"#4649-uploadgo\">#</a> [46/49] upload.go</h2>\n<p>该文件名为 upload.go，是一个 Go 语言的程序文件。该文件主要分为两个部分：</p>\n<ol>\n<li>函数 InsertLocalAssets</li>\n</ol>\n<p>该函数的作用是将本地 assets 插入到该节点对应的目录下。函数的输入参数包括 id、assetPaths、isUpload。其中 id 代表节点 id，assetPaths 代表本地的 assets 路径，isUpload 代表是否是一个文件上传。该函数的输出参数包括 succMap，表示本次上传成功的文件列表，以及错误 err。</p>\n<ol start=\"2\">\n<li>函数 Upload</li>\n</ol>\n<p>该函数的作用是上传文件。同时，如果有 id 参数，该函数将上传文件存储到该节点的目录下。如果没有 id 参数，则直接将文件存储到默认的 assets 目录下。该函数的输入参数包括 gin.Context 实例 c。该函数的输出参数包括 ret，表示该次上传的结果。</p>\n<h2 id=\"4749-virutalrefgo\"><a class=\"anchor\" href=\"#4749-virutalrefgo\">#</a> [47/49] virutalref.go</h2>\n<p>该程序文件是一个 Go 语言编写的 SiYuan 文档编辑器中的模块，主要实现了处理虚拟引用的相关功能。具体包含以下功能模块：</p>\n<ul>\n<li>getBlockVirtualRefKeywords：获取块与虚拟引用有关的关键字，用于改进打开虚拟引用后加载文档的性能。</li>\n<li>putBlockVirtualRefKeywords：将虚拟引用关键字与块 ID 绑定，缓存到 virtualBlockRefCache 中。</li>\n<li>CacheVirtualBlockRefJob：缓存虚拟引用关键字到 virtualBlockRefCache 中，用于 globalSearch 中对虚拟引用的搜索。</li>\n<li>ResetVirtualBlockRefCache：清除 virtualBlockRefCache 中的缓存并重新缓存虚拟引用关键字。</li>\n<li>processVirtualRef：处理虚拟引用，将虚拟引用标记为可以替换的位置，并在需要的时候将其替换为实际的内容。</li>\n<li>getVirtualRefKeywords：获取虚拟引用的关键字，用于在 globalSearch 中对虚拟引用的搜索。</li>\n<li>prepareMarkKeywords：将给定的关键字列表进行去重、排序、标记处理。</li>\n</ul>\n<p>总体来说，该程序文件是 SiYuan 文档编辑器中虚拟引用功能的一个实现，通过缓存与预处理等优化手段，提升了虚拟引用功能的性能表现。</p>\n<h2 id=\"4849-widgetgo\"><a class=\"anchor\" href=\"#4849-widgetgo\">#</a> [48/49] widget.go</h2>\n<p>该文件名是  <code>widget.go</code> ，属于  <code>model</code>  包，里面定义了一个  <code>SearchWidget</code>  函数，用于搜索 widget 相关信息。</p>\n<p>该函数接收一个  <code>keyword</code>  字符串作为参数，返回一个  <code>Block</code>  类型的切片。函数首先通过  <code>filepath.Join</code>  函数获取到 widget 目录的路径，然后通过  <code>os.ReadDir</code>  函数读取该目录下的所有文件和目录。接下来循环遍历所有的条目，如果该条目不是目录，则跳过，否则遍历该目录下的所有条目，如果不是目录且名称为  <code>widget.json</code> ，则将  <code>isWidgetDir</code>  设为  <code>true</code> ，表明该目录为 widget 目录。</p>\n<p>然后将该目录名转为小写，并判断是否包含关键字，如果包含，则创建一个新的  <code>Block</code>  对象，将该目录名作为  <code>Content</code>  属性值，并加入到返回的切片中。最后返回所有匹配的  <code>Block</code>  切片。</p>\n",
            "tags": [
                "不看会后悔的实用技巧分享",
                "源码解析",
                "思源笔记",
                "思源笔记"
            ]
        },
        {
            "id": "https://blog.aayu.today/skill/code-analysis/siyuan/20230406-6/",
            "url": "https://blog.aayu.today/skill/code-analysis/siyuan/20230406-6/",
            "title": "思源笔记源码解析之kernel篇（九）mobile",
            "date_published": "2023-04-06T12:02:50.000Z",
            "content_html": "<h2 id=\"01-kernelgo\"><a class=\"anchor\" href=\"#01-kernelgo\">#</a> [0/1] kernel.go</h2>\n<p>该文件是 mobile 工程的一部分，主要涉及启动 kernel 和相关的一些操作。具体来说：</p>\n<ul>\n<li>import 了一些库和包，包括了 kernel/cache、kernel/job、kernel/model、kernel/server、kernel/sql 和 <span class=\"exturl\" data-url=\"aHR0cDovL2dvbGFuZy5vcmcveC9tb2JpbGUvYmluZCVFMyU4MCU4Mg==\">golang.org/x/mobile/bind。</span></li>\n<li>定义了两个函数 StartKernelFast 和 StartKernel，前者不做任何操作，后者是启动 kernel 的入口。</li>\n<li>实现了一些辅助函数。</li>\n<li>Language 接受一个整数，返回对应的语言字符串。</li>\n<li>ShowMsg 推送一个消息。</li>\n<li>IsHttpServing 返回是否正在提供 HTTP 服务。</li>\n<li>SetTimezone 设置时间区域。</li>\n</ul>\n<p>注释中还提到了该程序基于 GNU Affero General Public License 发布。</p>\n",
            "tags": [
                "不看会后悔的实用技巧分享",
                "源码解析",
                "思源笔记",
                "思源笔记"
            ]
        },
        {
            "id": "https://blog.aayu.today/skill/code-analysis/siyuan/20230406-5/",
            "url": "https://blog.aayu.today/skill/code-analysis/siyuan/20230406-5/",
            "title": "思源笔记源码解析之kernel篇（八）job",
            "date_published": "2023-04-06T11:51:58.000Z",
            "content_html": "<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>根据以上你自己的分析，对程序的整体功能和构架做出概括。然后用一张 markdown 表格整理每个文件的功能</p>\n<table>\n<thead>\n<tr>\n<th>文件名或函数名</th>\n<th>功能描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cron.go</td>\n<td>实现定时任务的启动和执行功能，启动多个协程去执行不同的定时任务</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"01-crongo\"><a class=\"anchor\" href=\"#01-crongo\">#</a> [0/1] cron.go</h2>\n<p>这个程序文件是 job 包中的 cron.go，它是一个定时任务的启动文件。主要实现了 StartCron 函数和 every 函数。</p>\n<p>StartCron 函数用来创建多个协程去执行不同的定时任务，其中每个任务的执行时间间隔都不同。每个定时任务的具体内容可以在函数名后面的注释中找到。</p>\n<p>every 函数用来执行给定函数 f，并在执行完后等待一定时间间隔，然后再次执行。该程序依赖于其他包中的模块和工具函数，其中包括模型、SQL、任务和树节点等。</p>\n",
            "tags": [
                "不看会后悔的实用技巧分享",
                "源码解析",
                "思源笔记",
                "思源笔记"
            ]
        }
    ]
}