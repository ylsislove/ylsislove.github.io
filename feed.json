{
    "version": "https://jsonfeed.org/version/1",
    "title": "学无止境",
    "subtitle": "阿宇的可爱博客",
    "icon": "https://blog.aayu.today/images/favicon.ico",
    "description": "真理和热爱是吾永生的追求",
    "home_page_url": "https://blog.aayu.today",
    "items": [
        {
            "id": "https://blog.aayu.today/algorithm/dp/20220727-2/",
            "url": "https://blog.aayu.today/algorithm/dp/20220727-2/",
            "title": "动态规划：跳跃游戏",
            "date_published": "2022-07-27T12:08:12.000Z",
            "content_html": "<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p><img data-src=\"http://image.aayu.today/2022/07/27/70c6e9786b6a9.png\" alt=\"\" /></p>\n<h2 id=\"思路与题解\"><a class=\"anchor\" href=\"#思路与题解\">#</a> 思路与题解</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"思路\">\n<p>经过前面几道题的熏陶，这类题感觉已经挺熟练了，动态规划就是先求解子问题，比如说一个长数组，我们先不要看那么多元素，可以就从有一个元素开始往后遍历求解，最后就可以求出一个复杂问题的答案了～～</p>\n<p><img data-src=\"http://image.aayu.today/2022/07/27/6f3ec80ba5fb0.png\" alt=\"\" /></p>\n<p>但是这题应该还有好多其他解法，比如说深度优先搜索应该也算一种，一直往前冲，冲不动了就回退，然后再往前冲～～</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"我的题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">bool</span> <span class=\"token function\">canJump</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> limit <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">></span> limit<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            limit <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> limit <span class=\"token operator\">>=</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "数据结构与算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "https://blog.aayu.today/algorithm/dp/20220727/",
            "url": "https://blog.aayu.today/algorithm/dp/20220727/",
            "title": "动态规划：打家劫舍 II",
            "date_published": "2022-07-27T11:29:24.000Z",
            "content_html": "<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p><img data-src=\"http://image.aayu.today/2022/07/27/99608969451b1.png\" alt=\"\" /></p>\n<h2 id=\"思路与题解\"><a class=\"anchor\" href=\"#思路与题解\">#</a> 思路与题解</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"思路\">\n<p>这道题看起来不难，不就在上一道题的基础上添加了首尾房间相邻的限制吗，但我尝试解了三次都失败了，太丢人了 🤣</p>\n<p>悄咪咪的看了一下题解，一句关键的话语瞬间就扩展了我的思路</p>\n<blockquote>\n<p>如何才能保证第一间房屋和最后一间房屋不同时偷窃呢？如果偷窃了第一间房屋，则不能偷窃最后一间房屋，因此偷窃房屋的范围是第一间房屋到最后第二间房屋；如果偷窃了最后一间房屋，则不能偷窃第一间房屋，因此偷窃房屋的范围是第二间房屋到最后一间房屋。</p>\n</blockquote>\n<p>原来如此，我之前一直钻在当计算到最后一间房屋的时候，如何知道第一件房间到底是抢了还是没抢，就一直加条件去判断，结果越加越繁琐，繁琐了还不对</p>\n<p>看到题解的这句话我就恍然大悟了，我真是笨呐，第一件房和最后一间房不能同时考虑，那我就用两个 for 循环去计算就好啦，三下五除二，五分钟写完，一次性通过～</p>\n<p>果然，思路才是最重要的！</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"我的题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">rob</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> prev <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> curr <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 先计算排除最后一间房的价格</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">int</span> next <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>curr<span class=\"token punctuation\">,</span> prev <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            prev <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            curr <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">int</span> r1 <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        prev <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> curr <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 再计算排除第一间房的价格</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">int</span> next <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>curr<span class=\"token punctuation\">,</span> prev <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            prev <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            curr <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> curr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "数据结构与算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "https://blog.aayu.today/algorithm/dp/20220726-2/",
            "url": "https://blog.aayu.today/algorithm/dp/20220726-2/",
            "title": "动态规划：打家劫舍",
            "date_published": "2022-07-26T11:31:14.000Z",
            "content_html": "<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p><img data-src=\"http://image.aayu.today/2022/07/26/0e8e6d5a53f8d.png\" alt=\"\" /></p>\n<h2 id=\"思路与题解\"><a class=\"anchor\" href=\"#思路与题解\">#</a> 思路与题解</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"思路\">\n<p>和前面题的思路蛮像的，关键在于比大小，因为题目有不能偷盗相邻的两个房间的限制，所以比大小的关键就是  <code>max(dp[i-1], dp[i-2] + nums[i])</code> ，dp [i] 就表示新增了第 i 个房间后的最大收益，所以如果我第 i 个房间不偷，我能得到的最大收益就是 dp [i-1]；如果我第 i 个房间偷了，那我 i-1 房间就不能偷了，所以我能得的最大收益就是 dp [i-2] + nums [i]，是不是很 easy~~</p>\n<p>当然啦，再稍微思考一下，可以用滚动数组把空间复杂度优化为 O (1)</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"我的题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">rob</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"优化题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">rob</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> prev <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> curr <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">int</span> next <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>curr<span class=\"token punctuation\">,</span> prev <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            prev <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            curr <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> curr<span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "数据结构与算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "https://blog.aayu.today/algorithm/dp/20220726/",
            "url": "https://blog.aayu.today/algorithm/dp/20220726/",
            "title": "动态规划：使用最小花费爬楼梯",
            "date_published": "2022-07-25T16:00:00.000Z",
            "content_html": "<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p><img data-src=\"http://image.aayu.today/2022/07/26/035f513090ae2.png\" alt=\"\" /></p>\n<h2 id=\"思路与题解\"><a class=\"anchor\" href=\"#思路与题解\">#</a> 思路与题解</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"思路\">\n<p>这个题目描述的比较绕，如果有纸和笔的话，在纸上画一画会好很多，比如我胡乱画的如下</p>\n<p><img data-src=\"http://image.aayu.today/2022/07/26/4416d31f461c5.jpg\" alt=\"\" /></p>\n<p>看了官方题解，思路才比较清晰了</p>\n<p><img data-src=\"http://image.aayu.today/2022/07/26/6e507951fe249.png\" alt=\"\" /></p>\n<p>上述代码的时间复杂度和空间复杂度都是 O (n)。但也可以用滚动数组的方式将空间复杂度优化到 O (1)</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"我的题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">minCostClimbingStairs</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> cost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> cost<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> res<span class=\"token punctuation\">[</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        res<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> cost<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> cost<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> cost<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> cost<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">int</span> r1<span class=\"token punctuation\">,</span> r2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            r1 <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> cost<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">//r2 = res[i-1] + cost[i-1] + cost[i];</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            r2 <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> cost<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> cost<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            res<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r1 <span class=\"token operator\">&lt;</span> r2 <span class=\"token operator\">?</span> r1 <span class=\"token operator\">:</span> r2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"官方题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">minCostClimbingStairs</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> cost<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> cost<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> prev <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> curr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">int</span> next <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>curr <span class=\"token operator\">+</span> cost<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prev <span class=\"token operator\">+</span> cost<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            prev <span class=\"token operator\">=</span> curr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            curr <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> curr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "数据结构与算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "https://blog.aayu.today/algorithm/dp/20220725-2/",
            "url": "https://blog.aayu.today/algorithm/dp/20220725-2/",
            "title": "动态规划：爬楼梯",
            "date_published": "2022-07-24T16:00:00.000Z",
            "content_html": "<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p><img data-src=\"http://image.aayu.today/2022/07/25/73d3d92e4a44c.png\" alt=\"\" /></p>\n<h2 id=\"思路与题解\"><a class=\"anchor\" href=\"#思路与题解\">#</a> 思路与题解</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"思路\">\n<p>n 阶，可以看成是 n-2 阶爬 2 阶后到达，也可以看成是 n-1 阶爬 1 阶后到达，所以就是 n-2 阶的爬取数 + n-1 阶的爬取数，翻译过来就是斐波那契数，easy~</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"我的题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">climbStairs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">//n 阶，可以看成是 n-2 阶爬 2 阶后到达</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 也可以看成是 n-1 阶爬 1 阶后到达</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 所以就是 n-2 阶的爬取数 + n-1 阶的爬取数</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 翻译过来就是斐波那契数，easy</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            p <span class=\"token operator\">=</span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            q <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            r <span class=\"token operator\">=</span> p <span class=\"token operator\">+</span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "数据结构与算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "https://blog.aayu.today/algorithm/dp/20220725/",
            "url": "https://blog.aayu.today/algorithm/dp/20220725/",
            "title": "动态规划：第N个泰波那契数",
            "date_published": "2022-07-24T16:00:00.000Z",
            "content_html": "<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p><img data-src=\"http://image.aayu.today/2022/07/25/b08130d1eee33.png\" alt=\"\" /></p>\n<h2 id=\"思路与题解\"><a class=\"anchor\" href=\"#思路与题解\">#</a> 思路与题解</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"思路\">\n<p>和昨天的<a href=\"https://blog.aayu.today/algorithm/dp/20220724/\">斐波那契数</a>思路一样，用滚动数组的思想，关键点在于设置 p、q、t、r 的初值，我们知道，r = p + q + t，第一个要计算的值是 Fn (3)，T_3 = 0 + 1 + 1，这是滚动之后的，所以 p、q、t、r 的初值应该是 0、0、1、1，这样滚动过后才能变成 0、1、1，就能算出 Fn (3) = r = 0 + 1 + 1。Easy~</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"我的代码\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">tribonacci</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> r <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            p <span class=\"token operator\">=</span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            q <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            t <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            r <span class=\"token operator\">=</span> p <span class=\"token operator\">+</span> q <span class=\"token operator\">+</span> t<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "数据结构与算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "https://blog.aayu.today/algorithm/dp/20220724/",
            "url": "https://blog.aayu.today/algorithm/dp/20220724/",
            "title": "动态规划：斐波那契数",
            "date_published": "2022-07-23T16:00:00.000Z",
            "content_html": "<h2 id=\"题目描述\"><a class=\"anchor\" href=\"#题目描述\">#</a> 题目描述</h2>\n<p><img data-src=\"http://image.aayu.today/2022/07/24/6ac1effd292d1.png\" alt=\"\" /></p>\n<h2 id=\"思路与题解\"><a class=\"anchor\" href=\"#思路与题解\">#</a> 思路与题解</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"思路\">\n<p>第一想到的应该就是递归，用递归尝试后爆溢栈了，于是便想到用一个数组记录下来已算出的斐波那契数。我犯的一个低级错误就是把  <code>if (n == 1 || n == 0) return n;</code>  刚开始没有放到 fib 函数里，导致系统输入 0 时，直接 n - 1 = -1，数组越界报错了 🤣 长时间不思考果然脑袋就变笨了</p>\n<p>看了官方题解后又有了收获，用滚动数组的思想，就可以将递归函数转换为 for 循环，用自下而上的方法去求解子问题，秒的很</p>\n<p><img data-src=\"http://image.aayu.today/2022/07/25/0dc94061dbc19.gif\" alt=\"\" /></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"我的题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">bool</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">31</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            flag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        flag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> flag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">recur</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">recur</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">recur</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        data<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">recur</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">recur</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        flag<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"优化题解\">\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">fib</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        p <span class=\"token operator\">=</span> q <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        r <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            p <span class=\"token operator\">=</span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            q <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            r <span class=\"token operator\">=</span> p <span class=\"token operator\">+</span> q<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "数据结构与算法",
                "动态规划",
                "动态规划"
            ]
        },
        {
            "id": "https://blog.aayu.today/english/reading/20220619/",
            "url": "https://blog.aayu.today/english/reading/20220619/",
            "title": "Daily Reading #1: The Capitol-riot hearings: High time for prime time",
            "date_published": "2022-06-18T16:00:00.000Z",
            "content_html": "<h2 id=\"文章来源\"><a class=\"anchor\" href=\"#文章来源\">#</a> 文章来源</h2>\n<p>The Economist: June 11th - 17th 2022</p>\n<h2 id=\"标题\"><a class=\"anchor\" href=\"#标题\">#</a> 标题</h2>\n<p>The Capitol-riot hearings: High time for prime time 国会暴动听证会：黄金时间的到来</p>\n<p>Why America’s probe into the attempted coup last year is needed, before it’s too late 为什么美国需要对去年的未遂政变进行调查，否则就太晚了</p>\n<p><img data-src=\"http://image.aayu.today/2022/06/19/1f9cc6772ee8f.png\" alt=\"\" /></p>\n<h2 id=\"长难句分析\"><a class=\"anchor\" href=\"#长难句分析\">#</a> 长难句分析</h2>\n<div class=\"note info\">\n<p>为了更加直观的展示，句子中的主语用<span class=\"red\">红色</span>标记，谓语或系动词用<span class=\"yellow\">黄色</span>标记，宾语用<span class=\"blue\">蓝色</span>标记，宾语补足语用<span class=\"green\">绿色</span>标记，状语用<span class=\"purple\">紫色</span>标记，连词和状语引导词用<ins>下划线</ins>标记</p>\n</div>\n<div class=\"note primary\">\n<p>博主在学习的过程中难免会有错误，欢迎小伙伴留言指出～～</p>\n</div>\n<ol>\n<li class=\"quiz essay\">\n<p>A mob stormed the Capitol in Washington, DC, in an effort to prevent Congress from certifying Joe Biden’s election victory.</p>\n<blockquote>\n<ul>\n<li><span class=\"red\">A mob</span> <span class=\"yellow\">stormed</span> <span class=\"blue\">the Capitol</span> in Washington, DC, in an effort to prevent Congress from certifying Joe Biden’s election victory.<br />\n 一群暴徒冲进华盛顿特区的国会大厦，试图阻止国会认证乔 - 拜登的选举胜利。</li>\n<li>主谓宾结构，in an effort to prevent 应该是非谓语动词做后置定语吧</li>\n<li>storm 作动词，表示 “猛烈攻击”，英文解释为 “to suddenly attack and enter a place using a lot of force”<br />\n 举个🌰：An angry crowd stormed the embassy. 愤怒的人群冲进大使馆</li>\n<li>prevent 作动词，表示阻止，在日常英语中，人们经常用  <code>stop somebody/something (from) doing something</code>  代替  <code>prevent somebody/something (from) doing something</code> <br />\n 举个🌰：This barrier is to stop people from coming in without a ticket. 这个屏障是为了阻止人们无票进入。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Members of Congress had to be rushed to a secure location in a basement.</p>\n<blockquote>\n<ul>\n<li><span class=\"red\">Members</span> of Congress <span class=\"purple\">had to</span> <span class=\"yellow\">be rushed</span> to a secure <span class=\"blue\">location</span> in a basement.<br />\n 国会议员不得不被紧急送往地下室的一个安全地点。</li>\n<li>被动句，had to 做状语修饰谓语 rush</li>\n<li>rush 作动词，表示 “迅速送往”，英文解释为 “to take or send someone or something somewhere very quickly, especially because of an unexpected problem”，用法 <code>rush somebody/something to something</code> <br />\n 举个🌰：Dan was rushed to hospital with serious head injuries. 丹因头部严重受伤被紧急送往医院。</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>And the man who inspired all this was the president himself, who had urged his followers to help overturn his election defeat.</p>\n<blockquote>\n<p><ins>And</ins> <span class=\"red\">the man</span> <ins>who</ins> inspired all this <span class=\"yellow\">was</span> <span class=\"blue\">the president</span> himself, <ins>who</ins> had urged his followers to help overturn his election defeat.<br />\n 而激发这一切的人就是总统本人，他曾敦促他的追随者帮助推翻他的选举失败。<br />\n两个 who 引导的定语从句，修饰主语 man</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>As the Republicans’ leader in the Senate, Mitch McConnell, told the Senate a few weeks later, Donald Trump was “practically and morally responsible” for these events: “The people who stormed this building believed they were acting on the wishes and instructions of their president.”</p>\n<blockquote>\n<ul>\n<li><ins>As</ins> the Republicans’ leader in the Senate, Mitch McConnell, told the Senate a few weeks later, <span class=\"red\">Donald Trump</span> <span class=\"yellow\">was</span> <span class=\"blue\">“practically and morally responsible”</span> for these events: “<span class=\"red\">The people</span> <ins>who</ins> stormed this building <span class=\"yellow\">believed</span> they were acting on the wishes and instructions of their president.”<br />\n 正如共和党参议院领袖米奇・麦康奈尔（Mitch McConnell）几周后告诉参议院的那样，唐纳德・特朗普对这些事件负有 “实际和道义上的责任”：“袭击这座大楼的人认为他们是按照总统的意愿和指示行事的。”</li>\n<li>As 在这个句中应该引导的是方式状语从句，翻译成 “正如，如同，按照”，Mitch McConnell 应该是同位语，补充说明前面的 leader，关于同位语和插入语的区别可以看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMzA5MDMyMjI=\">考研英语语法：同位语、插入语</span> 这篇文章</li>\n<li>冒号后面的句子应该是同位语，用于解释说明前面的 these events</li>\n<li>在同位语中，又包含了一个 who 引导的定语从句和 believe 引导的宾语从句，宾语从句省略了 that</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"全文速览\"><a class=\"anchor\" href=\"#全文速览\">#</a> 全文速览</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"英文全文\">\n<p>The essence of what happened on January 6th 2021 is well-known, if still shocking to recall. A mob stormed the Capitol in Washington, DC, in an effort to prevent Congress from certifying Joe Biden’s election victory. Four people in the crowd died that day, and five police officers in its aftermath. Members of Congress had to be rushed to a secure location in a basement. Rioters erected a mock gallows and chanted “Hang Mike Pence”. And the man who inspired all this was the president himself, who had urged his followers to help overturn his election defeat. As the Republicans’ leader in the Senate, Mitch McConnell, told the Senate a few weeks later, Donald Trump was “practically and morally responsible” for these events: “The people who stormed this building believed they were acting on the wishes and instructions of their president.”</p>\n<p>So what is the point of the public hearings of the House committee probing the insurrection due to start on June 9th? From Thursday’s prime-time political theatre to half a dozen sessions that will follow before a final report in September, the coverage will be viewed very differently on either side of a polarised country. Commentators on the right will belittle it all as a witch hunt. And after November’s mid-term elections, in which the Republicans look likely to win control of the House, they can be counted on to bury the matter.</p>\n<p>Yet that ticking clock gives an urgency to the proceedings, which matter profoundly, for three reasons. One flows from the basic workings of democracy: institutions must do their job. It is the task of Congress to probe how an assault on the Capitol happened and conclude what lessons can be learned. Its nine-member committee—seven Democrats and two principled Republicans, Liz Cheney and Adam Kinzinger—has gone about it in a commendably thorough, bipartisan way, despite much resistance. On June 3rd the Department of Justice charged Peter Navarro, a former economic adviser to Mr Trump, for refusing to co-operate with the committee (though it strangely decided not to act against Mark Meadows, the White House chief of staff at the time of the riot, despite similar obstructionism).</p>\n<p>Second, though the core of the story is known, many vital details are not—especially concerning the extent of the coup’s planning and how directly the president was involved. Some revealing details, such as text messages from Mr Trump’s family to Mr Meadows urging him to persuade his boss to stop the riot, have dribbled out in the course of the committee’s work so far. More can be expected in the public hearings, given that they will draw on information gleaned from more than 1,000 depositions and interviews and over 140,000 documents.</p>\n<p>A flow of fresh facts about the depth of plotting would reinforce the third reason why these hearings are important: the threat is not over. True, America’s democracy prevailed despite the attack. Members of Congress were eventually able to go back into the chamber and they duly certified the election (albeit that, despite the violence that had occurred that day, 138 Republican House members still voted to reject the results in Pennsylvania). Mr Biden became president. But even now 60% of Republicans believe Mr Trump’s lie that the election was stolen. And the party has decided that the insurrection was not serious enough to break with Mr Trump, leaving him the front-runner for the Republican nomination in 2024. If Republicans select him, Mr McConnell says he will back him.</p>\n<p>Astonishing as it may seem, given what is already known about his efforts to thwart the will of the electorate, let alone what may be discovered, Mr Trump could well win back the presidency legitimately. In case he does not, his supporters are striving to put in place officials who may make a future challenge to the voters’ verdict succeed. The committee’s work, including the public hearings, is a vital part of the eternal vigilance that, more than ever, is needed to defend American democracy.</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"中文翻译\">\n<p>2021 年 1 月 6 日发生的事情的本质是众所周知的，如果回忆起来仍然令人震惊。一群暴徒冲进华盛顿特区的国会大厦，试图阻止国会认证乔 - 拜登的选举胜利。当天，人群中有 4 人死亡，5 名警察在事后死亡。国会议员不得不被紧急送往地下室的一个安全地点。骚乱者搭建了一个模拟绞架，并高呼 &quot;绞死迈克 - 彭斯&quot;。而激发这一切的人就是总统本人，他曾敦促他的追随者帮助推翻他的选举失败。正如共和党在参议院的领导人米奇 - 麦康奈尔几周后告诉参议院的那样，唐纳德 - 特朗普对这些事件 &quot;实际上和道德上都有责任&quot;。&quot;冲进这座大楼的人认为他们是按照他们的总统的意愿和指示行事。&quot;</p>\n<p>那么，将于 6 月 9 日开始的众议院委员会调查叛乱的公开听证会的意义何在？从周四的黄金时段的政治戏剧到随后的半打会议，再到 9 月的最终报告，在这个两极分化的国家里，人们对这些报道的看法会非常不同。右派的评论员会把这一切贬低为猎奇。而在 11 月的中期选举之后，共和党看起来有可能赢得对众议院的控制权，可以指望他们将此事埋葬。</p>\n<p>然而，这个滴答作响的钟声给这个程序带来了紧迫感，它关系重大，原因有三。一个原因来自于民主的基本运作：机构必须做好自己的工作。国会的任务是调查对国会大厦的攻击是如何发生的，并总结出可以吸取的教训。其九名成员组成的委员会 -- 七名民主党人和两名有原则的共和党人利兹 - 切尼和亚当 - 金辛格 -- 以值得称道的彻底、两党合作的方式进行调查，尽管有很多阻力。6 月 3 日，司法部指控特朗普先生的前经济顾问彼得 - 纳瓦罗 (Peter Navarro) 拒绝与委员会合作（但奇怪的是，尽管有类似的阻挠行为，司法部还是决定不对骚乱发生时的白宫幕僚长马克 - 梅多斯 (Mark Meadows) 采取行动）。</p>\n<p>第二，虽然故事的核心内容已经知道，但许多重要的细节并不清楚，特别是关于政变的计划程度以及总统如何直接参与。在委员会迄今为止的工作过程中，一些具有启发性的细节，如特朗普先生的家人给梅多斯先生的短信，敦促他劝说他的老板停止暴乱，已经流传出来。鉴于公开听证会将利用从 1000 多份证词和访谈以及 14 万多份文件中收集到的信息，可以预期会有更多的细节。</p>\n<p>关于阴谋深度的新事实的流动将加强这些听证会重要的第三个原因：威胁并没有结束。诚然，尽管发生了袭击，美国的民主还是取得了胜利。国会议员最终能够回到会议厅，他们正式认证了选举（尽管当天发生了暴力事件，但仍有 138 名共和党众议员投票反对宾夕法尼亚州的选举结果）。拜登先生成为总统。但即使是现在，也有 60% 的共和党人相信特朗普先生的谎言，即选举被盗。而该党已经决定，叛乱还没有严重到与特朗普先生决裂的地步，让他成为 2024 年共和党提名的领跑者。如果共和党人选择他，麦康奈尔先生说他会支持他。</p>\n<p>尽管看起来令人吃惊，但考虑到他阻挠选民意愿的努力已经为人所知，更不用说可能发现的情况，特朗普先生很可能合法地赢回总统职位。如果他不这样做，他的支持者正在努力安排一些官员，他们可能会使未来对选民裁决的挑战取得成功。委员会的工作，包括公开听证会，是捍卫美国民主比以往任何时候都更需要的永恒的警惕的重要组成部分。</p>\n</div>\n",
            "tags": [
                "英语学习之路",
                "每日精读",
                "每日精读"
            ]
        },
        {
            "id": "https://blog.aayu.today/leisure/mood/20220519/",
            "url": "https://blog.aayu.today/leisure/mood/20220519/",
            "title": "DIY的一个超好看的小夜灯",
            "date_published": "2022-05-18T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>最近在 B 站上看到一个 DIY 小夜灯的教程，实物真的要比照片好看～～</p>\n<p>520 要到啦，自己 DIY 一个送给对象，是个很不错的礼物～～</p>\n<h2 id=\"小夜灯\"><a class=\"anchor\" href=\"#小夜灯\">#</a> 小夜灯</h2>\n<p><img data-src=\"http://image.aayu.today/2022/05/19/7a917a89b6e39.jpg\" alt=\"\" /></p>\n<h2 id=\"教程链接\"><a class=\"anchor\" href=\"#教程链接\">#</a> 教程链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXNVNHkxYzdOeQ==\">成本 20 手把手教：3D 打印有趣的小夜灯，超级好看！大鱼 DIY 原创，含资料图纸！</span></li>\n</ul>\n",
            "tags": [
                "清风明月",
                "心情",
                "心情"
            ]
        },
        {
            "id": "https://blog.aayu.today/hardware/raspberry-pi/20220516/",
            "url": "https://blog.aayu.today/hardware/raspberry-pi/20220516/",
            "title": "树莓派4B安装向日葵踩坑笔记",
            "date_published": "2022-05-15T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>近期在捣鼓树莓派，已经在树莓派上成功用 VNC 进行了远程桌面连接，那么便想尝试能否用向日葵连接树莓派，这一尝试便踩了不少坑，而且国内关于这方面的资料也挺少，于是便把自己的踩坑经历记录下来～</p>\n<h2 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h2>\n<p>我用的是完整版的 Raspberry Pi OS 64 位系统，注意是 64 位系统哦，可以用上海交通大学 SJTUG 镜像站下载，下载速度很快，链接如下～</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnNqdHVnLnNqdHUuZWR1LmNuL3Jhc3BiZXJyeS1waS1vcy1pbWFnZXMvcmFzcGlvc19mdWxsX2FybTY0L2ltYWdlcy8=\">Raspberry Pi OS 64</span></p>\n<p>更多镜像的下载链接和介绍可以看这篇博文：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2E0OTYyOTg2ODUvYXJ0aWNsZS9kZXRhaWxzLzEwODkwOTkyNw==\">使用国内镜像站下载树莓派 Raspberry Pi OS 操作系统</span></p>\n<p>最终烧录好的系统如下</p>\n<pre><code>Linux raspberrypi 5.15.32-v8+ #1538 SMP PREEMPT Thu Mar 31 19:40:39 BST 2022 aarch64 GNU/Linux\n</code></pre>\n<h2 id=\"下载安装包\"><a class=\"anchor\" href=\"#下载安装包\">#</a> 下载安装包</h2>\n<p>去向日葵的官网下载 Linux 的安装包</p>\n<p>因为我们的系统是 arm64 位的，而向日葵的「UOS」和「麒麟」这两个应用平台提供 arm64 版本的架构，这里我选择「麒麟」应用平台的 arm64 版本安装包</p>\n<p>下载完安装包后就可以在树莓派里用如下命令安装</p>\n<pre><code>sudo dpkg -i SunloginClient_11.0.1.44968_kylin_arm.deb\n</code></pre>\n<p>但会发现报错，报错如下</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/16/b3fa5e9133894.png\" alt=\"\" /></p>\n<p>从报错信息中可以，缺少  <code>libappindicator3-1</code>  这个依赖包</p>\n<h2 id=\"解决缺少依赖问题\"><a class=\"anchor\" href=\"#解决缺少依赖问题\">#</a> 解决缺少依赖问题</h2>\n<p>首先尝试用  <code>sudo apt-get install libappindicator3-1</code>  去安装依赖，发现源里没有这个依赖包</p>\n<p>没办法，那就直接下载好这个依赖包然后手动安装吧，经过查阅资料，从 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ0NzQ3Ny9hcnRpY2xlL2RldGFpbHMvMTE1MTg4OTM4\">这篇博客中</span> 找到了相关的下载链接</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMudXN0Yy5lZHUuY24vZGViaWFuL3Bvb2wvbWFpbi9saWJhL2xpYmFwcGluZGljYXRvci8=\">libappindicator3-1 官方下载链接</span></p>\n<p>我们找到 arm64 架构的进行下载，如下图</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/16/0ac959820f764.png\" alt=\"\" /></p>\n<p>下载完成后先用  <code>sudo apt --fix-broken install</code>  命令进行依赖包错误的修复，然后再用  <code>sudo dpkg -i libappindicator3-1_0.4.92-7_arm64.deb</code>  安装刚刚下载好的依赖包</p>\n<p>结果事与愿违，依然报错啦，报错截图如下</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/16/fb0a62fe6909f.png\" alt=\"\" /></p>\n<p>可以看到还缺少了  <code>libdbusmenu-glib4</code> ， <code>libdbusmenu-gtk3-4</code> ， <code>libindicator3-7</code>  这三个依赖包</p>\n<p>好吧，那再次尝试把这三个依赖包看能不能安装上吧，还是先用  <code>sudo apt --fix-broken install</code>  命令进行依赖包错误的修复，然后尝试看本地源里有无依赖包，终于来好运了，本地源里有  <code>libdbusmenu-glib4</code> ， <code>libdbusmenu-gtk3-4</code>  这两个依赖包，用如下命令安装</p>\n<pre><code>sudo apt-get install libdbusmenu-glib4\nsudo apt-get install libdbusmenu-gtk3-4\n</code></pre>\n<p>在尝试用本地源安装  <code>libindicator3-7</code>  时发现没有，那就还是自己下载依赖包手动安装吧，下载链接如下</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMudXN0Yy5lZHUuY24vZGViaWFuL3Bvb2wvbWFpbi9saWJpL2xpYmluZGljYXRvci8=\">libindicator3-7 官方下载链接</span></p>\n<p>我们依然选择 arm64 架构的进行下载，如下图</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/16/c8f687dd6d8f7.png\" alt=\"\" /></p>\n<p>下载好后就可以用  <code>sudo dpkg -i libindicator3-7_0.5.0-4_arm64.deb</code>  命令进行安装啦</p>\n<p>终于把这三个依赖包都安装好了，然后再次用  <code>sudo dpkg -i libappindicator3-1_0.4.92-7_arm64.deb</code>  安装最开始报错的依赖包，结果终于不报错啦，接下来终于可以尝试再次安装向日葵的安装包啦，安装命令如下</p>\n<pre><code>sudo dpkg -i SunloginClient_11.0.1.44968_kylin_arm.deb\n</code></pre>\n<p>终于，安装成功！结果如下</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/16/c92d4247ba514.png\" alt=\"\" /></p>\n<h2 id=\"启动向日葵\"><a class=\"anchor\" href=\"#启动向日葵\">#</a> 启动向日葵</h2>\n<p>在树莓派上终于安好向日葵了，那向日葵怎么启动呢，可以在菜单栏里找到向日葵，如下</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/16/907d31ab2f6c1.png\" alt=\"\" /></p>\n<p>成功运行向日葵，如下～～</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/16/b2742e182bbd4.png\" alt=\"\" /></p>\n<h2 id=\"相关链接\"><a class=\"anchor\" href=\"#相关链接\">#</a> 相关链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2E0OTYyOTg2ODUvYXJ0aWNsZS9kZXRhaWxzLzEwODkwOTkyNw==\">使用国内镜像站下载树莓派 Raspberry Pi OS 操作系统</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTQ0NzQ3Ny9hcnRpY2xlL2RldGFpbHMvMTE1MTg4OTM4\">无法定位软件包：libappindicator3-1_libappindicator3-1 软件包安装失败</span></li>\n</ul>\n",
            "tags": [
                "硬件修炼手册",
                "树莓派",
                "RaspberryPi"
            ]
        },
        {
            "id": "https://blog.aayu.today/skill/tools/20220510/",
            "url": "https://blog.aayu.today/skill/tools/20220510/",
            "title": "NoteExpress七个隐藏的实用技巧",
            "date_published": "2022-05-10T11:50:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>NoteExpress 可以说是国内最专业的文献检索与管理系统了，对比 Endnote 来说，它最大的优点是对中文文献管理非常友好！对于需要发中文核心的科研人员来说，特别推荐！</p>\n<h2 id=\"笔记添加\"><a class=\"anchor\" href=\"#笔记添加\">#</a> 笔记添加</h2>\n<p>在预览区的倒数第 2 个位置就是「笔记」选项卡，在这里可以做笔记。各栏位置可以用鼠标拖动进行调整。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/883b8b000400e.png\" alt=\"\" /></p>\n<p>笔记不仅可以插入文字，还可以插入图片和表格。</p>\n<p>文字插入大家应该都会，不需要多讲；</p>\n<p>关于图片、表格以及一些超链接的插入，只需要点击相应的图标，然后在文件夹里选中需要插入的内容就可以了！最后，点击「保存」这个图标就可以了。</p>\n<p>一旦有笔记加入，会出现粉红色方框，这就代表笔记已经存在了。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/209f42b041519.png\" alt=\"\" /></p>\n<p>这对我们之后查找文件帮助很大，打开文件看到特定的小红点就知道是自己想要的内容，不需要费时寻找。</p>\n<h2 id=\"文献去重\"><a class=\"anchor\" href=\"#文献去重\">#</a> 文献去重</h2>\n<p>我们在众多数据库中进行检索添加参考文献记录，不可避免的会有重复的文献。这种情况下，可以直接用 NoteExpress 进行查找去重。</p>\n<p>操作步骤也非常简单：</p>\n<p>选中左上角菜单栏的「查重」按钮，根据需要选择想要查重的文件夹和筛选条件，点击「查找」。此时，NoteExpress 会显示我们上一步筛选出来的重复文献，且左侧检索记录会记录下每一次查重的结果。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/bd99341b3a272.png\" alt=\"\" /></p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/cf8a519300b5b.png\" alt=\"\" /></p>\n<p>这时，重复的文献就会被选中，呈现深蓝色的背景颜色啦</p>\n<p>我们可以单击单篇文献，点击预览区的「位置」按钮，便可查看文献所处数据库或者文件夹的位置。</p>\n<p>根据需要，将重复文献从不必要的数据库当中删除即可。</p>\n<p>操作方式是：右键文献，选择「从所有文件夹中删除」或者「从指定文件夹中删除」。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/bd8e81799c1d8.png\" alt=\"\" /></p>\n<h2 id=\"标签标记\"><a class=\"anchor\" href=\"#标签标记\">#</a> 标签标记</h2>\n<p>该功能主要支持给文献添加标签，一篇文献可添加多个标签。添加之后方便文献的管理。</p>\n<p>操作方式是：选中文献，点击左上角的「标签标记」，添加合适的标签、星标或优先级，点击「确定」即可。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/aecc19871b5f9.png\" alt=\"\" /></p>\n<p>此时的标签云是一个超链接，点击词组标签可以跳到相应的文件（或者显示多个文件），也可点击向下的小三角对标签进行排序或隐藏。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/685ba7141df5d.png\" alt=\"\" /></p>\n<h2 id=\"文献阅读\"><a class=\"anchor\" href=\"#文献阅读\">#</a> 文献阅读</h2>\n<p>这是对前面一些小技巧汇了一个总，这里我把题录分成了 9 个部分。</p>\n<p>① 表示是否阅读了文献；</p>\n<p>② 表示文献类型，比如说有学位论文或者是期刊文章；</p>\n<p>③ 已经加星标，将其收藏；</p>\n<p>④ 代表优先级，这个优先级有 5 个档次；</p>\n<p>⑤ 有无附件、红色方块显示有附件，没有方块则代表没有附件；</p>\n<p>⑥ 到 ⑨ 就是年份作者标题和来源，这个暂时不多讲。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/4bdd582ed5a45.png\" alt=\"\" /></p>\n<p>值得注意的是，这些选项就可以作为筛选条件来对其进行排序，我们只需要选择想要筛选的条件那里，点一下，就可以排序了。</p>\n<p>当然，还可以自定义列表头。有以下两种方法，都很简单实用。</p>\n<p>第一种：「文件夹」上右键 -「自定义列表头」-「自定义」；</p>\n<p>或者第二种方法：列表头上面右键，选择「自定义」即可。</p>\n<h2 id=\"文献统计分析\"><a class=\"anchor\" href=\"#文献统计分析\">#</a> 文献统计分析</h2>\n<p>没想到吧，NoteExpress 还提供了对文献记录的基本统计功能。</p>\n<p>操作方式是：</p>\n<p>选中需要统计的数据库，再选择「文件夹信息统计」-「统计题录类型」（例如对当前数据库文献记录题录类型、 第一作者、第二作者、卷、 期、引用次数以及关键词等），最后点击「统计」即可。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/10/01f7cede6c33b.png\" alt=\"\" /></p>\n<p>如，对当前数据库文献记录来源的年份进行分析，可以了解当前文献的来源近况，这样，点击「年份」后就会出现分析结果，可以将统计结果另存为文本格式。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/11/1741884409216.png\" alt=\"\" /></p>\n<h2 id=\"压缩数据库\"><a class=\"anchor\" href=\"#压缩数据库\">#</a> 压缩数据库</h2>\n<p>如果文献太多，已经没有多余的空间了，这个时候建议使用「压缩当前数据库」的功能。</p>\n<p>且该功能可以多次使用，如果经过一段时间使用，数据库又没有冗余空间可继续使用该功能。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/11/2d5605f31976e.png\" alt=\"\" /></p>\n<h2 id=\"工具选项\"><a class=\"anchor\" href=\"#工具选项\">#</a> 工具选项</h2>\n<p>「工具选项」可以对常规、显示、数据库备份、笔记、扩展、样式、网络代理、自定义、用户以及其他等进行设置。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/11/8f7cb5587acfc.png\" alt=\"\" /></p>\n<p>这里我们着重讲一下「扩展」的设置，这里面描述了如何设置 Word 与 WPS 的插件，也即是说将 Noteexpress 选项卡存放在 Word 或者 WPS 的菜单栏。</p>\n<p>一般情况下，安装完 Noteexpress ，会自动在 Word 中加载该扩展，WPS 中也能加载该扩展，两个软件都并未出现不兼容的情况，使用感受也都差不多，可以按照个人习惯选择。</p>\n<p>假如未能显示，或者其他未知的错误，可以点击这里的按钮重装一次 。</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/11/042a23eb537ec.png\" alt=\"\" /></p>\n<p>还有自定义选项。我们可以在这个地方，对题录的字段自定义，也可以对列表头自定义。这样就可以更加方便、自如地管理我们的文献了！</p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yODA3MDczNTI=\">中文文献管理神器的 7 个隐藏的实用技巧…</span></li>\n</ul>\n",
            "tags": [
                "不看会后悔的实用技巧分享",
                "工具篇",
                "NoteExpress"
            ]
        },
        {
            "id": "https://blog.aayu.today/skill/miscellaneous/20220508/",
            "url": "https://blog.aayu.today/skill/miscellaneous/20220508/",
            "title": "常见文档打开乱码原因总结",
            "date_published": "2022-05-08T09:07:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>本文总结了一些常见的因为编码设置错误而打开文档乱码的情况</p>\n<p><img data-src=\"http://image.aayu.today/2022/05/08/196501abc3a9f.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "不看会后悔的实用技巧分享",
                "杂七杂八",
                "乱码"
            ]
        },
        {
            "id": "https://blog.aayu.today/gis/cesium/learning-notes/20220421/",
            "url": "https://blog.aayu.today/gis/cesium/learning-notes/20220421/",
            "title": "Vue3.2配置Cesium踩坑笔记",
            "date_published": "2022-04-21T04:05:21.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>很早之前，我写过一篇 <a href=\"https://blog.aayu.today/gis/cesium/learning-notes/20210701/\">Cesium-Vue3 整合 Cesium 最简教程</a> 教程，而最近我在学习最新版的 Vue3.2 和 TypeScript，并使用了 Vue Admin Plus 后台框架，发现在这个框架的基础上配置 Cesium 会有一些坑，便在此记录下来，希望能帮助到后面的小伙伴呀～～</p>\n<h2 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h2>\n<ul>\n<li>NodeJS：16.14.2</li>\n<li>Vue：3.2.31</li>\n<li>Cesium：1.92.0</li>\n<li>@types/cesium：1.70.0</li>\n<li>copy-webpack-plugin：10.2.4</li>\n<li>@types/copy-webpack-plugin：10.1.0</li>\n</ul>\n<h2 id=\"配置步骤\"><a class=\"anchor\" href=\"#配置步骤\">#</a> 配置步骤</h2>\n<ol>\n<li>安装相关依赖</li>\n</ol>\n<p>因为我是在现有 Vue Admin Plus 后台框架的基础上配置 Cesium 的，所以就省略了新建项目的步骤，直接安装依赖，如下</p>\n<pre><code>cnpm install Cesium\ncnpm install @types/cesium\ncnpm install copy-webpack-plugin -D\ncnpm install @types/copy-webpack-plugin -D\n</code></pre>\n<p>这里我用 cnpm 安装，是因为 Vue Admin Plus 这个框架依赖就是用 cnpm 安装的，用 npm 安装可能会报  <code>Error: command failed: npm install --loglevel error</code>  的错误～～</p>\n<p>安装 cnpm 可以用如下命令安装</p>\n<pre><code># powershell 管理员模式安装\nnpm install cnpm -g --registry=https://registry.npmmirror.com\n\n# powershell 获取管理员权限，选择A\nset-ExecutionPolicy RemoteSigned\n</code></pre>\n<ol start=\"2\">\n<li>配置 vue.config.js 文件</li>\n</ol>\n<p>因为我用的  <code>copy-webpack-plugin</code>  是最新版的，而最新版的导入语法有点变化，所以参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI3NjAxNy9hcnRpY2xlL2RldGFpbHMvMTE5Mzc5OTY3\">这篇博文</span> 的配置要有点变化，更改后如下</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">CopyWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    patterns<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            from<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>cesiumSource<span class=\"token punctuation\">,</span> <span class=\"token string\">'Workers'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            to<span class=\"token operator\">:</span> <span class=\"token string\">'Workers'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            from<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>cesiumSource<span class=\"token punctuation\">,</span> <span class=\"token string\">'Assets'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            to<span class=\"token operator\">:</span> <span class=\"token string\">'Assets'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            from<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>cesiumSource<span class=\"token punctuation\">,</span> <span class=\"token string\">'Widgets'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            to<span class=\"token operator\">:</span> <span class=\"token string\">'Widgets'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            from<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>cesiumSource<span class=\"token punctuation\">,</span> <span class=\"token string\">'ThirdParty/Workers'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            to<span class=\"token operator\">:</span> <span class=\"token string\">'ThirdParty/Workers'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack</span><span class=\"token punctuation\">.</span><span class=\"token function\">DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token constant\">CESIUM_BASE_URL</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>配置 main.ts 文件</li>\n</ol>\n<p>如果按照下面这样导入</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @description 导入 Cesium</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'cesium/Source/Widgets/widgets.css'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> Cesium <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cesium/Source/Cesium'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>会报错找不到模块的，如下</p>\n<pre><code> error  in ./src/main.ts\n\nModule not found: Error: Package path ./Source/Widgets/widgets.css is not exported from package E:\\code\\javascript\\city-analysis-platform\\node_modules\\cesium (see exports field in E:\\code\\javascript\\city-analysis-platform\\node_modules\\cesium\\package.json)\n\n error  in ./src/main.ts\n\nModule not found: Error: Package path ./Source/Cesium is not exported from package E:\\code\\javascript\\city-analysis-platform\\node_modules\\cesium (see exports field in E:\\code\\javascript\\city-analysis-platform\\node_modules\\cesium\\package.json)\n</code></pre>\n<p>在查阅了一番资料后，终于参考了这篇：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVyLmluay90aGluay93aHktZGlkLWl0LWZhaWwtdG8taW1wb3J0LWNzcy1vZi1jZXNpdW0taW4tdGhlLXBhY2thZ2luZy10b29sLmh0bWw=\">Why did it fail to import css of Cesium in the packaging tool</span> 找到了解决办法～～</p>\n<p>解决办法就是首先在  <code>node_modules/cesium</code>  目录下找到它的  <code>package.json</code>  文件，然后修改 exports 字段如下</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"exports\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"./package.json\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./package.json\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\".\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token property\">\"require\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./index.cjs\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token property\">\"import\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./Source/Cesium.js\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"./Source/Widgets/widgets.css\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./Source/Widgets/widgets.css\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>主要就是添加了  <code>&quot;./Source/Widgets/widgets.css&quot;: &quot;./Source/Widgets/widgets.css&quot; </code>  才能让我们在项目中找到 Cesium 的 css 文件</p>\n<p>修改完这个之后，再次在  <code>main.ts</code>  文件中导入 Cesium，如下</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * @description 导入 Cesium</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'cesium/Source/Widgets/widgets.css'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Cesium <span class=\"token keyword\">from</span> <span class=\"token string\">'cesium'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// const Cesium = require('cesium/Source/Cesium')</span></pre></td></tr></table></figure><p>然后启动项目，应该就不会报错啦～～</p>\n<ol start=\"4\">\n<li>编写测试页面</li>\n</ol>\n<p>在  <code>src/views</code>  目录下新建个  <code>map.vue</code>  文件，编写如下</p>\n<figure class=\"highlight ts\"><figcaption data-lang=\"TypeScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"cesiumContainer\"</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"map-container\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> defineComponent<span class=\"token punctuation\">,</span> reactive<span class=\"token punctuation\">,</span> toRefs <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    name<span class=\"token operator\">:</span> <span class=\"token string\">'Map'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reactive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">const</span> Cesium <span class=\"token operator\">=</span> <span class=\"token function\">inject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$Cesium'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">let</span> viewer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cesium</span><span class=\"token punctuation\">.</span><span class=\"token function\">Viewer</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cesiumContainer'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          imageryProvider<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cesium</span><span class=\"token punctuation\">.</span><span class=\"token function\">ArcGisMapServerImageryProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            url<span class=\"token operator\">:</span> <span class=\"token string\">'https://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>viewer<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token operator\">...</span><span class=\"token function\">toRefs</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  #cesiumContainer <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    width<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    height<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    padding<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    margin<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></pre></td></tr></table></figure><p>配置好路由之后，启动项目，跳转到指定路由，就能看到一个蓝色的小破球啦，bingo</p>\n<p><img data-src=\"http://image.aayu.today/2022/04/21/62fe3f2f3a751.png\" alt=\"\" /></p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzI3NjAxNy9hcnRpY2xlL2RldGFpbHMvMTE5Mzc5OTY3\">vue3+cesium+ts 全过程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVyLmluay90aGluay93aHktZGlkLWl0LWZhaWwtdG8taW1wb3J0LWNzcy1vZi1jZXNpdW0taW4tdGhlLXBhY2thZ2luZy10b29sLmh0bWw=\">Why did it fail to import css of Cesium in the packaging tool</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Nlc2l1bUdTL2Nlc2l1bS9pc3N1ZXMvOTIxMg==\">Can not import widgets.css file not exported from package.json #9212</span></li>\n</ul>\n",
            "tags": [
                "GIS开发笔记",
                "Cesium",
                "学习笔记",
                "Cesium"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/machine-learning/time-series/20220413/",
            "url": "https://blog.aayu.today/artificial-intelligence/machine-learning/time-series/20220413/",
            "title": "时间序列的线性回归",
            "date_published": "2022-04-13T01:15:13.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>预测可能是机器学习在现实世界中最常见的应用。企业预测产品需求，政府预测经济和人口增长，气象学家预测天气。对未来事物的理解是整个科学、政府和行业 (更不用说我们的个人生活了！) 的迫切需求，这些领域的从业者正越来越多地应用机器学习来满足这一需求。</p>\n<p>时间序列预测是一个有着悠久历史的广泛领域。本课程的重点是现代机器学习方法在时间序列数据上的应用，以产生最准确的预测。本课程的课程灵感来自于过去 Kaggle 预测比赛中获胜的解决方案，但将适用于准确预测是优先考虑的任何时候。</p>\n<p>后续待更...</p>\n",
            "tags": [
                "人工智能",
                "机器学习",
                "时间序列分析",
                "时间序列分析"
            ]
        },
        {
            "id": "https://blog.aayu.today/linux/ubuntu/20220312-3/",
            "url": "https://blog.aayu.today/linux/ubuntu/20220312-3/",
            "title": "Ubuntu挂载WebDAV",
            "date_published": "2022-03-12T11:15:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>WebDAV 是个好东西，尤其是配个自己的 NAS 使用，熟悉以后就再也离不开它啦，这篇博客教小伙伴们如何在 Ubuntu 18.04 下挂载 WebDAV~</p>\n<h2 id=\"本机环境\"><a class=\"anchor\" href=\"#本机环境\">#</a> 本机环境</h2>\n<ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h2 id=\"操作步骤\"><a class=\"anchor\" href=\"#操作步骤\">#</a> 操作步骤</h2>\n<ol>\n<li>安装 davfs2</li>\n</ol>\n<pre><code>apt-get -y install davfs2\n</code></pre>\n<ol start=\"2\">\n<li>安装完 davfs2 之后执行</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span> -i <span class=\"token string\">'s/# use_locks       1/use_locks       0/g'</span> /etc/davfs2/davfs2.conf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"你的WebDAV地址 用户名 密码\"</span> <span class=\"token operator\">>></span> /etc/davfs2/secrets <span class=\"token comment\">#保存用户名密码，以后可以直接免密码挂载</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mount.davfs 你的WebDAV地址 你想要挂载到的目录</pre></td></tr></table></figure><p>即可成功挂载</p>\n<p>注意 1：挂载目录必须提前创建好！<br />\n注意 2：如果你不执行第二句保存用户名密码，那么你以后挂载的时候都会要求输入用户名密码！</p>\n<h2 id=\"开机自动挂载\"><a class=\"anchor\" href=\"#开机自动挂载\">#</a> 开机自动挂载</h2>\n<p>如果想要开机自动挂载，则再执行</p>\n<pre><code>echo &quot;mount.davfs 你的WebDAV地址 你想要挂载到的目录&quot; &gt;&gt; /etc/rc.local\n</code></pre>\n<p>执行完此句之后检查一下  <code>/etc/rc.local</code>  文件，看看是否有  <code>exit 0</code>  这句。如果有的话，要手动把上面命令添加进去的语句放到  <code>exit 0</code>  之前。</p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2UuYmVzdC9saW51eC1tZW1vL21vdW50LXdlYmRhdi5odG1s\">[WebDAV] 如何在各个平台下挂载 WebDAV</span></li>\n</ul>\n",
            "tags": [
                "Linux进阶之路",
                "Ubuntu",
                "Ubuntu"
            ]
        },
        {
            "id": "https://blog.aayu.today/linux/ubuntu/20220312-2/",
            "url": "https://blog.aayu.today/linux/ubuntu/20220312-2/",
            "title": "Ubuntu18.04更换国内源",
            "date_published": "2022-03-12T11:10:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>Ubuntu 本身的源使用的是国外的源，下载速度比较慢，不像 CentOS 一样 yum 安装的时候对镜像站点进项选择，所以选择了更换成国内的源。</p>\n<p>以下内容整合自网络</p>\n<h2 id=\"操作步骤\"><a class=\"anchor\" href=\"#操作步骤\">#</a> 操作步骤</h2>\n<ol>\n<li>备份 /etc/apt/sources.list 文件</li>\n</ol>\n<pre><code>mv /etc/apt/sources.list /etc/apt/sourses.list.backup\n</code></pre>\n<ol start=\"2\">\n<li>新建 /etc/apt/sources.list 文件并添加以下内容</li>\n</ol>\n<pre><code>#163源\ndeb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse\n</code></pre>\n<ol start=\"3\">\n<li>更改完成之后执行以下命令</li>\n</ol>\n<pre><code># apt update\n# apt upgrade\n</code></pre>\n<h2 id=\"其他的一些apt命令\"><a class=\"anchor\" href=\"#其他的一些apt命令\">#</a> 其他的一些 apt 命令</h2>\n<pre><code>sudo apt-get update  更新源\nsudo apt-get install package 安装包\nsudo apt-get remove package 删除包\nsudo apt-cache search package 搜索软件包\nsudo apt-cache show package  获取包的相关信息，如说明、大小、版本等\nsudo apt-get install package --reinstall  重新安装包\nsudo apt-get -f install  修复安装\nsudo apt-get remove package --purge 删除包，包括配置文件等\nsudo apt-get build-dep package 安装相关的编译环境\nsudo apt-get upgrade 更新已安装的包\nsudo apt-get dist-upgrade 升级系统\nsudo apt-cache depends package 了解使用该包依赖那些包\nsudo apt-cache rdepends package 查看该包被哪些包依赖\nsudo apt-get source package  下载该包的源代码\nsudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包\nsudo apt-get check 检查是否有损坏的依赖\n</code></pre>\n<h2 id=\"其他几个国内的源\"><a class=\"anchor\" href=\"#其他几个国内的源\">#</a> 其他几个国内的源</h2>\n<h3 id=\"中科大源\"><a class=\"anchor\" href=\"#中科大源\">#</a> 中科大源</h3>\n<pre><code>#中科大源\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n</code></pre>\n<h3 id=\"阿里云源\"><a class=\"anchor\" href=\"#阿里云源\">#</a> 阿里云源</h3>\n<pre><code>deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n</code></pre>\n<h3 id=\"清华源\"><a class=\"anchor\" href=\"#清华源\">#</a> 清华源</h3>\n<pre><code>deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse\n</code></pre>\n",
            "tags": [
                "Linux进阶之路",
                "Ubuntu",
                "Ubuntu"
            ]
        },
        {
            "id": "https://blog.aayu.today/linux/ubuntu/20220312/",
            "url": "https://blog.aayu.today/linux/ubuntu/20220312/",
            "title": "Ubuntu-解决2.5G网卡驱动问题",
            "date_published": "2022-03-12T11:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>由于 2.5G 网卡较新，各 linux 发行版的通用驱动已不适用，新装的系统会出现无法上网问题，由于国内网络环境去 Realtek 官网很难下载到驱动文件，故本文提供 github 上的 2.5G Ethernet LINUX driver r8125 for kernel up to 5.6 的版本驱动文件 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1ZpdG8tVHUvcjgxMjU=\">r8125-9.003.05.tar.bz2</span> 各位可以自行下载，并结合此教程安装。</p>\n<h2 id=\"本机环境\"><a class=\"anchor\" href=\"#本机环境\">#</a> 本机环境</h2>\n<ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h2 id=\"安装步骤\"><a class=\"anchor\" href=\"#安装步骤\">#</a> 安装步骤</h2>\n<ol>\n<li>准备编译环境</li>\n</ol>\n<pre><code>sudo apt-get install --reinstall linux-headers-$(uname -r) linux-headers-generic build-essential dkms\n</code></pre>\n<ol start=\"2\">\n<li>解压源码到目录 /usr/src</li>\n</ol>\n<pre><code>sudo tar xvf r8125-9.003.05.tar.bz2 -C /usr/src\n</code></pre>\n<ol start=\"3\">\n<li>添加一个 dkms.conf 到 /usr/src/r8125-9.003.05/ 目录</li>\n</ol>\n<pre><code># 先进入目录，方便后续操作\ncd /usr/src/r8125-9.003.05/\n# 创建dkms配置文件\ntouch dkms.conf\n</code></pre>\n<ol start=\"4\">\n<li>编辑 dkms.conf 文件添加如下内容</li>\n</ol>\n<pre><code>PACKAGE_NAME=Realtek_r8125\nPACKAGE_VERSION=9.003.05\n \nDEST_MODULE_LOCATION=/updates/dkms\nBUILT_MODULE_NAME=r8125\nBUILT_MODULE_LOCATION=src/\n \nMAKE=&quot;'make' -C src/ all&quot;\nCLEAN=&quot;'make' -C src/ clean&quot;\nAUTOINSTALL=&quot;yes&quot;\n</code></pre>\n<ol start=\"5\">\n<li>编译安装</li>\n</ol>\n<pre><code>sudo dkms add -m r8125 -v 9.003.05\nsudo dkms build -m r8125 -v 9.003.05\nsudo dkms install -m r8125 -v 9.003.05\nsudo depmod -a\nsudo modprobe r8125\n</code></pre>\n<p>验证安装结果，运行如下命令即可看到 enxxx 的有线网接口</p>\n<pre><code>ifconfig -a\n</code></pre>\n<p>后记：这种方法安装完后，后续如果有内核版本升级，仍需重新编译安装，否则驱动无法运行。执行下方代码重新安装</p>\n<pre><code>sudo dkms remove r8125/9.003.05 --all\n</code></pre>\n<p>但每次出问题都去执行代码太过繁琐，建议在安装目录下（本文是 /usr/src/r8125-9.003.05/）将命令打包成可执行文件 <span class=\"exturl\" data-url=\"aHR0cDovL2ZpeE5ldHdvcmtDYXJkLnNo\">fixNetworkCard.sh</span></p>\n<ol>\n<li>创建文件，赋予可执行权限，并切链接到用户目录～方便使用</li>\n</ol>\n<pre><code># 确保在安装目录\ncd /usr/src/r8125-9.003.05/\n# 创建文件名授权\ntouch fixNetWorkCard.sh\nchmod 777 fixNetWorkCard.sh\n# 回到用户目录创建软连接\ncd ~\nln -s /usr/src/r8125-9.003.05/fixNetWorkCard.sh ./\n</code></pre>\n<ol start=\"2\">\n<li>编辑 <span class=\"exturl\" data-url=\"aHR0cDovL2ZpeE5ldHdvcmtDYXJkLnNo\">fixNetworkCard.sh</span> 文件粘贴以下内容</li>\n</ol>\n<pre><code>dkms remove r8125/9.003.05 --all\ndkms install -m r8125 -v 9.003.05\ndepmod -a\nmodprobe r8125\n</code></pre>\n<ol start=\"3\">\n<li>下次网卡驱动失效时，进行快速修复</li>\n</ol>\n<pre><code>cd ~\nsudo ./fixNetworkCard.sh\n</code></pre>\n<h2 id=\"可能出现的问题\"><a class=\"anchor\" href=\"#可能出现的问题\">#</a> 可能出现的问题</h2>\n<h3 id=\"modprobe-加载模块时-出现权限不允许提醒operation-not-permitted\"><a class=\"anchor\" href=\"#modprobe-加载模块时-出现权限不允许提醒operation-not-permitted\">#</a> modprobe 加载模块时 出现权限不允许提醒；Operation not permitted</h3>\n<p>这是由于 secure boot 的原因。如果 secure boot 是开启状态，内核不能安装自己定制的模块。</p>\n<p>解决方法：我们进入 BIOS 把 secure boot 选项关掉；secure boot 大概的作用时为了保护内核的启动安全。</p>\n<p>linux secure boot 状态查询：mokutil --sb-state<br />\n<img data-src=\"http://image.aayu.today/2022/03/12/3501b5b09bf75.png\" alt=\"\" /></p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RodW5kZXJfay9hcnRpY2xlL2RldGFpbHMvMTA2NDk0NTEx\">Ubuntu 安装 Realtek R8125 驱动</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Bvb3JndXlfYW9zL2FydGljbGUvZGV0YWlscy8xMDgyNTA4Mzg=\">解决 linux 2.5G 网卡驱动问题</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veHV5YW93ZW4vcC9saW51eC1zZWN1cmUtYm9vdC1kaXNhYmxlLmh0bWw=\">modprobe 加载模块时 出现权限不允许提醒；Operation not permitted</span></li>\n</ul>\n",
            "tags": [
                "Linux进阶之路",
                "Ubuntu",
                "Ubuntu"
            ]
        },
        {
            "id": "https://blog.aayu.today/basic-subjects/mathematics/advanced-mathematics/20220312/",
            "url": "https://blog.aayu.today/basic-subjects/mathematics/advanced-mathematics/20220312/",
            "title": "高等数学-常用公式",
            "date_published": "2022-03-11T16:00:00.000Z",
            "content_html": "<p><img data-src=\"http://image.aayu.today/2022/03/05/e8f45bd5ba680.jpg\" alt=\"\" /></p>\n<p><img data-src=\"http://image.aayu.today/2022/03/12/f4c3e2d6045a0.jpg\" alt=\"\" /></p>\n<p><img data-src=\"http://image.aayu.today/2022/03/12/186c8c62e410f.jpg\" alt=\"\" /></p>\n<p><img data-src=\"http://image.aayu.today/2022/03/12/60421e57c4f60.jpg\" alt=\"\" /></p>\n<p><img data-src=\"http://image.aayu.today/2022/03/12/aa7d9101fe782.jpg\" alt=\"\" /></p>\n<p><img data-src=\"http://image.aayu.today/2022/03/12/52bbf53b0c6ea.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "基础学科",
                "数学",
                "高等数学",
                "高等数学"
            ]
        },
        {
            "id": "https://blog.aayu.today/leisure/mood/20220311/",
            "url": "https://blog.aayu.today/leisure/mood/20220311/",
            "title": "心情-放风筝",
            "date_published": "2022-03-10T16:00:00.000Z",
            "content_html": "<h1 id=\"心情-放风筝\"><a class=\"anchor\" href=\"#心情-放风筝\">#</a> 心情 - 放风筝</h1>\n<p>依稀记得小时候放风筝时的开心模样，没想到时隔今日还能再放起来，好开心哈哈Ｏ(≧▽≦)Ｏ</p>\n<p><img data-src=\"http://image.aayu.today/2022/03/12/dfeeff448ff49.jpg\" alt=\"\" /></p>\n<p><img data-src=\"http://image.aayu.today/2022/03/12/a5e6b7de7ea05.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "清风明月",
                "心情",
                "心情"
            ]
        },
        {
            "id": "https://blog.aayu.today/nas/synology/20220114/",
            "url": "https://blog.aayu.today/nas/synology/20220114/",
            "title": "兰空图床（Lsky）搭配PicGo客户端进行图片快速上传",
            "date_published": "2022-01-13T16:00:00.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>前几天成功的实现了通过黑群晖 NAS 搭建自己的图床，在体验了几天后，发现兰空图床是真的好好用呀～界面美观、操作简单，也没有那些让人困惑的操作或功能～～</p>\n<p>而我之前的博客所用的图床最开始是白嫖的 GitHub，后面又用了腾讯云 COS 图床，哎总的来说，体验都不是很好，GitHub 图床就算是配置了 CDN 也会有访问缓慢甚至访问不了的情况，而腾讯云 COS 图床又是收费的，虽然费用也不贵，但总是不那么舒服。终于，在接触了 NAS 后，这个问题就完美的解决了，而且数据存储在自己的手上，也是那么的让人安心～～</p>\n<p>图床已经配置好啦，那么就要配置另一款上传图片的利器了，那就是  <code>PicGo</code></p>\n<p>PicGo 是一个可以将图片方便且快速的上传至图床的一个小工具。而我平常在写博客的过程中，会时不时的截取一些图片，截取图片我们可以通过 QQ 自带的  <code>Ctrl + Alt + A</code>  来截图，截完以后图片就被保存到剪切板了，接下来，只需要配置好 PicGo，通过 PicGo 上传图片的快捷键，就可以直接将剪切板里的图片上传到自己的图床，并且返回一个 Markdown 格式的图片链接到粘贴板，直接粘贴到博客里，实现图片的在线浏览真的是不要太方便～～</p>\n<p>接下来的这个教程就是教小伙伴们如何配置 PicGo，来实现快速上传图片到我们的兰空图床，教程也是很简单的啦～～</p>\n<h2 id=\"教程\"><a class=\"anchor\" href=\"#教程\">#</a> 教程</h2>\n<h3 id=\"安装-picgo-的-lskypro-扩展插件\"><a class=\"anchor\" href=\"#安装-picgo-的-lskypro-扩展插件\">#</a> 安装 PicGo 的 lskypro 扩展插件</h3>\n<p>PicGo 可以直接在网上找安装包安装，安装好以后，打开 PciGo 客户端，如下图</p>\n<p><img data-src=\"http://image.aayu.today/2022/01/15/24be88fb5965e.png\" alt=\"\" /></p>\n<p>点击插件设置，然后在里面搜索 lskypro，搜索到插件后点击安装即可安装 lskypro 扩展插件，如下图</p>\n<p><img data-src=\"http://image.aayu.today/2022/01/15/3fad8291ee96f.png\" alt=\"\" /></p>\n<h3 id=\"配置-lskypro\"><a class=\"anchor\" href=\"#配置-lskypro\">#</a> 配置 lskypro</h3>\n<p>首先打开兰空图床的后台管理界面，在  <code>系统管理 -&gt; 系统设置 -&gt; 其他配置</code>  里面，打开  <code>开启 API</code>  的开关，如下图</p>\n<p><img data-src=\"http://image.aayu.today/2022/01/15/a3da4ad7162b4.png\" alt=\"\" /></p>\n<p>然后可以在左侧菜单栏中找到  <code>接口</code>  设置，可以在里面详细查看接口的相关说明，主要需要关注的是图片上传的  <code>URL</code>  参数，如下图所示</p>\n<p><img data-src=\"http://image.aayu.today/2022/01/15/f228494efa5ba.png\" alt=\"\" /></p>\n<p>然后点击左侧  <code>设置</code> ，在里面找到自己的上传 Token，如下图</p>\n<p><img data-src=\"http://image.aayu.today/2022/01/15/fc5ab2a3d2734.png\" alt=\"\" /></p>\n<p>接下来就可以在 PciGo 里面配置 lskypro 插件了，如下图，将刚刚找到的图片上传 URL 和 Token 设置进去</p>\n<p><img data-src=\"http://image.aayu.today/2022/01/15/8154e0af5e9a1.png\" alt=\"\" /></p>\n<p>点击确定，点击设置为默认图床，设置完成～～</p>\n<h3 id=\"其他设置\"><a class=\"anchor\" href=\"#其他设置\">#</a> 其他设置</h3>\n<p>以上设置好以后，就可以在 PciGo 的上传区上传一张图片测试一下啦，下面在推荐一下其他的设置，首先 PicGo 的默认上传快捷键是  <code>Ctrl + Shift + P</code> ，个人感觉不是很方便，所以我将上传快捷键改成了  <code>Ctrl + Shift + Z</code> ，这样我可以首先用 QQ 自带的截图工具  <code>Ctrl + Alt + A</code> ，截图自己想要的图片后，再直接单手按  <code>Ctrl + Shift + Z</code>  就可以直接把刚刚截的图片上传到自己的图床了，简直不要太方便～</p>\n<p>修改快捷键可以在 PicGo 的设置中设置，同时我还会开启  <code>开机自启</code>  和  <code>时间戳重命名</code>  这两个设置，时间戳重命名可以直接将刚刚用 QQ 截取的乱七八糟文件名改成当前的时间，看起来就舒服很多啦，设置如下图</p>\n<p><img data-src=\"http://image.aayu.today/2022/01/15/2a7bd851eef7f.png\" alt=\"\" /></p>\n<p>至此，我们的兰空图床（Lsky）搭配 PicGo 客户端进行图片快速上传就设置好啦，接下来愉快的玩耍吧～～</p>\n",
            "tags": [
                "我的NAS捣鼓笔记",
                "群晖",
                "NAS",
                "Synology",
                "Lsky",
                "PicGo"
            ]
        }
    ]
}