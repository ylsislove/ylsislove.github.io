{
    "version": "https://jsonfeed.org/version/1",
    "title": "学无止境",
    "subtitle": "阿宇的可爱博客",
    "icon": "https://blog.aayu.today/images/favicon.ico",
    "description": "真理和热爱是吾永生的追求",
    "home_page_url": "https://blog.aayu.today",
    "items": [
        {
            "id": "https://blog.aayu.today/android/20230207/",
            "url": "https://blog.aayu.today/android/20230207/",
            "title": "Android Studio和Unity3D联合开发环境配置",
            "date_published": "2023-02-06T17:27:40.000Z",
            "content_html": "<h2 id=\"android-studio安装\"><a class=\"anchor\" href=\"#android-studio安装\">#</a> Android Studio 安装</h2>\n<p>这里我使用的版本是 2021.2.1.15。放个百度网盘链接，需要的自取</p>\n<p>链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMUxGcEhXUXRRM1JCWXNZeHpMZ1FFd3c=\">https://pan.baidu.com/s/1LFpHWQtQ3RBYsYxzLgQEww</span><br />\n 提取码：wfjq</p>\n<h2 id=\"android-sdk配置\"><a class=\"anchor\" href=\"#android-sdk配置\">#</a> Android SDK 配置</h2>\n<div class=\"note info\">\n<p>如果发现自己 Android SDK 无法刷新出新的东西，表明自己的网络可能不太行。推荐大家去「 <span class=\"exturl\" data-url=\"aHR0cHM6Ly94bi0tNGdxNjJmNTJnZHNzLmNvbS8jL3JlZ2lzdGVyP2NvZGU9RHlkSkJ1dlc=\">一元机场</span> 」平台订阅，每月 500G 流量月均 0.9 元，性价比拉满～</p>\n</div>\n<p>代理配置的过程，可以根据平台教程配置好「 Clash for Windows 」，配置好主程序默认端口，如下图，然后在 Android Studio 上配置好代理，如下图，即可～</p>\n<p class=\"gallery\" data-height=\"240\"><img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070143758.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070146621.png\" alt=\"\" /></p>\n<p>可以点击 Check connection 测试下 <code>https://dl.google.com/android/repository/repository2-3.xml</code>  能否访问成功，可以的话就表示代理没问题～</p>\n<p>确认自己手机的 Android 版本，例如，手机的 Android 版本是 10，就勾选这几项<br />\n<img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070130739.png\" alt=\"\" width=\"800px\" /></p>\n<div class=\"note warning\">\n<p>注意，默认安装的 Android SDK（例如 Android SDK Platform 33）不能删除，否则可能会有未知 Bug</p>\n</div>\n<p>然后在 SDK Tools，安装如下几项，可保后面与 Unity3D 联调不出奇奇怪怪的 Bug~</p>\n<p class=\"gallery\" data-height=\"240\"><img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070137372.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070139356.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070413902.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070140863.png\" alt=\"\" /></p>\n<p>创建一个空项目，当下方进度条的 Gradle 显示 Successful，表明 Android Studio 的配置可以初告一个段落了～</p>\n<p>哦补充一个，在下图这里记得设置 JDK 为 8</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070336910.png\" alt=\"\" width=\"800px\" /></p>\n<h2 id=\"unity3d配置\"><a class=\"anchor\" href=\"#unity3d配置\">#</a> Unity3D 配置</h2>\n<p>以安装 2021 最新稳定版为例，在 Unity Hub 上安装如下</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070203190.png\" alt=\"\" width=\"800px\" /></p>\n<p>创建一个新项目，首先在「 File -&gt; Build Settings -&gt; Player Settings 」里设置下公司名和项目名，如下，unity 会自动组合成包名</p>\n<p class=\"gallery\" data-height=\"300\"><img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070217872.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070218601.png\" alt=\"\" /></p>\n<p>然后在「 Editor -&gt; Preference 」里正确设置 JDK，Android SDK 和 NDK，然后打开下 Gradle 的路径，记住 Unity 的 Gradle 的版本是多少，后面 Android Studio 联调时，需要和 Unity 保持一致</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070221586.png\" alt=\"\" width=\"800px\" /></p>\n<h2 id=\"创建android密钥文件\"><a class=\"anchor\" href=\"#创建android密钥文件\">#</a> 创建 Android 密钥文件</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>keytool -genkey -alias 密钥库名称 -keyalg RSA -validity 有效时间 -keystore 密钥库文件名</pre></td></tr></table></figure><p><img data-src=\"https://image.aayu.today/uploads/2023/02/07/202302070238825.png\" alt=\"\" /></p>\n<p>密钥文件将生成在运行命令的所在目录下～</p>\n",
            "tags": [
                "Android",
                "Unity3D",
                "Android Studio"
            ]
        },
        {
            "id": "https://blog.aayu.today/front-end/basic/vue3+vite+ts%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "url": "https://blog.aayu.today/front-end/basic/vue3+vite+ts%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",
            "title": "vue3+vite+ts学习笔记",
            "date_published": "2023-01-17T09:21:44.000Z",
            "content_html": "<h2 id=\"初始化一个前端项目\"><a class=\"anchor\" href=\"#初始化一个前端项目\">#</a> 初始化一个前端项目</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> init vite@latest</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># npm init vue@latest</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> i</pre></td></tr></table></figure><h2 id=\"初始化一个nodejs服务端项目\"><a class=\"anchor\" href=\"#初始化一个nodejs服务端项目\">#</a> 初始化一个 NodeJS 服务端项目</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> ts-node -g</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> init -y</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @types/node -D</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> express -S</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @types/express -D</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> axios -S</pre></td></tr></table></figure><p>正在学习中...</p>\n<h2 id=\"学习链接\"><a class=\"anchor\" href=\"#学习链接\">#</a> 学习链接</h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWRTNHkxeTd2ZA==\">Vue3 + vite + Ts + pinia + 实战 + 源码 +electron（82/111）</span></label></li>\n</ul>\n",
            "tags": [
                "前端系列",
                "Vue",
                "vue3",
                "vite",
                "typescript"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/machine-learning/basic/20230103/",
            "url": "https://blog.aayu.today/artificial-intelligence/machine-learning/basic/20230103/",
            "title": "召回率（recall）和精度（precision）",
            "date_published": "2023-01-03T08:09:33.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>识别精度主要是由 <code>召回率（recall）和精度（precision）</code> 表示的，通过绘制 precision-recall 曲线，该曲线下方的面积越大，识别精度也就越高，反之越低。</p>\n<h2 id=\"数据定义\"><a class=\"anchor\" href=\"#数据定义\">#</a> 数据定义</h2>\n<p>在一个数据集检测中，会产生四类检测结果：TP、TN、FP、FN</p>\n<ul>\n<li>T：true 表示正确</li>\n<li>F：false 表示错误</li>\n<li>P：positive 表示积极的，看成正例</li>\n<li>N：negative 表示消极的，看成负例</li>\n</ul>\n<p>排列组合，即可得到以下结果：</p>\n<ul>\n<li>TP：预测为 P（正例），预测对了，本来是正样本，检测为正样本（真阳性）</li>\n<li>TN：预测为 N（负例），预测对了，本来是本样本，检测为负样本（真阴性）</li>\n<li>FP：预测为 P（正例），预测错了，本来是负样本，检测为正样本（假阳性）</li>\n<li>FN：预测为 N（负例），预测错了，本来是正样本，检测为负样本（假阴性）</li>\n</ul>\n<p>合计：</p>\n<ul>\n<li>TP+FP+TN+FN：样本总数</li>\n<li>TP+FN：实际正样本数</li>\n<li>TP+FP：预测结果为正样本的总数，包括预测正确的和错误的</li>\n<li>FP+TN：实际负样本数</li>\n<li>TN+FN：预测结果为负样本的总数，包括预测正确的和错误的</li>\n</ul>\n<h2 id=\"召回率recall\"><a class=\"anchor\" href=\"#召回率recall\">#</a> 召回率（Recall）：</h2>\n<div class=\"note info\">\n<p>表示的是样本中的正例有多少被预测正确了（找的全），即所有正例中被正确预测出来比例</p>\n</div>\n<p>用途：用于评估检测器对所有待检测目标的检测覆盖率</p>\n<p>针对数据集中所有正例（TP+FN）而言， <code>模型正确判断出正例（TP）占数据集中所有正例的比例</code> 。FN 表示被模型误认为是负例但实际是正例的数据， <code>召回率也叫做查全率</code> 。以物体检测为例，我们往往把图片中的物体作为正例，此时 <code>召回率高代表着模型可以找出图片中更多的物体</code></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>−</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Recall=\\frac{TP}{TP-FN}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1296600000000003em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h2 id=\"精确率precision\"><a class=\"anchor\" href=\"#精确率precision\">#</a> 精确率（Precision）</h2>\n<div class=\"note info\">\n<p>表示的是预测为正的样本中有多少是真正的正样本（找的对），即预测结果中真正的正例的比例</p>\n</div>\n<p>用途：用于评估检测器在检测成功基础上的正确率</p>\n<p>针对模型判断出的所有正例（TP+FP）而言，其中真正例（TP）占的比例。精确率也叫查准率，还是以物体检测为例，精确率高表示模型检测出的物体中大部分是正确的，只有少数不是物体的对象被当作物体</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Precision=\\frac{TP}{TP+FP}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1296600000000003em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>也就是说， <code>recall表示在整个检测结果中有用部分占整个数据集有用部分的比重，precision表示在整个检测结果中有用部分占整个检测结果为有用的比重</code> 。虽然希望两个指标都能越高越好，但是这两个指标在某些情况下是存在矛盾的，所以在实际检测场景中需要根据自己的判断选择取舍或绘制 precision-recall 曲线（简称 PR 曲线）帮助分析</p>\n<h2 id=\"准确率accuracy\"><a class=\"anchor\" href=\"#准确率accuracy\">#</a> 准确率（Accuracy）</h2>\n<div class=\"note info\">\n<p>表示模型判断正确的数据（TP+TN）占总数据的比例</p>\n</div>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mi>c</mi><mi>c</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Acc=\\frac{TP+TN}{TP+TN+FP+FN}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1296600000000003em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.36033em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<div class=\"note warning\">\n<p>准确率是分类问题中最简单也是最直观的评价指标，但存在明显的缺陷。比如，当负样本占 99% 时，分类器把所有样本都预测为负样本也可以获得 99% 的准确率，但这对我们的研究工作几乎没有帮助。所以，当不同类别的样本比例非常不均衡时，占比大的类别往往成为影响准确率的最主要因素。</p>\n</div>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1cxOTk1Uy9hcnRpY2xlL2RldGFpbHMvMTE0OTg4NjM3\">召回率（recall）和精度（precision）</span></li>\n</ul>\n",
            "tags": [
                "人工智能",
                "机器学习",
                "基础知识",
                "召回率",
                "精度"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/machine-learning/bn/20230101/",
            "url": "https://blog.aayu.today/artificial-intelligence/machine-learning/bn/20230101/",
            "title": "贝叶斯网络",
            "date_published": "2023-01-01T14:11:22.000Z",
            "content_html": "<h2 id=\"定义\"><a class=\"anchor\" href=\"#定义\">#</a> 定义</h2>\n<ul>\n<li>贝叶斯网络是一个 <code>有向无圈图</code> （Directed Acyclic Graph, DAG），由代表变量节点及连接这些节点有向边构成。 <code>节点代表随机变量</code> ，节点间的 <code>有向边代表了节点间的相互关系</code> （由父节点指向其子节点），用条件概率表达变量间依赖关系，没有父节点的用先验概率进行信息表达。</li>\n<li>令<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi></mrow><annotation encoding=\"application/x-tex\">G</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span></span></span></span> 为定义在<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>N</mi></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{X_1, X_2, ..., X_N\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> 上的一个贝叶斯网络，其联合概率分布可以表示为各个节点的条件概率分布的乘积：</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo><mo>=</mo><munder><mo>∏</mo><mi>i</mi></munder><msub><mi>p</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>P</mi><mi>a</mi><msub><mi>r</mi><mi>G</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(X)=\\prod_i p_i(X_i | Par_G(X_i))\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.327674em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0500050000000003em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∏</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ul>\n<li>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>a</mi><msub><mi>r</mi><mi>G</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">Par_G(X_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为节点<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">X_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的父节点，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>P</mi><mi>a</mi><msub><mi>r</mi><mi>G</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p_i(X_i | Par_G(X_i))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">a</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span> 为节点条件概率表。</li>\n</ul>\n<h2 id=\"构建贝叶斯网络前的准备\"><a class=\"anchor\" href=\"#构建贝叶斯网络前的准备\">#</a> 构建贝叶斯网络前的准备</h2>\n<ol>\n<li>我想要解决的问题是什么？</li>\n</ol>\n<div class=\"note info\">\n<p>是要进行一般的预测，还是对数据进行解释，还是要对独立条件进行探索。</p>\n</div>\n<ol start=\"2\">\n<li>针对我们的问题，尽可能采集到足够多的观测数据，或者是专业知识</li>\n<li>决定哪些观测数据是值得被建模的</li>\n<li>把观测数据变成很多取值互斥，却又完全穷尽的变量</li>\n</ol>\n<div class=\"note info\">\n<p>这种定义变量取值的方法又叫做 MECE（Mutually Exclusive, Collectively Exhaustive）分析法</p>\n</div>\n<h2 id=\"条件独立性\"><a class=\"anchor\" href=\"#条件独立性\">#</a> 条件独立性</h2>\n<p><img data-src=\"https://image.aayu.today/uploads/2023/01/02/202301021459296.png\" alt=\"\" /></p>\n<div class=\"note primary\">\n<p>关键之处在于，若已知 C 发生的情况下，B 是否发生与 A 是无关的。因为 A 是影响 C 发生的概率来影响 B，既然 C 已经发生了，B 就和 A 无关。</p>\n</div>\n<p>所以 $$P (B|A,C)=P (B|C)$$</p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXBTNHkxYTdkci8=\">贝叶斯网络基础</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWlnNHkxdjc2NC8=\">贝叶斯网络</span></li>\n</ul>\n",
            "tags": [
                "人工智能",
                "机器学习",
                "贝叶斯网络",
                "贝叶斯网络"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/basic/20221217/",
            "url": "https://blog.aayu.today/artificial-intelligence/basic/20221217/",
            "title": "Win11安装WSL2和Nvidia驱动",
            "date_published": "2022-12-17T13:09:51.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>以前捣鼓过 wsl，即 Windows 下的 Linux 子系统，但兼容性依然比不过原生的 Linux 系统，使用 cmake 等命令会出现奇怪的问题。</p>\n<p>最近听说 wsl2 出来了，而且也可以在 wsl 上安装 nvidia 显卡驱动了，有网友实测跑深度学习模型速度能比 Windows 的快一倍左右，哈哈这就必须得捣鼓捣鼓了，如果兼容性真的没问题的话，那可比虚拟机或双系统要爽多了～</p>\n<p>目前还发现，微软官网对 wsl 的使用教程也写的非常友好，推荐大家多看看官方教程，毕竟时效性可以保证～～</p>\n<p>微软 wsl 官方教程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3dpbmRvd3Mvd3NsL2luc3RhbGw=\">https://learn.microsoft.com/zh-cn/windows/wsl/install</span></p>\n<div class=\"note info\">\n<p>wsl 安装过程中可能需要科学上网，推荐大家去「 <span class=\"exturl\" data-url=\"aHR0cHM6Ly94bi0tNGdxNjJmNTJnZHNzLmNvbS8jL3JlZ2lzdGVyP2NvZGU9RHlkSkJ1dlc=\">一元机场</span> 」平台订阅，每月 500G 流量月均 0.9 元，性价比拉满～</p>\n</div>\n<h2 id=\"系统环境\"><a class=\"anchor\" href=\"#系统环境\">#</a> 系统环境</h2>\n<ul>\n<li>CPU：i5-12450</li>\n<li>内存：32G</li>\n<li>显卡：3060</li>\n<li>Windows 版本：Windows11 22H2 22621.963</li>\n</ul>\n<div class=\"note warning\">\n<p>本篇教程后面涉及到 WSL2 上的 GPU 加速，经网上帖子的建议，用最新的 win11 系统可以保证最大的成功率。如果是 win10 系统，需将 win10 升级为预览体验版本，建议谨慎折腾！</p>\n<p>没特殊需求的，都建议将系统升级为 win11 再进行尝试。</p>\n</div>\n<h2 id=\"wsl-1和wsl-2功能对比\"><a class=\"anchor\" href=\"#wsl-1和wsl-2功能对比\">#</a> WSL 1 和 WSL 2 功能对比</h2>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/12/17/202212172118749.png\" alt=\"\" width=\"800px\" /></p>\n<p>从对比图中可以看到，除非对跨 OS 的文件系统性能有要求，WSL 2 是全面优于 WSL 1 的。官方文档也建议使用 VSCode 对 WSL 中的文件进行访问和操作，所以 WSL 2 搭配 VSCode 应该是非常棒的组合～</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/12/17/202212172122761.png\" alt=\"\" width=\"800px\" /></p>\n<h2 id=\"安装wsl2\"><a class=\"anchor\" href=\"#安装wsl2\">#</a> 安装 WSL2</h2>\n<div class=\"note info\">\n<p>管理员模式下打开 PowerShell 或 Windows 命令提示符</p>\n</div>\n<p>查看可用发行版本列表</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --list --online</pre></td></tr></table></figure><p>可以看到有 <code>Ubuntu-20.04</code>  这个发行版本，正是我们需要的～</p>\n<p>安装 <code>Ubuntu-20.04</code>  发行版</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wsl --install -d Ubuntu-20.04</pre></td></tr></table></figure><p>这里默认安装的就是 wsl2，如果对 wsl1 有需求，可以查阅官方文档哦，有很详尽的介绍～</p>\n<p>安装大概花费 5~10 分钟左右，视电脑配置和网络状况，耐心等待即可～</p>\n<p>提示安装成功后，重启电脑即可完成安装。重启后会默认弹出 Linux powershell，设置完用户名和密码，安装正式完成，如下图～</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/12/17/202212172134452.png\" alt=\"\" width=\"800px\" /></p>\n<h2 id=\"更新和升级包\"><a class=\"anchor\" href=\"#更新和升级包\">#</a> 更新和升级包</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade</pre></td></tr></table></figure><h2 id=\"配置vscode\"><a class=\"anchor\" href=\"#配置vscode\">#</a> 配置 VSCode</h2>\n<p>在 VSCode 中安装「 Remote Development 」扩展。除了远程 - SSH 和开发容器扩展，此扩展包还包括 WSL 扩展，使你能够在容器、远程计算机上或 WSL 中打开任何文件夹。</p>\n<p>可以通过在 WSL2 命令行中输入 <code>code .</code>  就可以直接用 VSCode 打开 Linux 中的文件夹进行开发了～</p>\n<h2 id=\"配置miniconda\"><a class=\"anchor\" href=\"#配置miniconda\">#</a> 配置 MiniConda</h2>\n<h3 id=\"安装miniconda\"><a class=\"anchor\" href=\"#安装miniconda\">#</a> 安装 MiniConda</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://repo.anaconda.com/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh</pre></td></tr></table></figure><p>运行安装脚本</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">bash</span> Miniconda3-py39_4.12.0-Linux-x86_64.sh</pre></td></tr></table></figure><p>一直按回车，直到浏览完用户协议后输入 <code>yes</code> 。再次按回车使用默认安装位置，然后再次输入 <code>yes</code>  选择初始化 miniconda，初始化完成即安装成功</p>\n<p>可以使用如下命令取消默认激活 base 环境</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda config --set auto_activate_base <span class=\"token boolean\">false</span></pre></td></tr></table></figure><p>安装完成后记得关闭 Linux 终端，打开 powershell 输入 <code>wsl</code>  可以重新进入 Linux 终端，使 conda 环境刷新</p>\n<h3 id=\"配置miniconda-2\"><a class=\"anchor\" href=\"#配置miniconda-2\">#</a> 配置 MiniConda</h3>\n<p>创建用户配置文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda config --set show_channel_urls <span class=\"token function\">yes</span></pre></td></tr></table></figure><p>进入<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvYW5hY29uZGEv\">清华大学开源软件镜像站</span>，复制配置内容到用户目录下刚创建的 .condarc 文件，要复制的配置内容如下</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">channels</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> defaults</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">show_channel_urls</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">default_channels</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">custom_channels</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">conda-forge</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">msys2</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">bioconda</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">menpo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">pytorch</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">pytorch-lts</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">simpleitk</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr></table></figure><div class=\"note info\">\n<p>注意，把 <code>.condarc</code>  文件默认的内容删掉</p>\n</div>\n<p>输入 <code>conda clean -i</code>  清除默认缓存，用 <code>conda config --show-sources</code>  查看配置是否更换成功</p>\n<h2 id=\"pip换国内源linux环境\"><a class=\"anchor\" href=\"#pip换国内源linux环境\">#</a> pip 换国内源（Linux 环境）</h2>\n<h3 id=\"临时换源不推荐\"><a class=\"anchor\" href=\"#临时换源不推荐\">#</a> 临时换源（不推荐）</h3>\n<p>可能要安装包里的依赖包下载依然缓慢</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> -i https://pypi.tuna.tsinghua.edu.cn/simple 包名</pre></td></tr></table></figure><h3 id=\"永久换源推荐\"><a class=\"anchor\" href=\"#永久换源推荐\">#</a> 永久换源（推荐）</h3>\n<ol>\n<li>在用户目录下创建.pip 文件夹</li>\n<li>在刚创建的 pip 文件夹下创建 <code>pip.conf</code>  文件</li>\n<li>把以下配置内容放到刚创建的 pip.conf 文件里</li>\n</ol>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">global</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">index-url</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">https://pypi.tuna.tsinghua.edu.cn/simple/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">install</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">trusted-host</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">pypi.tuna.tsinghua.edu.cn</span></pre></td></tr></table></figure><h2 id=\"配置gpu加速\"><a class=\"anchor\" href=\"#配置gpu加速\">#</a> 配置 GPU 加速</h2>\n<h3 id=\"安装nvidia驱动\"><a class=\"anchor\" href=\"#安装nvidia驱动\">#</a> 安装 Nvidia 驱动</h3>\n<p>下载并安装 NVIDIA GPU 的最新驱动程序：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnZpZGlhLmNvbS9Eb3dubG9hZC9pbmRleC5hc3B4\">https://www.nvidia.com/Download/index.aspx</span></p>\n<p>我的笔记本是 3060，所以可以按如下配置搜索</p>\n<p>搜索出来后点击下载即可，可以看到驱动版本目前最新是 527.56</p>\n<p class=\"gallery\" data-height=\"240\"><img data-src=\"https://image.aayu.today/uploads/2022/12/18/202212180051600.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2022/12/18/202212180059301.png\" alt=\"\" /></p>\n<div class=\"note warning\">\n<p>这是您需要安装的唯一驱动程序。不要在 WSL 中安装任何 Linux 显卡驱动程序。<br />\n详情参阅 Nvidia 官方说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm52aWRpYS5jbi9jdWRhL3dzbC11c2VyLWd1aWRlL2luZGV4Lmh0bWwjZ2V0dGluZy1zdGFydGVkLXdpdGgtY3VkYS1vbi13c2wtMg==\">WSL 2 上的 CUDA 入门</span></p>\n<p>再次强调，不要在 WSL 中安装任何 Linux 版的 Nvidia 驱动！</p>\n</div>\n<p>下载完驱动后就可以安装了，我直接选择默认的 <code>NVIDIA 显卡驱动和 GeForce Experience</code>  选项，安装选项为 <code>精简</code> ，安装完成后重启下电脑即可～</p>\n<p>打开 powershell，输入 <code>nvidia-smi</code> ，可以看到 Windows 下已经正常输出显卡驱动信息了</p>\n<p>输入 <code>wsl</code> ，可以进入 Linux 命令行，再次输入 <code>nvidia-smi</code> ，可以看到 Linux 环境下，也输出了显卡驱动信息，大功告成～</p>\n<p class=\"gallery\" data-height=\"280\"><img data-src=\"https://image.aayu.today/uploads/2022/12/18/202212181857151.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2022/12/18/202212181857604.png\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>如果在 wsl2 命令行中输入 <code>nvidia-smi</code>  发现没有正常输出，而是报错，首先要检查的就是你的 Windows 版本是不是太低了，还是建议升级到最新的 win11 系统再进行折腾</p>\n<p>因为有<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2l3YW52YW4vYXJ0aWNsZS9kZXRhaWxzLzEyMjExOTU5NQ==\">网友已经实践</span>，升级到 win11 后啥都不用做，直接就把 wsl2 链接到 GPU 了</p>\n<p>所以看到报错先检查 Windows 版本，千万不要在 WSL 中安装任何 Linux 版的 Nvidia 驱动！不需要的！</p>\n</div>\n<h3 id=\"安装cuda-toolkit\"><a class=\"anchor\" href=\"#安装cuda-toolkit\">#</a> 安装 Cuda Toolkit</h3>\n<p>接下来就有两种方式了：</p>\n<p>一个是按 Nvidia 官方说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm52aWRpYS5jbi9jdWRhL3dzbC11c2VyLWd1aWRlL2luZGV4Lmh0bWwjZ2V0dGluZy1zdGFydGVkLXdpdGgtY3VkYS1vbi13c2wtMg==\">WSL 2 上的 CUDA 入门</span>上的，在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubnZpZGlhLmNvbS9jdWRhLWRvd25sb2Fkcz90YXJnZXRfb3M9TGludXgmYW1wO3RhcmdldF9hcmNoPXg4Nl82NCZhbXA7RGlzdHJpYnV0aW9uPVdTTC1VYnVudHUmYW1wO3RhcmdldF92ZXJzaW9uPTIuMCZhbXA7dGFyZ2V0X3R5cGU9ZGViX25ldHdvcms=\"> CUDA Toolkit</span> 下载界面选择适合 WSL 的 CUDA Toolkit 进行安装，如下图所示</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/12/18/202212182152370.png\" alt=\"\" width=\"800px\" /></p>\n<p>另一种是根据网友的评论，可以依赖于 conda 和 pytorch 直接安装 gpu 版本的 pytorch，安装成功后 cuda 也是可以直接用了。pytorch 官方给出的安装命令如下图，可以看到其中也包含了 cuda 11.7</p>\n<p class=\"gallery\" data-height=\"280\"><img data-src=\"https://image.aayu.today/uploads/2022/12/19/202212191544772.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2022/12/18/202212182203319.png\" alt=\"\" /></p>\n<div class=\"note warning\">\n<p>这两种的区别，据有网友说第二种方式安装的 CUDA Toolkit 貌似只适用于 Pytorch，所以如果想将 CUDA Toolkit 和 C++ 搭配使用的话，还是得要用第一种方式安装一次 CUDA Toolkit</p>\n<p>但经博主亲自实践，用 conda 安装的 cuda，也是可以直接和 C++ 搭配使用的！</p>\n</div>\n<p>所以接下来的内容就是，用第二种方式安装 pytorch 的 gpu 版本，即可将 cuda 安装好。然后编写一个 c++ 脚本测试一下，都没问题的话，即 WSL2 的 GPU 加速配置大功告成～</p>\n<div class=\"note info\">\n<p>本节教程和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL3dpbmRvd3Mvd3NsL2luc3RhbGw=\">微软 wsl 官方教程</span>中的 GPU 加速配置有区别，好像是官方教程里好像设置了 Docker 什么的，我目前好像还用不到这么深，所以就没参考微软 wsl 的官方教程</p>\n</div>\n<h4 id=\"通过pytorch安装cuda-toolkit\"><a class=\"anchor\" href=\"#通过pytorch安装cuda-toolkit\">#</a> 通过 PyTorch 安装 CUDA Toolkit</h4>\n<p>首先我们先创建一个 python3.8 的虚拟环境，后续安装相关库都在这个环境下安装。保持环境一直可以减少很多 Bug 的产生</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda create --name py38 <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.8</span></pre></td></tr></table></figure><p>激活新创建好的环境</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda activate py38</pre></td></tr></table></figure><p>PyTorch 官网直接给出了安装命令，如下</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda <span class=\"token function\">install</span> pytorch torchvision torchaudio pytorch-cuda<span class=\"token operator\">=</span><span class=\"token number\">11.7</span> -c pytorch -c nvidia</pre></td></tr></table></figure><p>因此，我们直接在 Linux 的命令行中，切换到我们自己创建的 python 虚拟环境，运行以上命令进行安装，以下是 conda 给出安装前的输出信息，可以看到里面就包含了 CUDA Toolkit</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">## Package Plan ##</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  environment location: /home/aayu/miniconda3/envs/py38</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  added / updated specs:</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    - pytorch</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    - pytorch-cuda<span class=\"token operator\">=</span><span class=\"token number\">11.7</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    - torchaudio</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    - torchvision</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>The following packages will be downloaded:</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    package                    <span class=\"token operator\">|</span>            build</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    ---------------------------<span class=\"token operator\">|</span>-----------------</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    cuda-11.7.1                <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    cuda-cccl-11.7.91          <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">1.2</span> MB  nvidia</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    cuda-command-line-tools-11.7.1<span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    cuda-compiler-11.7.1       <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    cuda-cudart-11.7.99        <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">194</span> KB  nvidia</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    cuda-cudart-dev-11.7.99    <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">1.1</span> MB  nvidia</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    cuda-cuobjdump-11.7.91     <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">158</span> KB  nvidia</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    cuda-cupti-11.7.101        <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">22.9</span> MB  nvidia</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    cuda-cuxxfilt-11.7.91      <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">293</span> KB  nvidia</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    cuda-demo-suite-12.0.76    <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">5.0</span> MB  nvidia</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    cuda-documentation-12.0.76 <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>          <span class=\"token number\">89</span> KB  nvidia</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    cuda-driver-dev-11.7.99    <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>          <span class=\"token number\">16</span> KB  nvidia</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    cuda-gdb-12.0.90           <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">5.3</span> MB  nvidia</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    cuda-libraries-11.7.1      <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    cuda-libraries-dev-11.7.1  <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">2</span> KB  nvidia</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    cuda-memcheck-11.8.86      <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">168</span> KB  nvidia</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    cuda-nsight-12.0.78        <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">113.6</span> MB  nvidia</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    cuda-nsight-compute-12.0.0 <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cuda-nvcc-11.7.99          <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">42.7</span> MB  nvidia</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    cuda-nvdisasm-12.0.76      <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">47.9</span> MB  nvidia</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    cuda-nvml-dev-11.7.91      <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>          <span class=\"token number\">80</span> KB  nvidia</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    cuda-nvprof-12.0.90        <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">4.3</span> MB  nvidia</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    cuda-nvprune-11.7.91       <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>          <span class=\"token number\">64</span> KB  nvidia</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    cuda-nvrtc-11.7.99         <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">17.3</span> MB  nvidia</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    cuda-nvrtc-dev-11.7.99     <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">16.9</span> MB  nvidia</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    cuda-nvtx-11.7.91          <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>          <span class=\"token number\">57</span> KB  nvidia</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    cuda-nvvp-12.0.90          <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">114.3</span> MB  nvidia</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    cuda-runtime-11.7.1        <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    cuda-sanitizer-api-12.0.90 <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">16.6</span> MB  nvidia</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    cuda-toolkit-11.7.1        <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    cuda-tools-11.7.1          <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    cuda-visual-tools-11.7.1   <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>           <span class=\"token number\">1</span> KB  nvidia</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    cudatoolkit-10.1.243       <span class=\"token operator\">|</span>       h036e899_8       <span class=\"token number\">427.4</span> MB  nvidia</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    gds-tools-1.5.0.59         <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">40.9</span> MB  nvidia</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    intel-openmp-2022.1.0      <span class=\"token operator\">|</span>    h9e868ea_3769         <span class=\"token number\">4.5</span> MB</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    lcms2-2.12                 <span class=\"token operator\">|</span>       h3be6417_0         <span class=\"token number\">312</span> KB</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    libcublas-11.10.3.66       <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">286.1</span> MB  nvidia</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    libcublas-dev-11.10.3.66   <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">296.4</span> MB  nvidia</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    libcufft-10.7.2.124        <span class=\"token operator\">|</span>       h4fbf590_0        <span class=\"token number\">93.6</span> MB  nvidia</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    libcufft-dev-10.7.2.124    <span class=\"token operator\">|</span>       h98a8f43_0       <span class=\"token number\">197.3</span> MB  nvidia</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    libcufile-1.5.0.59         <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">754</span> KB  nvidia</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    libcufile-dev-1.5.0.59     <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>          <span class=\"token number\">13</span> KB  nvidia</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    libcurand-10.3.1.50        <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">51.7</span> MB  nvidia</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    libcurand-dev-10.3.1.50    <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">449</span> KB  nvidia</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    libcusolver-11.4.0.1       <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">78.7</span> MB  nvidia</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    libcusolver-dev-11.4.0.1   <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>        <span class=\"token number\">55.9</span> MB  nvidia</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    libcusparse-11.7.4.91      <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">151.1</span> MB  nvidia</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    libcusparse-dev-11.7.4.91  <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">309.5</span> MB  nvidia</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    libnpp-11.7.4.75           <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">129.3</span> MB  nvidia</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    libnpp-dev-11.7.4.75       <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">126.6</span> MB  nvidia</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    libnvjpeg-11.8.0.2         <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">2.2</span> MB  nvidia</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    libnvjpeg-dev-11.8.0.2     <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>         <span class=\"token number\">1.9</span> MB  nvidia</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    mkl-2022.1.0               <span class=\"token operator\">|</span>     hc2b9512_224       <span class=\"token number\">129.7</span> MB</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    ninja-1.10.2               <span class=\"token operator\">|</span>       h06a4308_5           <span class=\"token number\">8</span> KB</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    ninja-base-1.10.2          <span class=\"token operator\">|</span>       hd09550d_5         <span class=\"token number\">109</span> KB</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    nsight-compute-2022.4.0.15 <span class=\"token operator\">|</span>                <span class=\"token number\">0</span>       <span class=\"token number\">764.0</span> MB  nvidia</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    pillow-9.2.0               <span class=\"token operator\">|</span>   py38hace64e9_1         <span class=\"token number\">666</span> KB</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    pytorch-1.4.0              <span class=\"token operator\">|</span>py3.8_cuda10.1.243_cudnn7.6.3_0       <span class=\"token number\">433.1</span> MB  pytorch</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    pytorch-cuda-11.7          <span class=\"token operator\">|</span>       h67b0de4_1           <span class=\"token number\">3</span> KB  pytorch</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    torchaudio-0.4.0           <span class=\"token operator\">|</span>             py38         <span class=\"token number\">6.1</span> MB  pytorch</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    torchvision-0.5.0          <span class=\"token operator\">|</span>       py38_cu101         <span class=\"token number\">9.1</span> MB  pytorch</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    ------------------------------------------------------------</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                                           Total:        <span class=\"token number\">3.91</span> GB</pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>The following NEW packages will be INSTALLED:</pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  cuda               nvidia/linux-64::cuda-11.7.1-0</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>  cuda-cccl          nvidia/linux-64::cuda-cccl-11.7.91-0</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>  cuda-command-line~ nvidia/linux-64::cuda-command-line-tools-11.7.1-0</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>  cuda-compiler      nvidia/linux-64::cuda-compiler-11.7.1-0</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>  cuda-cudart        nvidia/linux-64::cuda-cudart-11.7.99-0</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>  cuda-cudart-dev    nvidia/linux-64::cuda-cudart-dev-11.7.99-0</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>  cuda-cuobjdump     nvidia/linux-64::cuda-cuobjdump-11.7.91-0</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>  cuda-cupti         nvidia/linux-64::cuda-cupti-11.7.101-0</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>  cuda-cuxxfilt      nvidia/linux-64::cuda-cuxxfilt-11.7.91-0</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>  cuda-demo-suite    nvidia/linux-64::cuda-demo-suite-12.0.76-0</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>  cuda-documentation nvidia/linux-64::cuda-documentation-12.0.76-0</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  cuda-driver-dev    nvidia/linux-64::cuda-driver-dev-11.7.99-0</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>  cuda-gdb           nvidia/linux-64::cuda-gdb-12.0.90-0</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>  cuda-libraries     nvidia/linux-64::cuda-libraries-11.7.1-0</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  cuda-libraries-dev nvidia/linux-64::cuda-libraries-dev-11.7.1-0</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  cuda-memcheck      nvidia/linux-64::cuda-memcheck-11.8.86-0</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>  cuda-nsight        nvidia/linux-64::cuda-nsight-12.0.78-0</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>  cuda-nsight-compu~ nvidia/linux-64::cuda-nsight-compute-12.0.0-0</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  cuda-nvcc          nvidia/linux-64::cuda-nvcc-11.7.99-0</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  cuda-nvdisasm      nvidia/linux-64::cuda-nvdisasm-12.0.76-0</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  cuda-nvml-dev      nvidia/linux-64::cuda-nvml-dev-11.7.91-0</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  cuda-nvprof        nvidia/linux-64::cuda-nvprof-12.0.90-0</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>  cuda-nvprune       nvidia/linux-64::cuda-nvprune-11.7.91-0</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  cuda-nvrtc         nvidia/linux-64::cuda-nvrtc-11.7.99-0</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  cuda-nvrtc-dev     nvidia/linux-64::cuda-nvrtc-dev-11.7.99-0</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  cuda-nvtx          nvidia/linux-64::cuda-nvtx-11.7.91-0</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  cuda-nvvp          nvidia/linux-64::cuda-nvvp-12.0.90-0</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>  cuda-runtime       nvidia/linux-64::cuda-runtime-11.7.1-0</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  cuda-sanitizer-api nvidia/linux-64::cuda-sanitizer-api-12.0.90-0</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>  cuda-toolkit       nvidia/linux-64::cuda-toolkit-11.7.1-0</pre></td></tr><tr><td data-num=\"112\"></td><td><pre>  cuda-tools         nvidia/linux-64::cuda-tools-11.7.1-0</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  cuda-visual-tools  nvidia/linux-64::cuda-visual-tools-11.7.1-0</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  cudatoolkit        nvidia/linux-64::cudatoolkit-10.1.243-h036e899_8</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>  gds-tools          nvidia/linux-64::gds-tools-1.5.0.59-0</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  intel-openmp       pkgs/main/linux-64::intel-openmp-2022.1.0-h9e868ea_3769</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>  lcms2              pkgs/main/linux-64::lcms2-2.12-h3be6417_0</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>  libcublas          nvidia/linux-64::libcublas-11.10.3.66-0</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>  libcublas-dev      nvidia/linux-64::libcublas-dev-11.10.3.66-0</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>  libcufft           nvidia/linux-64::libcufft-10.7.2.124-h4fbf590_0</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>  libcufft-dev       nvidia/linux-64::libcufft-dev-10.7.2.124-h98a8f43_0</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>  libcufile          nvidia/linux-64::libcufile-1.5.0.59-0</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  libcufile-dev      nvidia/linux-64::libcufile-dev-1.5.0.59-0</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>  libcurand          nvidia/linux-64::libcurand-10.3.1.50-0</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>  libcurand-dev      nvidia/linux-64::libcurand-dev-10.3.1.50-0</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  libcusolver        nvidia/linux-64::libcusolver-11.4.0.1-0</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>  libcusolver-dev    nvidia/linux-64::libcusolver-dev-11.4.0.1-0</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>  libcusparse        nvidia/linux-64::libcusparse-11.7.4.91-0</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  libcusparse-dev    nvidia/linux-64::libcusparse-dev-11.7.4.91-0</pre></td></tr><tr><td data-num=\"130\"></td><td><pre>  libnpp             nvidia/linux-64::libnpp-11.7.4.75-0</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>  libnpp-dev         nvidia/linux-64::libnpp-dev-11.7.4.75-0</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>  libnvjpeg          nvidia/linux-64::libnvjpeg-11.8.0.2-0</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>  libnvjpeg-dev      nvidia/linux-64::libnvjpeg-dev-11.8.0.2-0</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>  mkl                pkgs/main/linux-64::mkl-2022.1.0-hc2b9512_224</pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  ninja              pkgs/main/linux-64::ninja-1.10.2-h06a4308_5</pre></td></tr><tr><td data-num=\"136\"></td><td><pre>  ninja-base         pkgs/main/linux-64::ninja-base-1.10.2-hd09550d_5</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>  nsight-compute     nvidia/linux-64::nsight-compute-2022.4.0.15-0</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>  pillow             pkgs/main/linux-64::pillow-9.2.0-py38hace64e9_1</pre></td></tr><tr><td data-num=\"139\"></td><td><pre>  pytorch            pytorch/linux-64::pytorch-1.4.0-py3.8_cuda10.1.243_cudnn7.6.3_0</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>  pytorch-cuda       pytorch/noarch::pytorch-cuda-11.7-h67b0de4_1</pre></td></tr><tr><td data-num=\"141\"></td><td><pre>  six                pkgs/main/noarch::six-1.16.0-pyhd3eb1b0_1</pre></td></tr><tr><td data-num=\"142\"></td><td><pre>  torchaudio         pytorch/linux-64::torchaudio-0.4.0-py38</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>  torchvision        pytorch/linux-64::torchvision-0.5.0-py38_cu101</pre></td></tr></table></figure><p>贴一张安装过程中的截图哈哈</p>\n<p>安装成功！用 <code>nvcc -V</code>  命令测试一下是否能正常输出，成功输出，如下图</p>\n<p class=\"gallery\" data-height=\"280\"><img data-src=\"https://image.aayu.today/uploads/2022/12/18/202212182247894.png\" alt=\"\" /><br />\n<img data-src=\"https://image.aayu.today/uploads/2022/12/18/202212182327537.png\" alt=\"\" /></p>\n<p>导入 Pytorch 测试一下，正确链接到 GPU，并识别出显卡</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/12/19/202212190031485.png\" alt=\"\" width=\"800px\" /></p>\n<h3 id=\"测试nvcc\"><a class=\"anchor\" href=\"#测试nvcc\">#</a> 测试 Nvcc</h3>\n<p>编写一个 cuda 脚本</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"><span>cuda_test_1.cu</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"cuda_runtime.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assert.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// Device code</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>__global__ <span class=\"token keyword\">void</span> <span class=\"token function\">VecAdd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span> A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> B<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> C<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    C<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// Host code</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">int</span> N <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    size_t size <span class=\"token operator\">=</span> N <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// Allocate input vectors h_A and h_B in host memory</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> h_A <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> h_B <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> h_C <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// Initialize input vectors</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        h_A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        h_B<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2.</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\">// Allocate vectors in device memory</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> d_A<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token function\">cudaMalloc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>d_A<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> d_B<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">cudaMalloc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>d_B<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> d_C<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token function\">cudaMalloc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>d_C<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">// Copy vectors from host memory to device memory</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token function\">cudaMemcpy</span><span class=\"token punctuation\">(</span>d_A<span class=\"token punctuation\">,</span> h_A<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> cudaMemcpyHostToDevice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token function\">cudaMemcpy</span><span class=\"token punctuation\">(</span>d_B<span class=\"token punctuation\">,</span> h_B<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> cudaMemcpyHostToDevice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\">// Kernel invocation with N threads</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    VecAdd<span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> N<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>d_A<span class=\"token punctuation\">,</span> d_B<span class=\"token punctuation\">,</span> d_C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\">// Copy result from device memory to host memory</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">// h_C contains the result in host memory</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token function\">cudaMemcpy</span><span class=\"token punctuation\">(</span>h_C<span class=\"token punctuation\">,</span> d_C<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> cudaMemcpyDeviceToHost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>h_C<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">3.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\t\\t\\t\\tDONE!\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\">// Free device memory</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token function\">cudaFree</span><span class=\"token punctuation\">(</span>d_A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token function\">cudaFree</span><span class=\"token punctuation\">(</span>d_B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token function\">cudaFree</span><span class=\"token punctuation\">(</span>d_C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token comment\">// Free host memory</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>h_A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>h_B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>h_C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>然后在刚刚安装了 cuda 的 python 环境下用以下命令编译</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nvcc cuda_test_1.cu -o cuda_test_1</pre></td></tr></table></figure><div class=\"note info\">\n<p>如果报 <code>gcc: No such file or directory</code> ，则需要用如下命令安装 gcc 及调试工具</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> build-essential gdb</pre></td></tr></table></figure><p>安装完成后用 <code>gcc --version</code>  测试一下，由正常输出即安装成功</p>\n</div>\n<p>编译成功后用 <code>./cuda_test_1</code>  运行，成功运行如下图</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/12/19/202212191538223.png\" alt=\"\" width=\"800px\" /></p>\n<p>大功告成！</p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3JlYWQvY3YxNDYwODU0Nw==\">Windows10/11 WSL2 安装 nvidia-cuda 驱动</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2l3YW52YW4vYXJ0aWNsZS9kZXRhaWxzLzEyMjExOTU5NQ==\">Windows 11/10 WSL2 Ubuntu 20.04 下配置 Cuda 及 Pytorch</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTVRNHkxaTdCcC8/cD0y\">【PyTorch】B 站首个，终于有人把 GPU/ CUDA/cuDNN 讲清楚了</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2d0ZjIxNTk5ODMxNS9hcnRpY2xlL2RldGFpbHMvMTA1MzU5NzQz\">【资源记录】各个历史版本 cuda toolkit 下载链接</span></li>\n</ul>\n",
            "tags": [
                "人工智能",
                "基础知识",
                "win11",
                "wsl",
                "nvidia"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/basic/20221207/",
            "url": "https://blog.aayu.today/artificial-intelligence/basic/20221207/",
            "title": "VSCode配置C++和Python编译和调试环境",
            "date_published": "2022-12-09T15:16:27.000Z",
            "content_html": "<h2 id=\"vscode配置\"><a class=\"anchor\" href=\"#vscode配置\">#</a> VSCode 配置</h2>\n<ul>\n<li>Visual Studio Code 下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG93bmxvYWQ=\">https://code.visualstudio.com/download</span></li>\n<li>VS Code 建议安装插件列表：\n<ul>\n<li>中文菜单：\n<ul>\n<li>MS-CEINTL.vscode-language-pack-zh-hans</li>\n</ul>\n</li>\n<li>SSH 远程开发：\n<ul>\n<li>ms-vscode-remote.remote-ssh</li>\n<li>ms-vscode-remote.remote-ssh-edit</li>\n<li>ms-vscode.remote-explorer</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C++ 开发\n<ul>\n<li>ms-vscode.cpptools</li>\n</ul>\n</li>\n<li>python 开发\n<ul>\n<li>ms-python.python</li>\n</ul>\n</li>\n<li>代码补全\n<ul>\n<li>GitHub.copilot</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ssh连接远端linux主机\"><a class=\"anchor\" href=\"#ssh连接远端linux主机\">#</a> SSH 连接远端 Linux 主机</h2>\n<p>点击 VSCode 左下角的 &gt;&lt; 符号，创建一个新的 SSH 连接，输入连接命令即可打开新的窗口，然后正确输入密码即可连接到远端的 Linux 主机</p>\n<h2 id=\"linux配置\"><a class=\"anchor\" href=\"#linux配置\">#</a> Linux 配置</h2>\n<h3 id=\"安装miniconda\"><a class=\"anchor\" href=\"#安装miniconda\">#</a> 安装 miniconda</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://repo.anaconda.com/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">bash</span> Miniconda3-py39_4.12.0-Linux-x86_64.sh</pre></td></tr></table></figure><p>默认会安装在用户目录下，保持默认即可</p>\n<p>安装完成后用 <code>source .bashrc</code>  刷新配置文件，即可看见命令行前面有个 <code>(base)</code>  前缀，即安装成功</p>\n<h3 id=\"安装opencv\"><a class=\"anchor\" href=\"#安装opencv\">#</a> 安装 opencv</h3>\n<p>如果用 <code>conda install opencv</code>  命令安装成功后，import cv2 可能还会报错，缺少一个依赖，运行下列命令安装依赖</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> libgl1-mesa-glx</pre></td></tr></table></figure><p>如果用 pip 安装 mediapipe 速度慢，可以在用户目录下创建 <code>.pip/pip.conf</code>  文件，然后配置如下内容</p>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">global</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">index-url</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">https://pypi.tuna.tsinghua.edu.cn/simple/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">install</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">trusted-host</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">pypi.tuna.tsinghua.edu.cn</span></pre></td></tr></table></figure><p>然后重启命令行，再次用 <code>pip install mediapipe</code>  即可满速</p>\n<h3 id=\"安装g\"><a class=\"anchor\" href=\"#安装g\">#</a> 安装 g++</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> build-essential</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">which</span> g++</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>gcc --version</pre></td></tr></table></figure><p>这个命令将会安装一系列软件包，包括 gcc,g++, 和 make</p>\n<h3 id=\"安装gdb\"><a class=\"anchor\" href=\"#安装gdb\">#</a> 安装 gdb</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> gdb</pre></td></tr></table></figure><h2 id=\"测试python\"><a class=\"anchor\" href=\"#测试python\">#</a> 测试 Python</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># python 代码测试</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 计算 1+2+3+4+5 的和</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin\">sum</span> <span class=\"token operator\">+=</span> i</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 打印结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>debuger 配置.vscode 下 launch.json 添加</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// Use IntelliSense to learn about possible attributes.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// Hover to view descriptions of existing attributes.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Python: Current File\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"python\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;file&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">\"console\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integratedTerminal\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"justMyCode\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>  <span class=\"token comment\">//false 表示可以进入第三方库（如 Pytorch）里进行调试</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"测试c\"><a class=\"anchor\" href=\"#测试c\">#</a> 测试 C++</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 计算 1+2+3+4+5</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> sum <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        sum <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 输出结果</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    cout <span class=\"token operator\">&lt;&lt;</span> sum <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>方法一：用 g++  main.cpp -o main 生成可执行文件</li>\n<li>方法二：在.vscode 先添加 tasks.json</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token property\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppbuild\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: g++ 生成活动文件\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/usr/bin/g++\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//g++ 的路径</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t  <span class=\"token string\">\"-fdiagnostics-color=always\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 颜色</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t  <span class=\"token string\">\"-g\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 调试信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t  <span class=\"token string\">\"-Wall\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 开启所有警告</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t  <span class=\"token string\">\"-std=c++14\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//c++14 标准</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t  <span class=\"token string\">\"$&#123;file&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文件本身，仅适用于 C++ 基础知识教学，无法同时编译所有文件</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t  <span class=\"token comment\">// \"$&#123;fileDirname&#125;/*.cpp\", // 文件所在的文件夹路径下所有 cpp 文件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t  <span class=\"token string\">\"-o\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 输出</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t  <span class=\"token string\">\"$&#123;workspaceFolder&#125;/release/$&#123;fileBasenameNoExtension&#125;\"</span> <span class=\"token comment\">// 文件所在的文件夹路径 /release/ 当前文件的文件名，不带后缀</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token property\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t  <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span> <span class=\"token comment\">// 文件所在的文件夹路径</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t  <span class=\"token string\">\"$gcc\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t  <span class=\"token property\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t  <span class=\"token property\">\"isDefault\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token property\">\"detail\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"编译器: /usr/bin/g++\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>需要 debuger，launch.json 修改为：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// Use IntelliSense to learn about possible attributes.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// Hover to view descriptions of existing attributes.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.2.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C++ 调试 (gdb) Launch\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppdbg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;workspaceFolder&#125;/release/$&#123;fileBasenameNoExtension&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文件所在的文件夹路径 /release/ 当前文件的文件名，不带后缀</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"stopAtEntry\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 文件所在的文件夹路径</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token property\">\"environment\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token property\">\"externalConsole\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">\"MIMode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gdb\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token property\">\"setupCommands\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Enable pretty-printing for gdb\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-enable-pretty-printing\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token property\">\"ignoreFailures\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Set Disassembly Flavor to Intel\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-gdb-set disassembly-flavor intel\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token property\">\"ignoreFailures\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token property\">\"preLaunchTask\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: g++ 生成活动文件\"</span>  <span class=\"token comment\">//tasks.json 的 label</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Python: Current File\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"python\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;file&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token property\">\"console\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"integratedTerminal\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token property\">\"justMyCode\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"vscode中变量解释\"><a class=\"anchor\" href=\"#vscode中变量解释\">#</a> VSCode 中变量解释</h2>\n<ul>\n<li><code>$&#123;workspaceFolder&#125;</code>  : 表示当前 workspace 文件夹路径，也即 /home/Coding/Test</li>\n<li><code>$&#123;workspaceRootFolderName&#125;</code> : 表示 workspace 的文件夹名，也即 Test</li>\n<li><code>$&#123;file&#125;</code> : 文件自身的绝对路径，也即 /home/Coding/Test/.vscode/tasks.json</li>\n<li><code>$&#123;relativeFile&#125;</code> : 文件在 workspace 中的路径，也即.vscode/tasks.json</li>\n<li><code>$&#123;fileBasenameNoExtension&#125;</code> : 当前文件的文件名，不带后缀，也即 tasks</li>\n<li><code>$&#123;fileBasename&#125;</code> : 当前文件的文件名，tasks.json</li>\n<li><code>$&#123;fileDirname&#125;</code> : 文件所在的文件夹路径，也即 /home/Coding/Test/.vscode</li>\n<li><code>$&#123;fileExtname&#125;</code> : 当前文件的后缀，也即.json</li>\n<li><code>$&#123;lineNumber&#125;</code> : 当前文件光标所在的行号</li>\n<li><code>$&#123;env:PATH&#125;</code> : 系统中的环境变量</li>\n</ul>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hoZDE5ODgvYXJ0aWNsZS9kZXRhaWxzLzEyMzY1MTQ3Ng==\">Ubuntu ：20.04 上安装 gcc/g++7.5</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZGJubi9wLzE2MzE1MzE2Lmh0bWw=\">vscode error: Please specify the &quot;MIDebuggerPath&quot; option</span></li>\n</ul>\n",
            "tags": [
                "人工智能",
                "基础知识",
                "python",
                "c++"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/machine-learning/hmm/20221207/",
            "url": "https://blog.aayu.today/artificial-intelligence/machine-learning/hmm/20221207/",
            "title": "隐马尔科夫模型",
            "date_published": "2022-12-07T06:59:32.000Z",
            "content_html": "<h2 id=\"基本概念\"><a class=\"anchor\" href=\"#基本概念\">#</a> 基本概念</h2>\n<h3 id=\"一个模型\"><a class=\"anchor\" href=\"#一个模型\">#</a> 一个模型</h3>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>λ</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>π</mi><mo separator=\"true\">,</mo><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\lambda=(\\pi, A, B)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>其中：</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span>：初始概率分布</li>\n<li>A：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>a</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a_{i,j}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span> —&gt; 转移矩阵，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>q</mi><mi>j</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mi>t</mi></msub><mo>=</mo><msub><mi>q</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">a_{i,j}=P(i_{t+1}=q_j|i_t=q_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>B：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[b_j(k)]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span></span></span> —&gt; 发射矩阵，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mi>j</mi></msub><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>O</mi><mi>t</mi></msub><mo>=</mo><msub><mi>v</mi><mi>k</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mi>t</mi></msub><mo>=</mo><msub><mi>q</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">b_j(k)=P(O_t=v_k|i_t=q_j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<h3 id=\"两个假设\"><a class=\"anchor\" href=\"#两个假设\">#</a> 两个假设</h3>\n<ol>\n<li>齐次 Markov</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><msub><mi>o</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>o</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>i</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(i_{t+1}|i_1,\\cdots,i_t,o_1,\\cdots,o_t)=P(i_{t+1}|i_t)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<ol start=\"2\">\n<li>观测独立</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>o</mi><mi>t</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>i</mi><mi>t</mi></msub><mo separator=\"true\">,</mo><msub><mi>o</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>o</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>o</mi><mi>t</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>i</mi><mi>t</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(o_t|i_1,\\cdots,i_t,o_1,\\cdots,o_t)=P(o_t|i_t)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">o</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<h3 id=\"三个问题\"><a class=\"anchor\" href=\"#三个问题\">#</a> 三个问题</h3>\n<ol>\n<li>\n<p>Evaluation</p>\n</li>\n<li>\n<p>Learning</p>\n</li>\n<li>\n<p>Decoding</p>\n</li>\n</ol>\n",
            "tags": [
                "人工智能",
                "机器学习",
                "隐马尔可夫模型",
                "隐马尔可夫模型"
            ]
        },
        {
            "id": "https://blog.aayu.today/fpv/20221127/",
            "url": "https://blog.aayu.today/fpv/20221127/",
            "title": "开源遥控器设置自定义语音包教程",
            "date_published": "2022-11-27T08:09:59.000Z",
            "content_html": "<h2 id=\"图片\"><a class=\"anchor\" href=\"#图片\">#</a> 图片</h2>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/11/27/202211271556183.png\" alt=\"\" /></p>\n<h2 id=\"下载语音包\"><a class=\"anchor\" href=\"#下载语音包\">#</a> 下载语音包</h2>\n<p>在「 FPV 帮 」里可以找到许多语音包，链接如下：<br />\n<span class=\"exturl\" data-url=\"aHR0cDovL2ZwdmJhbmcuY29tL2ZvcnVtLTU1LTEuaHRtbA==\">http://fpvbang.com/forum-55-1.html</span></p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ZwdmJhbmcuY29tL3RocmVhZC0xOTQyLTEtMS5odG1s\">OPENTX 遥控器语音设置教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXFQNHkxczdkMT9wPTI=\">OpenTX，EdgeTX 语音包设置视频教程</span></li>\n</ul>\n",
            "tags": [
                "FPV"
            ]
        },
        {
            "id": "https://blog.aayu.today/hardware/zigbee/20221101/",
            "url": "https://blog.aayu.today/hardware/zigbee/20221101/",
            "title": "基于ZigBee协议栈的DS18B20温度传感器驱动",
            "date_published": "2022-11-01T09:04:48.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>最近再搞农业物联网的项目，用到了 ZigBee 协议栈，需求之一是要监测土壤温度的数据，便采购了「 善学坊 」家的「 YTWD-A1 」传感器，其本质是 DS18B20 芯片，但网上关于这个芯片的数据读取方式多是 51 单片机或 STM32 相关的代码，经过自己的一番踩坑和实验，终于在 ZigBee 协议栈下写好了这个芯片的驱动，便在此记录下来，希望能帮助到有需要的小伙伴～</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/11/01/202211011901441.png\" alt=\"\" width=\"400px\" /></p>\n<h2 id=\"相关代码\"><a class=\"anchor\" href=\"#相关代码\">#</a> 相关代码</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>ds18b20.h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">HAL_DS18B20_H</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">HAL_DS18B20_H</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">__cplusplus</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/** @brief   YTWD GPIO. */</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">HAL_DS18B20_PORT</span>  <span class=\"token expression\"><span class=\"token number\">1</span> </span><span class=\"token comment\">//!&lt; Port1.</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">HAL_DS18B20_PIN</span>   <span class=\"token expression\"><span class=\"token number\">2</span> </span><span class=\"token comment\">//!&lt; Pin2.</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/** @brief   DHT11 Data. */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span>  <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> ok<span class=\"token punctuation\">;</span>   <span class=\"token comment\">//!&lt; Is ok?</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> fg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> xs<span class=\"token punctuation\">;</span> <span class=\"token comment\">//!&lt; xiaoshu.</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> zs<span class=\"token punctuation\">;</span> <span class=\"token comment\">//!&lt; zhengshu.</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token class-name\">halDS18B20Data_t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * @fn      halDS18B20Init</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * @brief\tInit. DS18B20.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token function\">halDS18B20Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> * @fn      halDHT11GetData</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> * </pre></td></tr><tr><td data-num=\"30\"></td><td><pre> * @brief\tGet data from DS18B20.</pre></td></tr><tr><td data-num=\"31\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"32\"></td><td><pre> * @return  xs&amp;zs value if ok is 1.</pre></td></tr><tr><td data-num=\"33\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token class-name\">halDS18B20Data_t</span>  <span class=\"token function\">halDS18B20GetData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifdef</span> <span class=\"token expression\">__cplusplus</span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span> <span class=\"token comment\">/* #ifndef HAL_DS18B20_H */</span></span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"><span>ds18b20.c</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"hal_ds18b20.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"hal_delay.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"cc2530_ioctl.h\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"hal_lcd.h\"</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Boolean value. */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">HAL_DS18B20_FALSE</span>         <span class=\"token expression\"><span class=\"token number\">0</span></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">HAL_DS18B20_TRUE</span>          <span class=\"token expression\"><span class=\"token number\">1</span></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/* Delay Functions. */</span>   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_DELAY_US</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>   <span class=\"token function\">delayUsIn32Mhz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_DELAY_MS</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>   <span class=\"token function\">delayMs</span><span class=\"token punctuation\">(</span>SYSCLK_32MHZ <span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">/* Set DS18B20 GPIO mode. */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_IO_OUTPUT</span><span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>         <span class=\"token function\">CC2530_IOCTL</span><span class=\"token punctuation\">(</span>HAL_DS18B20_PORT<span class=\"token punctuation\">,</span> HAL_DS18B20_PIN<span class=\"token punctuation\">,</span> CC2530_OUTPUT<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_IO_PULLDOWN</span><span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>       <span class=\"token function\">CC2530_IOCTL</span><span class=\"token punctuation\">(</span>HAL_DS18B20_PORT<span class=\"token punctuation\">,</span> HAL_DS18B20_PIN<span class=\"token punctuation\">,</span> CC2530_INPUT_PULLDOWN<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_IO_PULLUP</span><span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>         <span class=\"token function\">CC2530_IOCTL</span><span class=\"token punctuation\">(</span>HAL_DS18B20_PORT<span class=\"token punctuation\">,</span> HAL_DS18B20_PIN<span class=\"token punctuation\">,</span> CC2530_INPUT_PULLUP<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">/* Set DS18B20 GPIO Level. */</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_IO_SET</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> pin<span class=\"token punctuation\">,</span> level<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span> </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token expression\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">)</span> <span class=\"token function\">CC2530_GPIO_SET</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> pin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  <span class=\"token expression\"><span class=\"token keyword\">else</span> <span class=\"token function\">CC2530_GPIO_CLEAR</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> pin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            </span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token expression\"><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_IO_SET_LO</span><span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token function\">HAL_DS18B20_IO_SET</span><span class=\"token punctuation\">(</span>HAL_DS18B20_PORT<span class=\"token punctuation\">,</span> HAL_DS18B20_PIN<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_IO_SET_HI</span><span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token function\">HAL_DS18B20_IO_SET</span><span class=\"token punctuation\">(</span>HAL_DS18B20_PORT<span class=\"token punctuation\">,</span> HAL_DS18B20_PIN<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">/*  Get DS18B20 GPIO Status. */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_IO_GET</span><span class=\"token expression\"><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> pin<span class=\"token punctuation\">)</span> <span class=\"token function\">CC2530_GPIO_GET</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> pin<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name function\">HAL_DS18B20_IO</span><span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>              <span class=\"token function\">HAL_DS18B20_IO_GET</span><span class=\"token punctuation\">(</span>HAL_DS18B20_PORT<span class=\"token punctuation\">,</span> HAL_DS18B20_PIN<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> <span class=\"token function\">ReadOneChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">WriteOneChar</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> dat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token function\">halDS18B20Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_IO_OUTPUT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">//DQ 先置高</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_IO_SET_HI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">74</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 稍延时</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\">// 发送复位脉冲 </span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_IO_SET_LO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">750</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 延时（>480us)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre> </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">// 拉高数据线</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_IO_SET_HI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 等待（15~60us)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_IO_PULLUP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token function\">HAL_DS18B20_IO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 用 X 的值来判断初始化有没有成功，18B20 存在的话 X=0，否则 X=1</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">//    if (x == 0) HalLcdWriteString(\"finddddd\", 3);</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">//    else HalLcdWriteString(\"nooooo\", 3);</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token class-name\">halDS18B20Data_t</span> <span class=\"token function\">halDS18B20GetData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> tempL<span class=\"token punctuation\">,</span> tempH<span class=\"token punctuation\">,</span> xiaoshu1<span class=\"token punctuation\">,</span> xiaoshu2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token class-name\">halDS18B20Data_t</span> ds18b20Dat <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">.</span>ok <span class=\"token operator\">=</span> HAL_DS18B20_FALSE<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span>fg <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token function\">halDS18B20Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token function\">WriteOneChar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xcc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 跳过读序列号的操作 </span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token function\">WriteOneChar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x44</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 启动温度转换 </span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 转换需要一点时间，延时 </span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token function\">halDS18B20Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 初始化</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token function\">WriteOneChar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xcc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 跳过读序列号的操作 </span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token function\">WriteOneChar</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xbe</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 读温度寄存器（头两个值分别为温度的低位和高位）</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre> </pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    tempL <span class=\"token operator\">=</span> <span class=\"token function\">ReadOneChar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 读出温度的低位 LSB </span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    tempH <span class=\"token operator\">=</span> <span class=\"token function\">ReadOneChar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 读出温度的高位 MSB</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tempH <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 最高 5 位为 1 时温度是负 </span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        tempL <span class=\"token operator\">=</span> <span class=\"token operator\">~</span>tempL<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 补码转换，取反加一 </span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        tempH <span class=\"token operator\">=</span> <span class=\"token operator\">~</span>tempH<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        ds18b20Dat<span class=\"token punctuation\">.</span>fg <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读取温度为负时 fg=0</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token comment\">// 温度为负时貌似有问题，后面再改</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    ds18b20Dat<span class=\"token punctuation\">.</span>zs <span class=\"token operator\">=</span> tempL<span class=\"token operator\">/</span><span class=\"token number\">16</span><span class=\"token operator\">+</span>tempH<span class=\"token operator\">*</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 整数部分 </span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    xiaoshu1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tempL<span class=\"token operator\">&amp;</span><span class=\"token number\">0x0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">/</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">// 小数第一位 </span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    xiaoshu2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tempL<span class=\"token operator\">&amp;</span><span class=\"token number\">0x0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token operator\">/</span><span class=\"token number\">16</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 小数第二位 </span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    ds18b20Dat<span class=\"token punctuation\">.</span>xs <span class=\"token operator\">=</span> xiaoshu1<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>xiaoshu2<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 小数两位</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token comment\">// 进行数据校验</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ds18b20Dat<span class=\"token punctuation\">.</span>fg <span class=\"token operator\">&amp;&amp;</span> ds18b20Dat<span class=\"token punctuation\">.</span>zs <span class=\"token operator\">&lt;=</span> <span class=\"token number\">55</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>ds18b20Dat<span class=\"token punctuation\">.</span>fg <span class=\"token operator\">&amp;&amp;</span> ds18b20Dat<span class=\"token punctuation\">.</span>zs <span class=\"token operator\">&lt;=</span> <span class=\"token number\">125</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        ds18b20Dat<span class=\"token punctuation\">.</span>ok <span class=\"token operator\">=</span> HAL_DS18B20_TRUE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token function\">halDS18B20Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">return</span> ds18b20Dat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token comment\">// 主机数据线先从高拉至低电平 1us 以上，再使数据线升为高电平，从而产生读信号 </span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> <span class=\"token function\">ReadOneChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 每个读周期最短的持续时间为 60us，各个读周期之间必须有 1us 以上的高电平恢复期 </span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> dat <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 一个字节有 8 位 </span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_IO_OUTPUT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        dat<span class=\"token operator\">>>=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_IO_SET_LO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_IO_SET_HI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_IO_PULLUP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">HAL_DS18B20_IO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>            dat <span class=\"token operator\">|=</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">return</span> dat<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\">// 数据线从高电平拉至低电平，产生写起始信号。15us 之内将所需写的位送到数据线上</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">WriteOneChar</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint8_t</span> dat<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_IO_OUTPUT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token class-name\">uint8_t</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 在 15~60us 之间对数据线进行采样，如果是高电平就写 1，低写 0 发生。 </span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_IO_SET_LO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 在开始另一个写周期前必须有 1us 以上的高电平恢复期</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dat<span class=\"token operator\">&amp;</span><span class=\"token number\">0x01</span><span class=\"token punctuation\">)</span> <span class=\"token function\">HAL_DS18B20_IO_SET_HI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token function\">HAL_DS18B20_IO_SET_LO</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">68</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token function\">HAL_DS18B20_IO_SET_HI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        dat <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token function\">HAL_DS18B20_DELAY_US</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80ODM2MDY2NTY=\">液体温度传感器 YTWD-A1</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zOTYzNTY2NTk=\">DS18B20 数字温度传感器干货</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zODYwODQ2MzM=\">温度传感器 DS18B20 原理，附 STM32 例程代码</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMxNTEzMjAvYXJ0aWNsZS9kZXRhaWxzLzUwMjUzMTk5\">51 单片机 DS18B20 温度传感器详解</span></li>\n</ul>\n",
            "tags": [
                "硬件修炼手册",
                "ZigBee",
                "IoT",
                "ZigBee"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/basic/20221028/",
            "url": "https://blog.aayu.today/artificial-intelligence/basic/20221028/",
            "title": "用Python理解图像和视频的本质",
            "date_published": "2022-10-27T16:57:08.000Z",
            "content_html": "<h2 id=\"安装jupyterlab\"><a class=\"anchor\" href=\"#安装jupyterlab\">#</a> 安装 jupyterlab</h2>\n<p>更换国内源之后，在 anaconda powershell prompt 用下面命令安装</p>\n<pre><code>conda install jupyterlab\n</code></pre>\n<p>安装完成后，在命令行输入 <code>jupyter-lab</code>  启动</p>\n<h2 id=\"numpy常用命令\"><a class=\"anchor\" href=\"#numpy常用命令\">#</a> numpy 常用命令</h2>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>np.array([1,2,3,4])</td>\n<td>Python 列表转换为 numpy 的数组</td>\n</tr>\n<tr>\n<td>np.arange(0,10)</td>\n<td>创建一个 0~9 的一维数组</td>\n</tr>\n<tr>\n<td>np.ones(shape=(3,3))</td>\n<td>创建一个大小为 3*3 的全 1 数组</td>\n</tr>\n<tr>\n<td>np.zeros(shape=(5,5))</td>\n<td>创建大小为 5*5 的全 0 数组</td>\n</tr>\n<tr>\n<td>np.random.randint(0,100,10)</td>\n<td>随机 10 个整数</td>\n</tr>\n<tr>\n<td>arr.max()</td>\n<td>获取最大值</td>\n</tr>\n<tr>\n<td>arr.argmax()</td>\n<td>获取最大值的索引</td>\n</tr>\n<tr>\n<td>arr.min()</td>\n<td>获取最小值</td>\n</tr>\n<tr>\n<td>arr.argmin()</td>\n<td>获取最小值索引</td>\n</tr>\n<tr>\n<td>arr.mean()</td>\n<td>获取平均值</td>\n</tr>\n<tr>\n<td>arr.shape</td>\n<td>获取 numpy 数组的大小</td>\n</tr>\n<tr>\n<td>arr.reshape((5,2))</td>\n<td>转换数组的形状</td>\n</tr>\n<tr>\n<td>np.arange(0,100).reshape((10,10))</td>\n<td>创建一个 10*10 的矩阵</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 首先导入 numpy 包，重命名一下</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 首先创建一个 Python 列表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list_c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 检查类型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>list_c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 在使用 np.array () 将 Python 列表转换为 numpy 的数组</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>my_array <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>list_c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 比如我们使用 np.arange () 可以快速创建连续数字的数组</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 比如我创建一个 0~9 的一维数组</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># jupyterlab 中使用 shift+tab 可以查看函数的帮助文档（查看一下，此刻输入 np.arange ()，弹出对应函数帮助文档）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 可以看到这个 arange () 函数有 start、stop 和 step 参数，分别代表了起始值，终止值，以及步长</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 如果我希望创建 0~10 中连续偶数的数组，只需将步长设为 2（此刻输入 np.arange (0,10,2)）</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 还可以用 np.ones 创建全是 1 的数组，（此时输入 np.ones ()，弹出帮助说明）</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 比如我要创建一个大小为 3*3 的全 1 数组</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 或者使用 np.zeros () 全 0 数组</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 比如创建大小为 5*5 的全 0 数组</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 首先使用 np.randint 函数一些随机整数</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 使用 max 获取最大值</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>arr<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 再使用 argmax () 获取最大值的索引</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>arr<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># 使用 min 函数获取最小值</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>arr<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 使用 argmin 获取最小值索引</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>arr<span class=\"token punctuation\">.</span>argmin<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># 使用 mean () 方法获取取平均值</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>arr<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># 如果要获取 humpy 数组的大小，使用 numpy.shape，</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>arr<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 也可以使用 reshape 函数转换数组的形状，比如我将 arr 转换成 5*2 的数组</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>arr<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># 首先创建一个 10*10 的矩阵</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>matrix <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># 查看一下大小</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>matrix<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># 使用中括号中加索引方式，获取矩阵对应元素，比如我获取第 3 行第 5 列元素</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>matrix<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># 再获取矩阵第 9 行第 7 列元素</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>matrix<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># 如果要获取某一行所有元素，我们需要使用 numpy 的切片：</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># 比如我要获取第 3 行所有元素，只需将第二个位置变成冒号:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>matrix<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 类似的，比如我要获取第 6 列所有元素，只需将第一个位置变成冒号:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>matrix<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># 查看 shape</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>matrix<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># 用 reshape 恢复成原来的样子</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>matrix<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\"># 比如我要获取第 1~3 行，第 2~4 列矩阵，我们可以用数字配合冒号的方式来获取</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># 当然我们可以使用等号赋值语句，比如我将这些位置赋值 0</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><h2 id=\"pil和matplotlib对图像的基本操作\"><a class=\"anchor\" href=\"#pil和matplotlib对图像的基本操作\">#</a> PIL 和 matplotlib 对图像的基本操作</h2>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Image.open('./img/cat.jpg')</td>\n<td>读取图片</td>\n</tr>\n<tr>\n<td>np.asarray(img)</td>\n<td>转化为 numpy 数组</td>\n</tr>\n<tr>\n<td>plt.imshow(img_arr)</td>\n<td>显示 Numpy 数组形式的图片</td>\n</tr>\n<tr>\n<td>img_arr.copy()</td>\n<td>复制一份原图</td>\n</tr>\n<tr>\n<td>plt.imshow(img_arr_copy[:,:,0],cmap='gray')</td>\n<td>将 cmap 颜色设置为 gray 灰度</td>\n</tr>\n<tr>\n<td>img_arr_copy[:,:,0].shape</td>\n<td>单独看一个通道</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 首先导入 numpy</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 为了在 notebook 中显示图片，导入 matplotlib 库</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 加这行在 Notebook 显示图像</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">%</span>matplotlib inline</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 再使用一个 PIL 库，用于读取图像</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 我在 img 文件夹下放了一张图片（演示一下）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 我们用 PIL 库读取图片，注意路径要正确</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./img/cat.jpg'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 查看一下变量的类型</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 首先我们需要将它转化为 numpy 数组，使用 numpy.asarray () 函数</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>img_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 再使用 matplot 的 imshow () 方法显示 Numpy 数组形式的图片</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 我们继续对这个图片操作，先使用 numpy 的 copy 方法复制一份原图</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>img_arr_copy <span class=\"token operator\">=</span> img_arr<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 首先使用 numpy 切片，将 R,G,B 三个颜色通道中的 R 红色通道显示出来</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 大家会发现这个颜色很奇怪，都是翠绿色，为什么会显示成这样呢？</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 我们打开 matplot 的官网关于颜色表 colormap 的说明：</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># https://matplotlib.org/stable/gallery/color/colormap_reference.html</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># 可以看到默认的颜色：是翠绿色（viridis ）。那这个颜色方便色盲观看的</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_arr_copy<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 我们也可以将 cmap 颜色设置成火山岩浆样式：magma</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_arr_copy<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cmap<span class=\"token operator\">=</span><span class=\"token string\">'magma'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># 好，我们知道，计算机是分不清到底哪一个通道是红色的，每一个颜色通道其实都是一个灰度图，我们首先将 cmap 颜色设置为 gray 灰度看一下</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_arr_copy<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>cmap<span class=\"token operator\">=</span><span class=\"token string\">'gray'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># 可以查看大小 shape，会发现大小仍然不变</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>img_arr_copy<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># 而单独看一个通道的时候，大小会变化</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>img_arr_copy<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shape</pre></td></tr></table></figure><h2 id=\"opencv对图像和视频的基本操作\"><a class=\"anchor\" href=\"#opencv对图像和视频的基本操作\">#</a> OpenCV 对图像和视频的基本操作</h2>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cv2.imread('./img/cat.jpg')</td>\n<td>使用 opencv 的 imread 方法，打开图片</td>\n</tr>\n<tr>\n<td>cv2.cvtColor(img,cv2.COLOR_BGR2RGB)</td>\n<td>将 OpenCV BGR 转换成 RGB</td>\n</tr>\n<tr>\n<td>cv2.imread('./img/cat.jpg',cv2.IMREAD_GRAYSCALE)</td>\n<td>再读取图片时也可以以灰度模式读取</td>\n</tr>\n<tr>\n<td>cv2.resize(img_fixed,(1000,300))</td>\n<td>使用 resize 缩放</td>\n</tr>\n<tr>\n<td>cv2.flip(img_fixed,-1)</td>\n<td>翻转图片：0 表示垂直翻转、1 表示水平翻转，-1 表示水平垂直都翻转</td>\n</tr>\n<tr>\n<td>cv2.imwrite('./img_flip.jpg',img_save)</td>\n<td>写入 numpy 格式的图片</td>\n</tr>\n<tr>\n<td>cv2.waitKey(1) &amp; 0xFF == 27</td>\n<td>等待至少 1ms ，而且按了 ESC 键，也可以用 ord ('q')</td>\n</tr>\n<tr>\n<td>cv2.imshow('display image',img)</td>\n<td>显示图片窗口</td>\n</tr>\n<tr>\n<td>np.zeros(shape=(800,800,3),dtype=np.int16)</td>\n<td>创建一个纯黑色图，纯黑色就是图片的元素全部为 0，这里给一个数据类型为 Int16</td>\n</tr>\n<tr>\n<td>cv2.rectangle(img=black_img,pt1=(100,100),pt2=(400,300),color=(0,255,0),thickness=10)</td>\n<td>画一个矩形</td>\n</tr>\n<tr>\n<td>cv2.rectangle(img=black_img,pt1=(20,550),pt2=(220,750),color=(255,0,0),thickness=10)</td>\n<td>画一个正方形</td>\n</tr>\n<tr>\n<td>cv2.circle(img=black_img,center=(400,400),radius=100,color=(0,0,255),thickness=10)</td>\n<td>画一个圆</td>\n</tr>\n<tr>\n<td>cv2.circle(img=black_img,center=(500,600),radius=50,color=(0,0,255),thickness=-1)</td>\n<td>一个实心圆</td>\n</tr>\n<tr>\n<td>cv2.line(img=black_img,pt1=(0,0),pt2=(800,800),color=(255,0,255),thickness=10)</td>\n<td>画一条线</td>\n</tr>\n<tr>\n<td>cv2.putText(img=black_img,text=&quot;Python&quot;,org=(500,150),fontFace=font,fontScale=4,color=(255,0,255),thickness=5,lineType=cv2.LINE_AA)</td>\n<td>添加英文文字</td>\n</tr>\n<tr>\n<td>cv2.polylines(img=black_img,pts=[pts],isClosed=True,color=(255,0,255),thickness=10)</td>\n<td>画一个多边形</td>\n</tr>\n<tr>\n<td>cv2.VideoCapture(0)</td>\n<td>读取默认摄像头，后面的数字表示摄像头的编号，如果有多个摄像头可以换成其他数字</td>\n</tr>\n<tr>\n<td>cv2.destroyAllWindows()</td>\n<td>释放窗口资源</td>\n</tr>\n<tr>\n<td>cv2.VideoWriter('./myDemoVideo.mp4',cv2.VideoWriter_fourcc(*'X264'),fps,(width,height))</td>\n<td>存储摄像头视频流</td>\n</tr>\n<tr>\n<td>cv2.VideoCapture('./myDemoVideo.mp4')</td>\n<td>参数可以换成文件名，我们读取前面保存的 MP4 视频</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"opencv读取-缩放-翻转-写入图像\"><a class=\"anchor\" href=\"#opencv读取-缩放-翻转-写入图像\">#</a> OpenCV 读取、缩放、翻转、写入图像</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 导入必要的包</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">%</span>matplotlib inline</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 导入 opencv</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 使用 opencv 的 imread 方法，打开图片</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'./img/cat.jpg'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 检查类型，会发现自动转成了 Numpy 数组的形式</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 如果打开一张不存在的图片，不会报错，但是会返回空类型</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>img_wrong <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'./img/wrong.jpg'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 为什么会显示的这么奇怪？（OpenCV 和 matplotlib 默认的 RBG 顺序不一样）</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># matplotlib: R G B</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># opencv: B G R</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 需要调整顺序</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 将 OpenCV BGR 转换成 RGB，cv2.COLOR_可以看到更多转换形式</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>img_fixed <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 显示正常了</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_fixed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 另外，我们再读取图片时也可以以灰度模式读取</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>img_gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'./img/cat.jpg'</span><span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>IMREAD_GRAYSCALE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 只剩 2 个维度，没有了颜色通道</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>img_gray<span class=\"token punctuation\">.</span>shape</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># 显示这个灰度图</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_gray<span class=\"token punctuation\">,</span>cmap<span class=\"token operator\">=</span><span class=\"token string\">\"gray\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># 使用 resize 缩放（打开函数帮助）</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>img_resize <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>img_fixed<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># 显示缩放后的图片</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_resize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 翻转图片：0 表示垂直翻转、1 表示水平翻转，-1 表示水平垂直都翻转</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>img_flip <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>img_fixed<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_flip<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># 先将颜色通道顺序调回 OpenCV 的形式</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>img_save <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img_flip<span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>COLOR_RGB2BGR<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># 写入 numpy 格式的图片</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'./img_flip.jpg'</span><span class=\"token punctuation\">,</span> img_save<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"opencv绘制文字和几何图形\"><a class=\"anchor\" href=\"#opencv绘制文字和几何图形\">#</a> OpenCV 绘制文字和几何图形</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># OpenCV 绘制文字和几何图形</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 导入必要的包</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">%</span>matplotlib inline</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 创建一个纯黑色图，纯黑色就是图片的元素全部为 0，这里给一个数据类型为 Int16</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>black_img <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>int16<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 显示一下</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>black_img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 首先使用 OpenCV 画一个矩形</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 使用 cv2.rectangle 函数来创建，首先看一下这个函数的帮助文档 </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 可以看到分别是：thickness（线粗）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 那我们在刚才的黑色图片上创建一个矩形</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>img<span class=\"token operator\">=</span>black_img<span class=\"token punctuation\">,</span>pt1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pt2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>thickness<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 再画一个正方形在左下角</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>img<span class=\"token operator\">=</span>black_img<span class=\"token punctuation\">,</span>pt1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">550</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pt2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">220</span><span class=\"token punctuation\">,</span><span class=\"token number\">750</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>thickness<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 在使用 opencv.circle 方法画一个圆</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 看一下帮助文档分别是圆心、半径</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span>img<span class=\"token operator\">=</span>black_img<span class=\"token punctuation\">,</span>center<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>radius<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>thickness<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 换一个实心圆</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>circle<span class=\"token punctuation\">(</span>img<span class=\"token operator\">=</span>black_img<span class=\"token punctuation\">,</span>center<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>radius<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>thickness<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 再使用 opencv 的 line 函数画一条线，用法和矩形一样</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 我们沿着画面对角线画一条紫色线条</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>line<span class=\"token punctuation\">(</span>img<span class=\"token operator\">=</span>black_img<span class=\"token punctuation\">,</span>pt1<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pt2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>thickness<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 我们再使用 OpenCV 添加文字</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 首先是英文</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 定义字体</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>font <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>FONT_HERSHEY_PLAIN</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># 然后使用 puttext 方法</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>putText<span class=\"token punctuation\">(</span>img<span class=\"token operator\">=</span>black_img<span class=\"token punctuation\">,</span>text<span class=\"token operator\">=</span><span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">,</span>org<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>fontFace<span class=\"token operator\">=</span>font<span class=\"token punctuation\">,</span>fontScale<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>thickness<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>lineType<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>LINE_AA<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># 我们再用画一个多边形</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># 重新创建一个黑色图</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>black_img <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>black_img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 定义多边形顶点，这些顶点得以二维数据形式存储</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>points <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">700</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span>dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># 然后呢，opencv 比较麻烦，还需转换成三维数组格式</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>pts <span class=\"token operator\">=</span> points<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># 然后使用 OpenCV 的 polyline 方法创建，注意这里还需要用列表形式把点传过去</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>polylines<span class=\"token punctuation\">(</span>img<span class=\"token operator\">=</span>black_img<span class=\"token punctuation\">,</span>pts<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>pts<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>isClosed<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>thickness<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># 再说一下添加中文字体，这个比较麻烦，这里我已经写好了一个函数大家可以直接调用</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># 要注意两点：</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># 1、对应的字体要安装好或者放在目录下</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># 2、不像 cv2.puttext 可以直接生效，因为这里用了各种转换，所以需要用一个变量来保存结果</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># 导入 PIL 对应包</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageDraw<span class=\"token punctuation\">,</span> ImageFont</pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 定义一个函数</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">cv2AddChineseText</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> textColor<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> textSize<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    draw <span class=\"token operator\">=</span> ImageDraw<span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\"># 字体的格式</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    fontStyle <span class=\"token operator\">=</span> ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token string\">\"./font/simsun.ttc\"</span><span class=\"token punctuation\">,</span> textSize<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token comment\"># 绘制文本</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    draw<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> textColor<span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span>fontStyle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token comment\"># 转换回 OpenCV 格式</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">return</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2BGR<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>img_cat <span class=\"token operator\">=</span> cv2AddChineseText<span class=\"token punctuation\">(</span>img_cat<span class=\"token punctuation\">,</span> <span class=\"token string\">'阿宇'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> textColor<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> textSize<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>img_cat_fixed <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img_cat<span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img_cat_fixed<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"opencv读取摄像头视频流并显示\"><a class=\"anchor\" href=\"#opencv读取摄像头视频流并显示\">#</a> OpenCV 读取摄像头视频流，并显示</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OpenCV读取摄像头视频流，并显示</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>类似demo1.py中的显示图片</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 导入 OpenCV</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 使用 VideoCapture，读取默认摄像头，后面的数字表示摄像头的编号，如果有多个摄像头可以换成其他数字</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 再使用 cap.read () 读取视频流，类似照片，他会以一帧帧的图片返回，所以我们需要用一个循环语句来一直获取</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># 返回的是元组</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    ret<span class=\"token punctuation\">,</span>frame <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 这里可以把 frame 就当成图片来处理</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># 镜像</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\"># 颜色变为灰度</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># 显示图像</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'demo'</span><span class=\"token punctuation\">,</span>gray<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># 退出条件: ESC</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token number\">27</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"opencv读取摄像头视频流并存储为mp4文件\"><a class=\"anchor\" href=\"#opencv读取摄像头视频流并存储为mp4文件\">#</a> OpenCV 读取摄像头视频流，并存储为 MP4 文件</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OpenCV读取摄像头视频流，并存储为MP4文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 导入 OpenCV</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 读取默认摄像头</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># https://docs.opencv.org/4.x/dd/d43/tutorial_py_video_display.html</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>fps <span class=\"token operator\">=</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span> cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 这里使用 OpenCV 的 VideoWriter 方法来，我们看一下官网他是如何使用的</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 可以看到第一个参数是文件名，然后是 fourcc 编码，然后是 FPS 帧率，再是画面大小</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 这里需要注意的是 Fourcc 编码，我们再看一下文档，可以看到</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># Windows 系统建议用 DIVX 编码</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># macOS 系统建议永 MJPG、DIVX、X264</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 推荐用 X264、DIVX，一般 macOS 和 Windows 都试用</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 写法需要注意 *'X264'</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># FPS 帧率一般根据摄像头的帧率来填写，比如我的是 20</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 高度、宽度可以自定义，不过我们也可以直接和原画面一样，使用 cap.get 方法获取</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>writer <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span><span class=\"token string\">'./myDemoVideo.mp4'</span><span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token string\">'X264'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>fps<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># 读取视频</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    ret<span class=\"token punctuation\">,</span>frame <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># 这里可以把 frame 就当成图片来处理</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\"># 镜像</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    gray <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\"># 写入画面</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    writer<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\"># 显示图像</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'demo'</span><span class=\"token punctuation\">,</span>gray<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\"># 退出条件: ESC</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token number\">27</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># 释放句柄    </span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>writer<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"opencv读取mp4视频文件\"><a class=\"anchor\" href=\"#opencv读取mp4视频文件\">#</a> OpenCV 读取 mp4 视频文件</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OpenCV读取mp4视频文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 导入 OpenCV</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 还是使用 cv2.VideoCapture，只不过参数可以换成文件名，我们读取前面保存的 MP4 视频</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token string\">'./myDemoVideo.mp4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 首先加一个判断，如果文件不存在或编码错误提示</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> cap<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'文件不存在或编码错误'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">while</span> cap<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 读取帧</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    ret<span class=\"token punctuation\">,</span>frame <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> ret<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># 显示</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'demo'</span><span class=\"token punctuation\">,</span>frame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\"># 降低显示速度（不加这行会显示得特别快）</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"opencv读取摄像头视频视频流并在画面上绘制文字和图形\"><a class=\"anchor\" href=\"#opencv读取摄像头视频视频流并在画面上绘制文字和图形\">#</a> OpenCV 读取摄像头视频视频流，并在画面上绘制文字和图形</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"main.py\">\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>OpenCV 读取摄像头视频视频流，并在画面上绘制文字和图形</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 导入 OpenCV</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> drawUtils</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>left_x <span class=\"token operator\">=</span> width <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>left_y <span class=\"token operator\">=</span> height <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rect_w <span class=\"token operator\">=</span> width <span class=\"token operator\">//</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rect_h <span class=\"token operator\">=</span> height <span class=\"token operator\">//</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>start_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># 读取每一帧</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    ret<span class=\"token punctuation\">,</span>frame <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 绘制矩形</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>rectangle<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>left_x<span class=\"token punctuation\">,</span>left_y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>left_x<span class=\"token operator\">+</span>rect_w<span class=\"token punctuation\">,</span>left_y<span class=\"token operator\">+</span>rect_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># 计算 FPS</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    now <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    fps_text  <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span> now <span class=\"token operator\">-</span> start_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    start_time <span class=\"token operator\">=</span> now</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># 添加中文（首先导入模块）</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    frame <span class=\"token operator\">=</span> drawUtils<span class=\"token punctuation\">.</span>cv2AddChineseText<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> <span class=\"token string\">'帧率：'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>fps_text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> textColor<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> textSize<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\"># 显示画面</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'demo'</span><span class=\"token punctuation\">,</span>frame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\"># 退出条件</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token number\">27</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"drawUtils.py\">\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>绘制工具</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 导入 PIL 对应包</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image<span class=\"token punctuation\">,</span> ImageDraw<span class=\"token punctuation\">,</span> ImageFont</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 绘制中文</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">cv2AddChineseText</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> textColor<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> textSize<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    draw <span class=\"token operator\">=</span> ImageDraw<span class=\"token punctuation\">.</span>Draw<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># 字体的格式</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    fontStyle <span class=\"token operator\">=</span> ImageFont<span class=\"token punctuation\">.</span>truetype<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token string\">\"./font/simsun.ttc\"</span><span class=\"token punctuation\">,</span> textSize<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># 绘制文本</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    draw<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> textColor<span class=\"token punctuation\">,</span> font<span class=\"token operator\">=</span>fontStyle<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># 转换回 OpenCV 格式</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2BGR<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div>\n",
            "tags": [
                "人工智能",
                "基础知识",
                "python",
                "numpy"
            ]
        },
        {
            "id": "https://blog.aayu.today/artificial-intelligence/basic/20221027/",
            "url": "https://blog.aayu.today/artificial-intelligence/basic/20221027/",
            "title": "Python环境配置",
            "date_published": "2022-10-26T16:54:55.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>没想到我又回来了，后面我的研究课题估计和 Python 逃不脱关系，终于又重新拾起了这门语言，所以便从头开始，把一些值得记录的记录下来，努力努力，向梦想前进！</p>\n<h2 id=\"scoop安装miniconda\"><a class=\"anchor\" href=\"#scoop安装miniconda\">#</a> Scoop 安装 miniconda</h2>\n<p>我的开发环境是 windows，而 scoop 是 windows 上超好用的一个包管理工具，感兴趣的小伙伴可以看这篇博客（<a href=\"https://blog.aayu.today/skill/environment-configuration/20210123/\">重装系统后要干的几件事</a>）了解哟</p>\n<p>用下面一行命令即可安装 miniconda</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>scoop <span class=\"token function\">install</span> miniconda3</pre></td></tr></table></figure><p>安装完后重启一下 everything，即可用 wox 输入 <code>anaconda pow</code>  快速启动 anaconda 的 shell 了</p>\n<h2 id=\"conda常用命令\"><a class=\"anchor\" href=\"#conda常用命令\">#</a> conda 常用命令</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">conda --version</td>\n<td style=\"text-align:center\">查看 conda 的版本号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">conda env list</td>\n<td style=\"text-align:center\">列出所有环境</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">conda create --name 环境名称</td>\n<td style=\"text-align:center\">创建环境</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">conda create --name 环境名称 python=2.7</td>\n<td style=\"text-align:center\">创建指定 python 版本的环境</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">conda activate 环境名称</td>\n<td style=\"text-align:center\">进入环境</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">conda deactivate</td>\n<td style=\"text-align:center\">退出环境</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">conda remove --name 环境名称 --all</td>\n<td style=\"text-align:center\">删除环境，加 all 表示环境下的所有包一并被删除</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"conda换国内源\"><a class=\"anchor\" href=\"#conda换国内源\">#</a> conda 换国内源</h2>\n<p>创建用户配置文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda config --set show_channel_urls <span class=\"token function\">yes</span></pre></td></tr></table></figure><p>进入<span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvYW5hY29uZGEv\">清华大学开源软件镜像站</span>，复制配置内容到用户目录下刚创建的 <code>.condarc</code>  文件，要复制的配置内容如下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">channels</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> defaults</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">show_channel_urls</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">default_channels</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">-</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">custom_channels</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">conda-forge</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">msys2</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">bioconda</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token key atrule\">menpo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">pytorch</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">pytorch-lts</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">simpleitk</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</pre></td></tr></table></figure><div class=\"note info\">\n<p>注意，把 <code>.condarc</code>  文件默认的内容删掉</p>\n</div>\n<p>输入 <code>conda clean -i</code>  清除默认缓存，用 <code>conda config --show-sources</code>  查看配置是否更换成功</p>\n<h2 id=\"pip换国内源\"><a class=\"anchor\" href=\"#pip换国内源\">#</a> pip 换国内源</h2>\n<h3 id=\"临时换源不推荐\"><a class=\"anchor\" href=\"#临时换源不推荐\">#</a> 临时换源（不推荐）</h3>\n<p>可能要安装包里的依赖包下载依然缓慢</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> -i https://pypi.tuna.tsinghua.edu.cn/simple 包名</pre></td></tr></table></figure><h3 id=\"永久换源推荐\"><a class=\"anchor\" href=\"#永久换源推荐\">#</a> 永久换源（推荐）</h3>\n<ol>\n<li>在用户目录下创建 pip 文件夹（如：C:\\Users\\Administrator\\pip）</li>\n<li>在刚创建的 pip 文件夹下创建 <code>pip.ini</code>  文件</li>\n<li>把以下配置内容放到刚创建的 pip.ini 文件里</li>\n</ol>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">global</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">index-url</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">https://pypi.tuna.tsinghua.edu.cn/simple/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">install</span><span class=\"token punctuation\">]</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key attr-name\">trusted-host</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">pypi.tuna.tsinghua.edu.cn</span></pre></td></tr></table></figure><h2 id=\"安装opencv\"><a class=\"anchor\" href=\"#安装opencv\">#</a> 安装 opencv</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>conda <span class=\"token function\">install</span> opencv</pre></td></tr></table></figure><h2 id=\"安装mediapipe\"><a class=\"anchor\" href=\"#安装mediapipe\">#</a> 安装 mediapipe</h2>\n<p>mediapipe 在 conda 上没有，所以就用 pip 安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> mediapipe</pre></td></tr></table></figure><h2 id=\"运行手指骨骼检测demo\"><a class=\"anchor\" href=\"#运行手指骨骼检测demo\">#</a> 运行手指骨骼检测 demo</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>演示Demo</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 导入 opencv</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 导入 mediapipe：https://google.github.io/mediapipe/solutions/hands</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>mp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>mp_drawing_styles <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_styles</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>mp_hands <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>hands</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>hands <span class=\"token operator\">=</span> mp_hands<span class=\"token punctuation\">.</span>Hands<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    model_complexity<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 读取视频流</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 获取画面宽度、高度</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    ret<span class=\"token punctuation\">,</span>frame <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># 镜像</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    frame<span class=\"token punctuation\">.</span>flags<span class=\"token punctuation\">.</span>writeable <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\"># 识别</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    results <span class=\"token operator\">=</span> hands<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    frame<span class=\"token punctuation\">.</span>flags<span class=\"token punctuation\">.</span>writeable <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2BGR<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\"># 如果有结果</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>multi_hand_landmarks<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\"># 遍历双手</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">for</span> hand_landmarks <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>multi_hand_landmarks<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                frame<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                hand_landmarks<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                mp_hands<span class=\"token punctuation\">.</span>HAND_CONNECTIONS<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_hand_landmarks_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_hand_connections_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\"># 显示画面</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'demo'</span><span class=\"token punctuation\">,</span>frame<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>destroyAllWindows<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"运行结果\"><a class=\"anchor\" href=\"#运行结果\">#</a> 运行结果</h2>\n<p>哈哈，一个帅气的 <code>午</code> 印就被检测出来啦</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/10/27/202210270141776.png\" alt=\"\" /></p>\n",
            "tags": [
                "人工智能",
                "基础知识",
                "python",
                "conda"
            ]
        },
        {
            "id": "https://blog.aayu.today/leisure/delicious-food/20221022/",
            "url": "https://blog.aayu.today/leisure/delicious-food/20221022/",
            "title": "人间有味是清欢",
            "date_published": "2022-10-21T16:58:49.000Z",
            "content_html": "<h2 id=\"典故\"><a class=\"anchor\" href=\"#典故\">#</a> 典故</h2>\n<p>「 人间有味是清欢 」出自宋代苏轼的《浣溪沙・细雨斜风作晓寒》。清欢的意思是清淡的欢愉。</p>\n<p>全文如下：</p>\n<p>细雨斜风作晓寒，淡烟疏柳媚晴滩。入淮清洛渐漫漫。</p>\n<p>雪沫乳花浮午盏，蓼茸蒿笋试春盘。<span class=\"orange\">人间有味是清欢</span>。</p>\n<p>白话译文：</p>\n<p>冬天早晨细雨斜风天气微寒，淡淡的烟雾和稀疏的杨柳使初晴后的沙滩更妩媚。洛涧入淮后水势一片茫茫。</p>\n<p>乳色鲜白的好茶伴着新鲜如翡翠般的春蔬，这野餐的味道着实不错。而人间真正有滋味的还是清淡的欢愉。</p>\n<p>这是一首纪游词，是以时间为序来铺叙景物的。上片写早春景象，下片写作者与同游者游山时以清茶野餐的风味。作品充满春天的气息，洋溢着生命的活力，反映了作者对现实生活的热爱和健胜进取的精神。「 人间有味是清欢 」，这是一个具有哲理性的命题，用词的结尾，却自然浑成，有照彻全篇之妙趣，为全篇增添了欢乐情调和诗味、理趣。</p>\n<h2 id=\"望尝尽天下美食\"><a class=\"anchor\" href=\"#望尝尽天下美食\">#</a> 望尝尽天下美食</h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWhHNHkxSDdrZw==\">虾滑鸡翅</span></label></li>\n</ul>\n<h2 id=\"参考资料\"><a class=\"anchor\" href=\"#参考资料\">#</a> 参考资料</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNTg4NjA2NjE=\">经典美食诗词合集</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aGlkYW8uYmFpZHUuY29tL3F1ZXN0aW9uLzM3MzU4NzIzOS5odG1s\">“人间有味是清欢” 出自哪里？“清欢” 怎么解释？</span></li>\n</ul>\n",
            "tags": [
                "清风明月",
                "美食",
                "美食"
            ]
        },
        {
            "id": "https://blog.aayu.today/resources/20221022/",
            "url": "https://blog.aayu.today/resources/20221022/",
            "title": "🕹️电子类资源汇总~",
            "date_published": "2022-10-21T16:33:56.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>我宣布，B 站是最好的学习平台 😎，但在 B 站上用收藏夹管理学习的知识总是不方便，各种分类啊什么的，收藏夹一多，就更乱了。既然我有博客，我为啥不在博客里列个目录呢，完全可以按照自己的想法分类和整理，所以便有了本篇博客，也方便后期自己进行回顾～～</p>\n<h2 id=\"电子电路基础\"><a class=\"anchor\" href=\"#电子电路基础\">#</a> 电子电路基础</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"科普\">\n<ul class=\"task-list\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWFhNDExZzc2VQ==\">电子电路入门没你想的那么简（复）单（杂）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWszNDExVzdxeA==\">新手如何入门硬件 一本正经的电子电路入门</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXFnNDExUzdWRw==\">锂电池充电的同时也能放电吗？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVFyNHkxVDdiNQ==\">再复杂的芯片，也离不开这 8 种基础电路</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW81NHkxcDd4bw==\">OLED 和 LCD 屏幕最本质的区别，一个视频让你彻底搞懂！</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW02NHkxRDdnYg==\">逆变！逆变！直流电如何变为交流电，一分钟动画让你看懂！</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUZxNHkxNzd3bQ==\">数码管如何工作？超形象动画让你一看就懂</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXJWNDExczdlWQ==\">从 1 万纳米到 5 纳米，只用了 50 年！平面晶体管和三维立体场效应管的区别？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVRLNHkxZzdHUA==\">6 年了，问世即巅峰的雷电 3 为何还不普及？</span></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVRoNDExaDc5eQ==\">火线零线和地线到底有什么区别？接地接到哪了？</span></label></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"基础元器件\">\n<ul class=\"task-list\">\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUZYNHkxVDdOeg==\">半导体为什么叫半导体？它是如何导电的？原理非常简单，知道的人却不多！</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWt2NDExNTc0WQ==\">三极管是如何导电？超形象动画让你一看就懂！</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUpxNHkxRTdRWg==\">三极管的饱和与放大</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTM0NHkxNjdxbQ==\">Mos 管的工作原理</span></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTQ4NHkxYzdMdA==\">为什么芯片都是 CMOS 的呢？CMOS 和 TTL 有什么区别？TTL 与 CMOS 的高低电平的标准是多少（5V 为例）？</span></label></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"电路设计\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUh2NHkxZjd3aA==\">芯片虽然复杂，但是内部电路不难、一看就懂</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTExNHkxczdTWg==\">如何设计一个锂电池充电电路</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXQ2NHkxYjd3Nw==\">怎么把 12V 电降到 5V？直流线性稳压降压电源原理</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTY0NHkxcTc0dw==\">直流电 12V 变 5V 开关电源的工作原理 DC DC 降压稳压电路的基本原理</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWlNNHkxSzdpRw==\">怎么把 5V 电升到 12V？开关电源 BOOST 升压原理</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVlRNHkxZjdQMQ==\">最简单，只要一个元器件，把 12V 降到 5V</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXhYNHkxRjdMcA==\">电荷泵升压原理</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXdONHkxUDc1bg==\">双控灯原理</span></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"面试相关\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVFmNHkxNjdoNg==\">10 道题看你能答对 2 道，大多数只能答对 1 道题，硬件工程师面试真题</span></li>\n</ul>\n</div>\n",
            "tags": [
                "电子"
            ]
        },
        {
            "id": "https://blog.aayu.today/resources/20221017/",
            "url": "https://blog.aayu.today/resources/20221017/",
            "title": "🎨设计创作类资源汇总~",
            "date_published": "2022-10-17T12:37:51.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>我宣布，B 站是最好的学习平台 😎，但在 B 站上用收藏夹管理学习的知识总是不方便，各种分类啊什么的，收藏夹一多，就更乱了。既然我有博客，我为啥不在博客里列个目录呢，完全可以按照自己的想法分类和整理，所以便有了本篇博客，也方便后期自己进行回顾～～</p>\n<h2 id=\"ps\"><a class=\"anchor\" href=\"#ps\">#</a> PS</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"技巧篇\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWllNHkxbzdMNg==\">1 分钟用 PS，你能把这张脸磨皮磨到吹弹可破吗？</span></li>\n</ul>\n</div>\n",
            "tags": [
                "PS"
            ]
        },
        {
            "id": "https://blog.aayu.today/resources/20221016/",
            "url": "https://blog.aayu.today/resources/20221016/",
            "title": "🛩️无人机资源汇总~",
            "date_published": "2022-10-16T12:31:20.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>我宣布，B 站是最好的学习平台 😎，但在 B 站上用收藏夹管理学习的知识总是不方便，各种分类啊什么的，收藏夹一多，就更乱了。既然我有博客，我为啥不在博客里列个目录呢，完全可以按照自己的想法分类和整理，所以便有了本篇博客，也方便后期自己进行回顾～～</p>\n<h2 id=\"穿越机专栏\"><a class=\"anchor\" href=\"#穿越机专栏\">#</a> 穿越机专栏</h2>\n<div class=\"tab\" data-id=\"id1\" data-title=\"装机\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMThMNHkxQTdYdg==\">【教程】怪象 25 装机教程</span></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"接收机\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXpMNDExajd3Zw==\">ELRS 高频头选配 + 接线 + 对频 + 调参 + 资源下载</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwcmVzc2xycy5vcmcvMi4wL3F1aWNrLXN0YXJ0L3RyYW5zbWl0dGVycy9sdWEtaG93dG8v\">ELRS LUA 脚本官方文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3JlYWQvY3YxMjg5MjAyNw==\">【讲解】ExpressLRS 讲解</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUJRNHkxcjd3ZQ==\">【讲解】ELRS 高频头</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ZwdmJhbmcuY29tL2ZvcnVtLnBocD9tb2Q9dmlld3RocmVhZCZhbXA7dGlkPTIxNzU=\">【教程】ELRS 固件刷写更新</span></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"图传\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2poZW1jdS9GQy1FU0MtRmlybXdhcmUvYmxvYi9tYWluL1ZUWDIwLTYwMC9WVFgyMC02MDAlMjBKU09OLnJhcg==\">VTX20-600 图传 JSON 表</span></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"遥控器\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUVQNHkxMzd2RA==\">刷机以及救砖教程</span></li>\n<li><a href=\"https://blog.aayu.today/fpv/20221127/\">开源遥控器设置自定义语音包教程</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXRlNDExVzdDTD9wPTI=\">遥控器声音改成萌妹子教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUJONDExOTdCOA==\">开源遥控器基础设定设置：开启通道映射，设置拨杆开关语音</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWk1NDExbTdxaw==\">穿越机打杆讲解</span></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"地面站\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3JlYWQvY3YzNTU0NTEwLw==\">Betaflight 各种模式详解</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWF0NDExNTdHOA==\">飞控陀螺仪和 UART 口消失解决方案</span></li>\n</ul>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"充电器\">\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUI0NDExdjdTSA==\">IMAX B6 智能平衡充电器使用教程</span></li>\n</ul>\n</div>\n",
            "tags": [
                "FPV"
            ]
        },
        {
            "id": "https://blog.aayu.today/english/grammar/20221005/",
            "url": "https://blog.aayu.today/english/grammar/20221005/",
            "title": "英语语法学习（3）：动词时态",
            "date_published": "2022-10-04T17:07:04.000Z",
            "content_html": "<h2 id=\"视频讲解\"><a class=\"anchor\" href=\"#视频讲解\">#</a> 视频讲解</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhZNDExSjdhRz9wPTQ=\">【英语兔】英语语法精讲合集 (全面，通俗，有趣 | 从零打造系统语法体系)：动词时态</span></p>\n<h2 id=\"一表总结\"><a class=\"anchor\" href=\"#一表总结\">#</a> 一表总结</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">一般</th>\n<th style=\"text-align:center\">进行</th>\n<th style=\"text-align:center\">完成</th>\n<th style=\"text-align:center\">完成进行</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">现在</td>\n<td style=\"text-align:center\">一般现在时态 eat/eats</td>\n<td style=\"text-align:center\">现在进行时态 am/is/are eating</td>\n<td style=\"text-align:center\">现在完成时态 has/have eaten</td>\n<td style=\"text-align:center\">现在完成进行时态 has/have been eating</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">过去</td>\n<td style=\"text-align:center\">一般过去时态 ate</td>\n<td style=\"text-align:center\">过去进行时态 was/were eating</td>\n<td style=\"text-align:center\">过去完成时态 had eaten</td>\n<td style=\"text-align:center\">过去完成进行时态 had been eating</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">将来</td>\n<td style=\"text-align:center\">一般将来时态 will eat</td>\n<td style=\"text-align:center\">将来进行时态 will be eating</td>\n<td style=\"text-align:center\">将来完成时态 will have eaten</td>\n<td style=\"text-align:center\">将来完成进行时态 will have been eating</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">过去将来</td>\n<td style=\"text-align:center\">一般过去将来时态 would eat</td>\n<td style=\"text-align:center\">过去将来进行时态 would be eating</td>\n<td style=\"text-align:center\">过去将来完成时态 would have eaten</td>\n<td style=\"text-align:center\">过去将来完成进行时态 would have been eating</td>\n</tr>\n</tbody>\n</table>\n<div class=\"note primary\">\n<p>will 往往也可以用 shall，有微妙区别，此处略过</p>\n</div>\n<h2 id=\"基本概念\"><a class=\"anchor\" href=\"#基本概念\">#</a> 基本概念</h2>\n<p><span class=\"green\">时</span><span class=\"orange\">态</span> = 动作的<span class=\"green\">时间</span> + 动作的<span class=\"orange\">状态</span></p>\n<h3 id=\"动词时间\"><a class=\"anchor\" href=\"#动词时间\">#</a> 动词时间</h3>\n<ul>\n<li>现在</li>\n<li>过去</li>\n<li>将来</li>\n<li>过去将来</li>\n</ul>\n<p><code>过去将来</code> 时态对应现实中的🌰： <code>前天我认为后天不会下雨</code> 。这里就是以前自己感觉中的将来。</p>\n<h3 id=\"动词状态\"><a class=\"anchor\" href=\"#动词状态\">#</a> 动词状态</h3>\n<ul>\n<li>进行态。举个🌰：这只兔子正在吃着胡萝卜</li>\n<li>完成态。举个🌰：这兔子吃掉了胡萝卜</li>\n<li>完成进行态。举个🌰：这兔子从早上就开始吃胡萝卜，现在还没停呢</li>\n<li>一般态。可以用来描述客观事实</li>\n</ul>\n<p><code>过去将来完成进行</code> 时态对应现实中的🌰： <code>老板上周叫我这周至少做完10页，我这不正加班赶着呢吗</code> 。</p>\n<h2 id=\"时态的四大难点\"><a class=\"anchor\" href=\"#时态的四大难点\">#</a> 时态的四大难点</h2>\n<ul>\n<li>难点 1：时＆态未分清</li>\n<li>难点 2：动词变位</li>\n<li>难点 3：助动词</li>\n<li>难点 4：与其他语法概念混合</li>\n</ul>\n<h2 id=\"排列组合开始\"><a class=\"anchor\" href=\"#排列组合开始\">#</a> 排列组合开始</h2>\n<h3 id=\"现在时态\"><a class=\"anchor\" href=\"#现在时态\">#</a> 现在时态</h3>\n<div class=\"tab\" data-id=\"id1\" data-title=\"现在进行时\">\n<div class=\"note info\">\n<p>现在进行时（Present Progressive Tense）</p>\n</div>\n<p>这兔子现在正在吃胡萝卜</p>\n<p>谓语动词：</p>\n<p>举个🌰：</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"现在完成时\">\n<div class=\"note info\">\n<p>现在完成时（Present Perfect Tense）</p>\n</div>\n<p>这兔子现在已经吃完了胡萝卜</p>\n<p>谓语动词：</p>\n<p>举个🌰：</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"现在完成进行时\">\n<div class=\"note info\">\n<p>现在完成进行时（Present Perfect Progressive Tense）</p>\n</div>\n<p>这兔子现在已经吃完了胡萝卜，还要继续吃</p>\n<p>谓语动词：</p>\n<p>举个🌰：</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"现在一般时\">\n<div class=\"note info\">\n<p>现在一般时（Persent Simple Tense），或称 <code>一般现在时态</code></p>\n</div>\n<p>谓语动词：</p>\n<ul>\n<li>动词原形</li>\n<li>动词原形 + s（第三人称单数）</li>\n</ul>\n<p>举个🌰：</p>\n<ul>\n<li>I/You/We eat carrots.</li>\n<li>She eat<span class=\"orange\">s</span> carrots.</li>\n<li>The rabbit eat<span class=\"orange\">s</span> carrot.</li>\n</ul>\n<div class=\"note warning\">\n<p>易错点： <code>现在</code> 表示时间，不能和 <code>进行</code> 状态搞混</p>\n</div>\n<p>一般现在时常见的三种情况：</p>\n<ul>\n<li>表达事实\n<ul>\n<li>I eat carrot<span class=\"orange\">s</span>. 我吃胡萝卜：我是吃胡萝卜这种食物的（这个是<span class=\"orange\">事实</span>陈述）</li>\n<li>The rabbit eats carrot<span class=\"orange\">s</span>. 兔子吃胡萝卜：兔子是吃胡萝卜的动物（也是<span class=\"orange\">事实</span>陈述）</li>\n<li>The sun rises in the east. 太阳从东边升起</li>\n<li>The earth revolves around the sun. 地球绕太阳转</li>\n<li>You like Papa Rabbit. 你喜欢兔老爹</li>\n</ul>\n</li>\n<li>表达习惯 / 重复的动作\n<ul>\n<li>I play basketball. 我打篮球（我有这个习惯）</li>\n</ul>\n</li>\n<li>表示预计发生的事\n<ul>\n<li>The bus leaves at 8PM <span class=\"green\">every day</span>. 公车<span class=\"green\">每晚</span>八点离站。</li>\n</ul>\n</li>\n</ul>\n</div>\n<h3 id=\"过去时态\"><a class=\"anchor\" href=\"#过去时态\">#</a> 过去时态</h3>\n<div class=\"tab\" data-id=\"id2\" data-title=\"过去进行时\">\n<div class=\"note info\">\n<p>过去进行时（Past Progressive Tense）</p>\n</div>\n<p>这兔子昨天下午 3 点那个时候正在吃胡萝卜</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"过去完成时\">\n<div class=\"note info\">\n<p>过去完成时（Past Perfect Tense）</p>\n</div>\n<p>这兔子昨天下午 3 点那个时候已经吃完了胡萝卜</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"过去完成进行时\">\n<div class=\"note info\">\n<p>过去完成进行时（Past Perfect Progressive Tense）</p>\n</div>\n<p>这兔子昨天下午 3 点那个时候已经吃完了胡萝卜，还要继续吃</p>\n</div>\n<div class=\"tab\" data-id=\"id2\" data-title=\"过去一般时\">\n<div class=\"note info\">\n<p>过去一般时（Past Simple Tense）</p>\n</div>\n<p>或称 <code>一般过去时</code> 。兔子过去吃胡萝卜</p>\n</div>\n<h3 id=\"将来时态\"><a class=\"anchor\" href=\"#将来时态\">#</a> 将来时态</h3>\n<div class=\"tab\" data-id=\"id3\" data-title=\"将来进行时\">\n<div class=\"note info\">\n<p>将来进行时（Future Progressive Tense）</p>\n</div>\n<p>这兔子明天下午 3 点那个时候会正在吃胡萝卜</p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"将来完成时\">\n<div class=\"note info\">\n<p>将来完成时（Future Perfect Tense）</p>\n</div>\n<p>这兔子明天下午 3 点那个时候会已经吃完了胡萝卜</p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"将来完成进行时\">\n<div class=\"note info\">\n<p>将来完成进行时（Future Perfect Progressive Tense）</p>\n</div>\n<p>这兔子明天下午 3 点那个时候已经吃完了一些胡萝卜，还要继续吃</p>\n</div>\n<div class=\"tab\" data-id=\"id3\" data-title=\"将来一般时\">\n<div class=\"note info\">\n<p>将来一般时（Future Simple Tense）</p>\n</div>\n<p>或称 <code>一般将来时</code> 。兔子将来吃胡萝卜</p>\n</div>\n<h3 id=\"过去时态-2\"><a class=\"anchor\" href=\"#过去时态-2\">#</a> 过去时态</h3>\n<div class=\"tab\" data-id=\"id4\" data-title=\"过去将来进行时\">\n<div class=\"note info\">\n<p>过去将来进行时（Past Future Tense）</p>\n</div>\n</div>\n<div class=\"tab\" data-id=\"id4\" data-title=\"过去将来完成时\">\n<div class=\"note info\">\n<p>过去将来完成时（Past Future Perfect Tense）</p>\n</div>\n</div>\n<div class=\"tab\" data-id=\"id4\" data-title=\"过去将来完成进行时态\">\n<div class=\"note info\">\n<p>过去将来完成进行时态（Past Future Perfect Progressive Tense）</p>\n</div>\n</div>\n<div class=\"tab\" data-id=\"id4\" data-title=\"过去将来一般时态\">\n<div class=\"note info\">\n<p>过去将来一般时态（Past Future Simple Tense）</p>\n</div>\n</div>\n",
            "tags": [
                "英语学习之路",
                "语法学习",
                "英语语法学习"
            ]
        },
        {
            "id": "https://blog.aayu.today/hardware/iot/20220920/",
            "url": "https://blog.aayu.today/hardware/iot/20220920/",
            "title": "移远BC28模块连接华为云IoT平台",
            "date_published": "2022-09-20T15:38:07.000Z",
            "content_html": "<h2 id=\"基础命令\"><a class=\"anchor\" href=\"#基础命令\">#</a> 基础命令</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">AT+CFUN=1</td>\n<td style=\"text-align:center\">开启射频（全功能模式）。如果关闭了自动连接默认 + CFUN:0，需要手动开启</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AT+NCCID</td>\n<td style=\"text-align:center\">读取 SIM 卡 ID，如果能返回 + NCCID: 开头的一串 ID，证明 SIM 与 NB-IoT 设备的物理连接没问题（不能排除卡欠费等问题）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AT+CGATT=1</td>\n<td style=\"text-align:center\">让 NB-IoT 设备去附着网络</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AT+CSQ</td>\n<td style=\"text-align:center\">查询卡信号，如果是 + CSQ:99,99，表示当前没信号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AT+CGSN=1</td>\n<td style=\"text-align:center\">返回 IMEI（国际移动设备识别码）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AT+CIMI</td>\n<td style=\"text-align:center\">获得 IMSI。用来读取或者识别 SIM 卡的 IMSI（国际移动签署者标识），识别移动设备附带的 SIM 卡标识。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">AT+CEREG?</td>\n<td style=\"text-align:center\">查询 NB 网络注册状态，+CEREG:0,1 表示已注册到归属网络</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"连接教程\"><a class=\"anchor\" href=\"#连接教程\">#</a> 连接教程</h2>\n<p>待更，先放一个大概步骤吧，后续有空再整理</p>\n<ol>\n<li>AT</li>\n<li>AT+CFUN? 是否开启了频射</li>\n<li>AT+CFUN=1 开启频射</li>\n<li>AT+CGATT? 是否附着网络</li>\n<li>AT+CGATT=1 附着网络</li>\n<li>AT+CSQ 查询信号强度</li>\n<li>AT+NCCID 物联网卡是否正常接入</li>\n<li>AT+CGSN=1 查询设备标识码</li>\n</ol>\n<div class=\"note info\">\n<p>查看配置项<br />\n AT+QMTCFG=?<br />\nAT+QMTCFG=&quot;version&quot;,0</p>\n</div>\n<ol start=\"9\">\n<li>AT+QMTCFG=&quot;version&quot;,0,4 设置 MQTT 版本为 3.1.1</li>\n<li>AT+QMTOPEN=0,&quot;<span class=\"exturl\" data-url=\"aHR0cDovLzNmOWU4NWI0MGEuaW90LW1xdHRzLmNuLW5vcnRoLTQubXlodWF3ZWljbG91ZC5jb20=\">3f9e85b40a.iot-mqtts.cn-north-4.myhuaweicloud.com</span>&quot;,1883</li>\n<li>AT+QMTCONN=0,&quot;&lt;ClientId&gt;&quot;,&quot;&lt;Username&gt;&quot;,&quot;&lt;Password&gt;&quot;</li>\n<li>AT+QMTSUB=0,1,&quot;$oc/devices/&lt;device_id&gt;/user/messages/up&quot;,0 订阅消息</li>\n</ol>\n<div class=\"note warning\">\n<p>华为云物联网平台不能直接订阅预设的 Topic：AT+QMTSUB=0,1,&quot;$oc/devices/&lt;device_id&gt;/sys/messages/up&quot;,0</p>\n</div>\n<ol start=\"13\">\n<li>AT+QMTPUB=0,0,0,0,&quot;$oc/devices/&lt;device_id&gt;/user/messages/up&quot; 发布消息</li>\n</ol>\n<div class=\"note info\">\n<p>此处被坑惨了</p>\n</div>\n<h2 id=\"被坑笔记\"><a class=\"anchor\" href=\"#被坑笔记\">#</a> 被坑笔记</h2>\n<p>哇，真的是被坑惨了，我用的是 BC28 模块，整个 MQTT 连接流程走下来，就一直卡在用  <code>AT+QMTPUB=</code>  命令发布消息这里，我这里参考了  <code>Quectel_BC26BC20_MQTT_应用指导_V1.0</code>  BC26 的 MQTT 应用指导手册，其中对  <code>AT+QMTPUB=</code>  命令的介绍如下图</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/09/21/202209210236879.png\" alt=\"\" /></p>\n<p>我死活无法用  <code>AT+QMTPUB=&lt;TCP_connectID&gt;,&lt;msgID&gt;,&lt;qos&gt;,&lt;retain&gt;,&quot;&lt;topic&gt;&quot;,&quot;&lt;msg&gt;&quot;</code>  这个命令来直接发布消息，QCOM 客户端直接给我返回  <code>ERROR</code> ，看到这个 ERROR 我都要欲哭无泪了，为啥啊，为啥我不能一次性发布消息，如果用上图所示的  <code>进入数据模式</code>  发布消息，我又咋在代码里面按  <code>Ctrl+Z</code>  结束发送呢，哭死</p>\n<div class=\"note info\">\n<p>在找资料过程中的一个意外收获，在出现 &gt; 这个符号后，发送完自己想发送的数据后，直接用（HEX String）模式（针对 QCOM 客户端），也是就 16 进制模式发送 1A 字符串，就可以结束发送啦，这样用代码也就可以实现了  <code>进入数据模式</code>  的发布消息命令了，真的是最后一根稻草了</p>\n</div>\n<p>我就找啊找，找啊找，根本就在网上找不到相关的帖子说 BC28 模块的  <code>AT+QMTPUB=</code>  命令报错，呜呜呜，但天无绝人之路，就在我以为是我的 BC28 模块的固件版本太老，想升级固件，用  <code>BC28JAR01A08</code>  为关键字在 Bing 上搜索，终于让我找到一个相关的帖子：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bXMucXVlY3RlbC5jb20vdC9iYzI2LW1xdHQtb2stYmMyOC1mYWlsLzQxNDg=\">BC26 MQTT OK BC28 Fail</span> 说这事了，真的流泪了</p>\n<p>移远的技术支持也好心的回复了这个帖子</p>\n<blockquote>\n<p>BC28 Special characters are not supported.<br />\nYou can use the following modes to publish messages.<br />\nAT+QMTPUB=,,,,&quot;&quot; After “&gt;” is responded, input the data to be sent. Tap “CTRL+Z” to send, and tap “ESC” to cancel the operation.</p>\n</blockquote>\n<p>原来真的是 BC28 不支持直接发布消息的命令啊，知道真相的我眼泪掉下来。总之，这个坑也真的是让我花了一晚上的时间去查找资料，还是很有必要在这记录下来的，生活不易，猫猫叹气</p>\n<h2 id=\"参考链接\"><a class=\"anchor\" href=\"#参考链接\">#</a> 参考链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2Jsb2dzLzE5MTcwNg==\">BC35/BC28 无法入网的原因及排错方法</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bXMucXVlY3RlbC5jb20vdC9iYzI2LW1xdHQtb2stYmMyOC1mYWlsLzQxNDg=\">BC26 MQTT OK BC28 Fail</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYXNuYWlsL3AvMTI4MTAzNTkuaHRtbA==\">BC26 之 MQTT 协议 AT 命令</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3RpYW50YW5nbW9rZS9hcnRpY2xlL2RldGFpbHMvOTI3ODk4MDE=\">BC28 使用 MQTT 协议 连接 OneNET 平台的流程解析</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2ZvcnVtL3RocmVhZC0xOTU2MDAtMS0xLmh0bWw=\">为什么 NB-IOT 模组在华为云平台一直显示未激活？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeHltbS5uZXQvYXJ0aWNsZS9xcV80MTI5ODI0NS8xMDY4MDMyOTg=\">BC28_MQTT 调试笔记</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2hlbHBpbmZvL2FydGljbGUvZGV0YWlscy8xMTkzNDE5NTE=\">移远 BC20 连接 MQTT 服务器小记</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTQ3NTQ4NDEvYXJ0aWNsZS9kZXRhaWxzLzg0NTczMTc4\">物联网 - 移远 M26 模块 MQTT 开发（AT 命令）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2ZvcnVtL3RocmVhZC0xOTAxNTQtMS0xLmh0bWw=\">【BC28】【注册网络】AT+NMSTATUS 查询出现的状态分别代表什么意思</span></li>\n</ul>\n<h2 id=\"低功耗模式相关问题链接\"><a class=\"anchor\" href=\"#低功耗模式相关问题链接\">#</a> 低功耗模式相关问题链接</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2ZvcnVtL3RocmVhZC0xNjY5My0xLTEuaHRtbA==\">BC35-G 模块的初始化流程，基于 COAP 协议，怎么优化更好？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2ZvcnVtL3RocmVhZC0xODU2Mi0xLTEuaHRtbA==\">BC28 PSM 进入问题</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2ZvcnVtL3RocmVhZC0zNDMxMy0xLTEuaHRtbA==\">你们的移动 NB 卡，PSM 模式下 54 分钟会自动唤醒一次吗？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuaHVhd2VpY2xvdWQuY29tL2ZvcnVtL3RocmVhZC0xMjMzMzAtMS0xLmh0bWw=\">移远 BC28 模块进入 PSM 模式后功耗较大，且还能进行 AT 指令的回复</span></li>\n</ul>\n",
            "tags": [
                "硬件修炼手册",
                "物联网",
                "IoT",
                "BC28"
            ]
        },
        {
            "id": "https://blog.aayu.today/resources/20220919/",
            "url": "https://blog.aayu.today/resources/20220919/",
            "title": "🌌知识的海洋~",
            "date_published": "2022-09-19T12:19:14.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>我宣布，B 站是最好的学习平台 😎，但在 B 站上用收藏夹管理学习的知识总是不方便，各种分类啊什么的，收藏夹一多，就更乱了。既然我有博客，我为啥不在博客里列个目录呢，完全可以按照自己的想法分类和整理，所以便有了本篇博客，也方便后期自己进行回顾～～</p>\n<h2 id=\"知识汇总\"><a class=\"anchor\" href=\"#知识汇总\">#</a> 知识汇总</h2>\n<ul>\n<li><a href=\"../../../2022/2022-10/2022-10-16/%E6%97%A0%E4%BA%BA%E6%9C%BA%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB~.md\">无人机资源汇总～</a></li>\n<li><a href=\"../../../2022/2022-10/2022-10-17/%E8%AE%BE%E8%AE%A1%E5%88%9B%E4%BD%9C%E7%B1%BB%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB~.md\">设计创作类资源汇总～</a></li>\n</ul>\n<h2 id=\"正在学习\"><a class=\"anchor\" href=\"#正在学习\">#</a> 正在学习</h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL2NoZWVzZS9wbGF5L3NzODY1\">阿奇讲 SOLIDWORKS 机械臂大作战（2/29）</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdHVkeS4xNjMuY29tL2NvdXJzZS9jb3Vyc2VNYWluLmh0bT9jb3Vyc2VJZD0xMjA4ODk0ODE4\">深度学习与 PyTorch（34/155）</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWRTNHkxeTd2ZA==\">Vue3 + vite + Ts + pinia + 实战 + 源码 +electron（82/111）</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RpbmcuaW1vb2MuY29tL2xlYXJuL2xpc3QvMzI5Lmh0bWw=\">WebRTC 实时互动直播技术入门与实战（2-1/18-1）</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2lraWVkdS5jb20vbXkvY291cnNlLzEwOTU=\">Unity 地球公转仿真演示第一季（1/29）</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTd6NDExaTdlcg==\">【野火】FPGA 系列教学视频（2/236）</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\" /><label for=\"cbx_6\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWszNHkxbTdMeQ==\">即时设计（2/14）</span></label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\" /><label for=\"cbx_7\"> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVp4NDExeTdHSj9wPTE=\">硬笔行书教程（1/24）</span></label></li>\n</ul>\n",
            "tags": [
                "知识"
            ]
        },
        {
            "id": "https://blog.aayu.today/english/grammar/20220917/",
            "url": "https://blog.aayu.today/english/grammar/20220917/",
            "title": "英语语法学习（2）：动词分类",
            "date_published": "2022-09-17T12:09:21.000Z",
            "content_html": "<h2 id=\"视频讲解\"><a class=\"anchor\" href=\"#视频讲解\">#</a> 视频讲解</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhZNDExSjdhRz9wPTM=\">【英语兔】英语语法精讲合集 (全面，通俗，有趣 | 从零打造系统语法体系)：动词分类</span></p>\n<h2 id=\"五大谓语动词-五大句型\"><a class=\"anchor\" href=\"#五大谓语动词-五大句型\">#</a> 五大谓语动词 ➤ 五大句型</h2>\n<ul>\n<li><code>不及物动词</code>  - 无需动作承受者： <code>The rabbit slept.</code>  兔子睡了</li>\n<li><code>单及物动词</code>  - 有一个宾语且无需补充信息： <code>The rabbit ate a carrot.</code>  兔子吃了根胡萝卜</li>\n<li><code>双及物动词</code>  - 有两个宾语： <code>The rabbit gave the wolf a carrot.</code>  兔子给了狼一根胡萝卜</li>\n<li><code>复杂及物动词</code>  - 有一个宾语且需要补充信息： <code>The rabbit considered the carrot tasty.</code>  兔子认为这胡萝卜好吃</li>\n<li><code>系动词</code>  - 赋予状态 / 性质的系动词： <code>The rabbit is smart.</code>  兔子聪明</li>\n</ul>\n<p>无需动作承受者被称为 <code>不及物动词</code> ，带宾语的被称为 <code>及物动词</code></p>\n<h2 id=\"动词分类\"><a class=\"anchor\" href=\"#动词分类\">#</a> 动词分类</h2>\n<ol>\n<li>可做谓语动词</li>\n</ol>\n<ul>\n<li>实义动词\n<ul>\n<li>（按动作承受者划分）\n<ul>\n<li>及物动词</li>\n<li>不及物动词</li>\n</ul>\n</li>\n<li>（按动作状态划分）\n<ul>\n<li>动作动词，如 <code>eat</code></li>\n<li>状态动词，如 <code>have</code>  表示 <code>有</code> 、 <code>feel</code>  表示 <code>感觉</code> 、 <code>own</code>  表示 <code>拥有</code> 、 <code>believe</code>  表示 <code>相信</code> 等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>（连）系动词</li>\n</ul>\n<ol start=\"2\">\n<li>可辅助构成谓语动词</li>\n</ol>\n<ul>\n<li>助动词</li>\n<li>情态动词</li>\n</ul>\n<ol start=\"3\">\n<li>不可做谓语动词</li>\n</ol>\n<ul>\n<li>非谓语动词\n<ul>\n<li>不定式</li>\n<li>过去分词</li>\n<li>现在分词</li>\n<li>动名词</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "英语学习之路",
                "语法学习",
                "英语语法学习"
            ]
        },
        {
            "id": "https://blog.aayu.today/english/grammar/20220911/",
            "url": "https://blog.aayu.today/english/grammar/20220911/",
            "title": "英语语法学习（1）：语法综述",
            "date_published": "2022-09-11T13:45:10.000Z",
            "content_html": "<h2 id=\"视频讲解\"><a class=\"anchor\" href=\"#视频讲解\">#</a> 视频讲解</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhZNDExSjdhRz9wPTI=\">【英语兔】英语语法精讲合集 (全面，通俗，有趣 | 从零打造系统语法体系)：英语语法综述</span></p>\n<h2 id=\"简单句\"><a class=\"anchor\" href=\"#简单句\">#</a> 简单句</h2>\n<p>概括为 <code>什么 + 怎么样</code> ，对应两个句子成分： <code>主语 + 谓语</code> ，即  <code>人/物 + 动作/发生了什么事</code></p>\n<ol>\n<li>\n<p>可以独立完成的动作： <code>主语 + 不及物动词</code></p>\n<ul>\n<li>举个🌰：Papa Rabbit sleeps. 兔老爹睡觉</li>\n</ul>\n</li>\n<li>\n<p>有 1 个动作的承受者： <code>主语 + 单及物动词 + 宾语</code></p>\n<ul>\n<li>举个🌰：Papa Rabbit likes you. 兔老爹喜欢你</li>\n</ul>\n</li>\n<li>\n<p>有 2 个动作承受者： <code>主语 + 双及物动词 + 间接宾语 + 直接宾语</code></p>\n<ul>\n<li>举个🌰：Papa Rabbit teaches you English. 兔老爹教你英语。</li>\n</ul>\n</li>\n<li>\n<p>只有 1 个动作承受者（但需补充）： <code>主语 + 复杂及物动词 + 宾语 + （宾语）补语</code></p>\n<ul>\n<li>举个🌰：Papa Rabbit considers you smart. 兔老爹认为你聪明</li>\n</ul>\n</li>\n<li>\n<p>非动词： <code>主语 + 系动词 + （主语）补语/表语</code></p>\n<ul>\n<li>举个🌰：Papa Rabbit is tall. 兔老爹是高的.</li>\n<li>举个🌰：Papa Rabbit looks tall. 兔老爹看起来高.</li>\n<li>举个🌰：Papa Rabbit smells nice. 兔老爹闻上去香.</li>\n</ul>\n</li>\n</ol>\n<div class=\"note info\">\n<p>第 5 类句子的动词被称为 <code>连系动词 Linking Verbs</code> ，即我们耳熟能详的 <code>系动词</code> ～</p>\n</div>\n<div class=\"note primary\">\n<p>还有一种 <code>八大句型</code> 的分类，即在 <code>五大句型</code> 基础上增加：<br />\n6.  <code>There be</code>  句型，如：There is a rabbit. 可理解为第五种句型 <code>主语 + 系动词 + 表语</code> 的倒装<br />\n 7.  <code>主语 + 谓语动词 + 状语</code> ，如：I live in China. 可理解为第一种句型 <code>主语 + 谓语动词</code> 的延伸（虽然这里的状语很重要）<br />\n8.  <code>主语 + 谓语动词 + 宾语 + 状语</code> ，如：I put the carrot on the table. 可理解为第四种句型 <code>主语 + 谓语动词 + 宾语 + 宾语补语</code> 的延伸。</p>\n</div>\n<h2 id=\"句子成分\"><a class=\"anchor\" href=\"#句子成分\">#</a> 句子成分</h2>\n<ol>\n<li>主语</li>\n<li>谓语动词\n<ul>\n<li>谓语动词 ≠ 谓语， <code>谓语动词是谓语的一部分</code> 。谓语动词按如上简单句可以分为 5 类：</li>\n<li>可以独立完成的动作： <code>不及物动词</code></li>\n<li>有一个动作的承受者： <code>单及物动词</code></li>\n<li>有二个动作承受者： <code>双及物动词</code></li>\n<li>只有一个动作承受者： <code>复杂及物动词</code></li>\n<li>非动词： <code>系动词</code></li>\n</ul>\n</li>\n<li>宾语</li>\n<li>宾语补语</li>\n<li>主语补语（表语）</li>\n<li>定语\n<ul>\n<li>主要用来修饰主语或宾语</li>\n<li>举个🌰：The little white rabbit ate a large carrot. 这只小白兔吃了一根大胡萝卜</li>\n</ul>\n</li>\n<li>状语\n<ul>\n<li>主要用来修饰谓语动词</li>\n<li>举个🌰：The rabbit ate quickly. 兔子快速地吃</li>\n</ul>\n</li>\n<li>同位语\n<ul>\n<li>主要用来再把主语或宾语重复一遍</li>\n<li>举个🌰：Papa Rabbit, an English teacher, eats carrots. 兔老爹，一个英语老师，吃胡萝卜</li>\n</ul>\n</li>\n</ol>\n<div class=\"note info\">\n<p>你可能听过 <code>插入语</code> ，如：This carrot, I think（插入语）, is very tasty. 但是插入语是独立的，不作句子成分</p>\n</div>\n<h2 id=\"复合句compound-sentence\"><a class=\"anchor\" href=\"#复合句compound-sentence\">#</a> 复合句（Compound Sentence）</h2>\n<p>或并列句，句子的简单叠加，也称并列复合句</p>\n<h2 id=\"复杂句complex-sentence\"><a class=\"anchor\" href=\"#复杂句complex-sentence\">#</a> 复杂句（Complex Sentence）</h2>\n<p>从属关系，也称主从复合句，此处并不禁止套娃 😎</p>\n<ul>\n<li>简单句，作主语，是主语从句</li>\n<li>简单句，作宾语，是宾语从句</li>\n<li>简单句，作主语补语（表语），是表语从句</li>\n<li>简单句，作同位语，是同位语从句</li>\n</ul>\n<div class=\"note info\">\n<p>以上这几种从句都具有名词的性质，所以又合称为名词性从句</p>\n</div>\n<p>简单句还可以</p>\n<ul>\n<li>作定语，即定语从句</li>\n<li>作状语，即状语从句</li>\n</ul>\n<h2 id=\"词性词类\"><a class=\"anchor\" href=\"#词性词类\">#</a> 词性（词类）</h2>\n<p>两个句子的句型相同，但包含的词类不一定相同，同一类句子成分里可能有不同的词类，词类可分为以下几类</p>\n<ol>\n<li>\n<p>名词，nouns，表人和物</p>\n<ul>\n<li>举个🌰：Papa Rabbit is a  <code>rabbit</code> . 兔老爹是只兔子</li>\n</ul>\n</li>\n<li>\n<p>冠词，articles，英语中说明人和事物</p>\n<ul>\n<li>如上个例子中的  <code>a</code></li>\n</ul>\n</li>\n<li>\n<p>代词，pronouns，替代人和物</p>\n<ul>\n<li>举个🌰： <code>I</code>  am a rabbit. 我是只兔子</li>\n</ul>\n</li>\n<li>\n<p>形容词，adjective，形容人和物</p>\n<ul>\n<li>举个🌰：I am a  <code>smart</code>  rabbit. 我是只聪明的兔子</li>\n</ul>\n</li>\n<li>\n<p>数词，numerals，表数量</p>\n<ul>\n<li>举个🌰：I ate  <code>two</code>  carrots. 我吃了两根胡萝卜</li>\n</ul>\n</li>\n<li>\n<p>副词，adverbs，修饰动词或形容词等等</p>\n<ul>\n<li>举个🌰：I ate two carrots  <code>quickly</code> . 我很快地吃了两根胡萝卜</li>\n</ul>\n</li>\n<li>\n<p>介词，prepositions，表示和其他词关系的词</p>\n<ul>\n<li>举个🌰：I ate two carrots  <code>with</code>  chopsticks. 我用筷子吃了两根胡萝卜</li>\n</ul>\n</li>\n<li>\n<p>叹词，interjections，表感叹</p>\n<ul>\n<li>举个🌰： <code>Ah</code> , the carrot is tasty! 啊，胡萝卜好美味！</li>\n</ul>\n</li>\n<li>\n<p>连词，conjunctions，连接词和句</p>\n<ul>\n<li>举个🌰：I ate two carrots and a potato,  <code>because</code>  I was hungry. 我吃了两根胡萝卜和一个马铃薯，因为我饿了</li>\n</ul>\n</li>\n</ol>\n<p>以上九类和 <code>动词（verbs）</code> 一起，便是英语的十大词类！</p>\n<div class=\"note primary\">\n<p>句子成分 ≠ 词类。句子成分和句子中的词类是完全不同的概念，如下图，除了谓语动词是动词，其他句子成分都可能包含不同的词类～</p>\n</div>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/09/12/202209120213626.png\" alt=\"\" /></p>\n<h3 id=\"谓语动词\"><a class=\"anchor\" href=\"#谓语动词\">#</a> 谓语动词</h3>\n<p>谓语动词的三大本领</p>\n<ol>\n<li>动作 <code>时</code> 间\n<ul>\n<li>现在</li>\n<li>过去</li>\n<li>将来</li>\n<li>过去将来</li>\n</ul>\n</li>\n<li>动作状 <code>态</code>\n<ul>\n<li>一般</li>\n<li>完成</li>\n<li>进行</li>\n<li>完成进行</li>\n</ul>\n</li>\n</ol>\n<p>以上时态进行排列组合，理论上有 16 种可能的时态（噔噔咚），如下图</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/09/12/202209120224828.png\" alt=\"\" /></p>\n<ol start=\"3\">\n<li>动作假设，情感，也成为动词的 <code>语气</code>\n<ul>\n<li>虚拟语气：If I were a rabbit ...</li>\n<li>陈述语气：I ate a carrot and ...</li>\n<li>祈使语气：Eat this carrot and ...</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"助动词auxiliary-verbs\"><a class=\"anchor\" href=\"#助动词auxiliary-verbs\">#</a> 助动词（Auxiliary Verbs）</h4>\n<p>谓语动词往往需要搭配助动词才能完成以上本领，以及表否定、可能性、必须性等意思</p>\n<p>如动词 <code>吃：eat</code> ，可以和助动词结合如下：</p>\n<ul>\n<li>（协助）表示 <code>吃过了（完成）</code>  =&gt; have =&gt; have eaten</li>\n<li>（协助）表示 <code>正在吃（进行）</code>  =&gt; be =&gt; is eating</li>\n<li>（协助）表示 <code>被吃</code>  =&gt; be =&gt; be eaten</li>\n<li>（协助）表示 <code>有能力吃</code>  =&gt; can =&gt; can eat</li>\n<li>（协助）表示 <code>有可能吃</code>  =&gt; might =&gt; might eat</li>\n<li>（协助）表示 <code>有义务吃</code>  =&gt; must =&gt; must eaten</li>\n<li>（协助）表示 <code>不吃（否定）</code>  =&gt; do =&gt; do not eat</li>\n</ul>\n<h3 id=\"非谓语动词\"><a class=\"anchor\" href=\"#非谓语动词\">#</a> 非谓语动词</h3>\n<p>非谓语动词可以取代几乎所有的从句，从而简化句子，需要结合上下文才能区分是谓语动词还是非谓语动词，如下</p>\n<ol>\n<li>\n<p>动词不定式，长得和谓语动词原形一样</p>\n<ul>\n<li>Rabbits  <code>eat</code>  carrots.（谓语动词）</li>\n<li>To  <code>eat</code>  or not to eat?（非谓语动词 - 动词不定式）</li>\n</ul>\n</li>\n<li>\n<p>现在分词</p>\n</li>\n<li>\n<p>动名词，长得和谓语动词进行状态一样</p>\n<ul>\n<li>The rabbit is  <code>eating</code> .（谓语动词）</li>\n<li><code>Eating</code>  everything, I survived.（非谓语动词 - 现在分词）</li>\n<li><code>Eating</code>  carrots is healthy.（非谓语动词 - 动名词）</li>\n</ul>\n</li>\n<li>\n<p>过去分词，长得和谓语动词的完成状态一样</p>\n<ul>\n<li>The rabbit has  <code>eaten</code> .（谓语动词）</li>\n<li>This is a half- <code>eaten</code>  carrot.（非谓语动词 - 过去分词）</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h2>\n<p>英语语法的核心就是动词！</p>\n<p><img data-src=\"https://image.aayu.today/uploads/2022/09/12/202209120258266.png\" alt=\"\" /></p>\n",
            "tags": [
                "英语学习之路",
                "语法学习",
                "英语语法学习"
            ]
        }
    ]
}